{"id":"3d02631b53aade5bd6cdf676d868e1f0","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MangoNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {\n  using Counters for Counters.Counter;\n\n  Counters.Counter private _tokenIdCounter;\n\n  constructor() ERC721(\"Mango\", \"MGK\") {}\n\n  function pause() public onlyOwner {\n    _pause();\n  }\n\n  function unpause() public onlyOwner {\n    _unpause();\n  }\n\n  function safeMint(address to, string memory uri) public onlyOwner {\n    uint256 tokenId = _tokenIdCounter.current();\n    _tokenIdCounter.increment();\n    _safeMint(to, tokenId);\n    _setTokenURI(tokenId, uri);\n  }\n\n  function _beforeTokenTransfer(address from, address to, uint256 tokenId, uint256 batchSize)\n    internal\n    whenNotPaused\n    override\n  {\n    super._beforeTokenTransfer(from, to, tokenId, batchSize);\n  }\n\n  // The following functions are overrides required by Solidity.\n\n  function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\n    super._burn(tokenId);\n  }\n\n  function tokenURI(uint256 tokenId)\n    public\n    view\n    override(ERC721, ERC721URIStorage)\n    returns (string memory)\n  {\n    return super.tokenURI(tokenId);\n  }\n  \n  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {\n  return super.supportsInterface(interfaceId);\n}\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[],"version":"0.8.8","long_version":"0.8.8+commit.dddeac2f.Darwin.appleclang","zk_version":"1.3.10","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1844],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1845,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1844,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1844],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"}},"@openzeppelin/contracts/interfaces/IERC165.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2183]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":2184,"src":"116:44:1","symbolAliases":[],"unitAlias":""}],"src":"91:70:1"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[2183],"IERC4906":[137],"IERC721":[1291]},"id":138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":138,"sourceUnit":116,"src":"132:23:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":138,"sourceUnit":141,"src":"156:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":121,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2183,"src":"248:7:2"},"id":122,"nodeType":"InheritanceSpecifier","src":"248:7:2"},{"baseName":{"id":123,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1291,"src":"257:7:2"},"id":124,"nodeType":"InheritanceSpecifier","src":"257:7:2"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"181:45:2","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":137,"linearizedBaseContracts":[137,1291,2183],"name":"IERC4906","nameLocation":"236:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"271:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"id":129,"name":"MetadataUpdate","nameLocation":"483:14:2","nodeType":"EventDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"506:8:2","nodeType":"VariableDeclaration","scope":129,"src":"498:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:18:2"},"src":"477:39:2"},{"anonymous":false,"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"522:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"id":136,"name":"BatchMetadataUpdate","nameLocation":"745:19:2","nodeType":"EventDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"773:12:2","nodeType":"VariableDeclaration","scope":136,"src":"765:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":134,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"795:10:2","nodeType":"VariableDeclaration","scope":136,"src":"787:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:42:2"},"src":"739:68:2"}],"scope":138,"src":"226:583:2","usedErrors":[]}],"src":"107:703:2"}},"@openzeppelin/contracts/interfaces/IERC721.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC165":[2183],"IERC721":[1291]},"id":141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":139,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":141,"sourceUnit":1292,"src":"116:37:3","symbolAliases":[],"unitAlias":""}],"src":"91:63:3"}},"@openzeppelin/contracts/security/Pausable.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[1844],"Pausable":[248]},"id":249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":142,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":1845,"src":"130:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":145,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1844,"src":"632:7:4"},"id":146,"nodeType":"InheritanceSpecifier","src":"632:7:4"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"162:439:4","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":248,"linearizedBaseContracts":[248,1844],"name":"Pausable","nameLocation":"620:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"646:73:4","text":" @dev Emitted when the pause is triggered by `account`."},"id":151,"name":"Paused","nameLocation":"730:6:4","nodeType":"EventDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:4","nodeType":"VariableDeclaration","scope":151,"src":"737:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:4"},"src":"724:30:4"},{"anonymous":false,"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"760:70:4","text":" @dev Emitted when the pause is lifted by `account`."},"id":156,"name":"Unpaused","nameLocation":"841:8:4","nodeType":"EventDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:4","nodeType":"VariableDeclaration","scope":156,"src":"850:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:4"},"src":"835:32:4"},{"constant":false,"id":158,"mutability":"mutable","name":"_paused","nameLocation":"886:7:4","nodeType":"VariableDeclaration","scope":248,"src":"873:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":157,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":166,"nodeType":"Block","src":"986:32:4","statements":[{"expression":{"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":162,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"996:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"996:15:4"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"900:67:4","text":" @dev Initializes the contract in unpaused state."},"id":167,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"983:2:4"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"986:0:4"},"scope":248,"src":"972:46:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":174,"nodeType":"Block","src":"1229:47:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":170,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1239:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"ExpressionStatement","src":"1239:19:4"},{"id":173,"nodeType":"PlaceholderStatement","src":"1268:1:4"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1024:175:4","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":175,"name":"whenNotPaused","nameLocation":"1213:13:4","nodeType":"ModifierDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"1226:2:4"},"src":"1204:72:4","virtual":false,"visibility":"internal"},{"body":{"id":182,"nodeType":"Block","src":"1476:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1486:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"ExpressionStatement","src":"1486:16:4"},{"id":181,"nodeType":"PlaceholderStatement","src":"1512:1:4"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"1282:167:4","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":183,"name":"whenPaused","nameLocation":"1463:10:4","nodeType":"ModifierDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"1473:2:4"},"src":"1454:66:4","virtual":false,"visibility":"internal"},{"body":{"id":191,"nodeType":"Block","src":"1668:31:4","statements":[{"expression":{"id":189,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1685:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":188,"id":190,"nodeType":"Return","src":"1678:14:4"}]},"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1526:84:4","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":192,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:4","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"1630:2:4"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"1662:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:4"},"scope":248,"src":"1615:84:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":203,"nodeType":"Block","src":"1818:55:4","statements":[{"expression":{"arguments":[{"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:4","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1837:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"1828:38:4"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1705:57:4","text":" @dev Throws if the contract is paused."},"id":204,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:4","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"1793:2:4"},"returnParameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"1818:0:4"},"scope":248,"src":"1767:106:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":214,"nodeType":"Block","src":"1993:58:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":209,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2011:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"2003:41:4"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1879:61:4","text":" @dev Throws if the contract is not paused."},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:4","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"1968:2:4"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[],"src":"1993:0:4"},"scope":248,"src":"1945:106:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":230,"nodeType":"Block","src":"2235:66:4","statements":[{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"2245:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"ExpressionStatement","src":"2245:14:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":226,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"2281:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":225,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2274:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"EmitStatement","src":"2269:25:4"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2057:124:4","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":231,"implemented":true,"kind":"function","modifiers":[{"id":219,"kind":"modifierInvocation","modifierName":{"id":218,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":175,"src":"2221:13:4"},"nodeType":"ModifierInvocation","src":"2221:13:4"}],"name":"_pause","nameLocation":"2195:6:4","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2201:2:4"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"2235:0:4"},"scope":248,"src":"2186:115:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":246,"nodeType":"Block","src":"2481:69:4","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":237,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"2491:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"2491:15:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":242,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"2530:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2521:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":245,"nodeType":"EmitStatement","src":"2516:27:4"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"2307:121:4","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":247,"implemented":true,"kind":"function","modifiers":[{"id":235,"kind":"modifierInvocation","modifierName":{"id":234,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":183,"src":"2470:10:4"},"nodeType":"ModifierInvocation","src":"2470:10:4"}],"name":"_unpause","nameLocation":"2442:8:4","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"2450:2:4"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"2481:0:4"},"scope":248,"src":"2433:117:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":249,"src":"602:1950:4","usedErrors":[]}],"src":"105:2448:4"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1822],"Context":[1844],"ERC165":[2171],"ERC721":[1175],"IERC165":[2183],"IERC721":[1291],"IERC721Metadata":[1492],"IERC721Receiver":[1309],"Math":[3049],"SignedMath":[3154],"Strings":[2147]},"id":1176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":1292,"src":"132:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":1310,"src":"156:31:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":1493,"src":"188:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":1823,"src":"231:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":1845,"src":"265:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":2148,"src":"299:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1176,"sourceUnit":2172,"src":"333:46:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":259,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1844,"src":"647:7:5"},"id":260,"nodeType":"InheritanceSpecifier","src":"647:7:5"},{"baseName":{"id":261,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"656:6:5"},"id":262,"nodeType":"InheritanceSpecifier","src":"656:6:5"},{"baseName":{"id":263,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1291,"src":"664:7:5"},"id":264,"nodeType":"InheritanceSpecifier","src":"664:7:5"},{"baseName":{"id":265,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"673:15:5"},"id":266,"nodeType":"InheritanceSpecifier","src":"673:15:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"381:246:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1175,"linearizedBaseContracts":[1175,1492,1291,2171,2183,1844],"name":"ERC721","nameLocation":"637:6:5","nodeType":"ContractDefinition","nodes":[{"id":269,"libraryName":{"id":267,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"701:7:5"},"nodeType":"UsingForDirective","src":"695:26:5","typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":272,"libraryName":{"id":270,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"732:7:5"},"nodeType":"UsingForDirective","src":"726:26:5","typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":274,"mutability":"mutable","name":"_name","nameLocation":"791:5:5","nodeType":"VariableDeclaration","scope":1175,"src":"776:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":273,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":276,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:5","nodeType":"VariableDeclaration","scope":1175,"src":"823:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":275,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":280,"mutability":"mutable","name":"_owners","nameLocation":"934:7:5","nodeType":"VariableDeclaration","scope":1175,"src":"898:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":279,"keyType":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":284,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:5","nodeType":"VariableDeclaration","scope":1175,"src":"992:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":283,"keyType":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":288,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:5","nodeType":"VariableDeclaration","scope":1175,"src":"1093:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":287,"keyType":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":294,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:5","nodeType":"VariableDeclaration","scope":1175,"src":"1199:71:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":293,"keyType":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":292,"keyType":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":291,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":310,"nodeType":"Block","src":"1446:57:5","statements":[{"expression":{"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":302,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"1456:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":303,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1464:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":305,"nodeType":"ExpressionStatement","src":"1456:13:5"},{"expression":{"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":306,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1479:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":307,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"1489:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":309,"nodeType":"ExpressionStatement","src":"1479:17:5"}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"1277:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":311,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"name_","nameLocation":"1416:5:5","nodeType":"VariableDeclaration","scope":311,"src":"1402:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":296,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:5","nodeType":"VariableDeclaration","scope":311,"src":"1423:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":298,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:5"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"1446:0:5"},"scope":1175,"src":"1390:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2170,2182],"body":{"id":341,"nodeType":"Block","src":"1678:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1707:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":324,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1727:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1291_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1291_$","typeString":"type(contract IERC721)"}],"id":323,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1291","typeString":"type(contract IERC721)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":328,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1763:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":330,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"1783:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1492_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1492_$","typeString":"type(contract IERC721Metadata)"}],"id":329,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1492","typeString":"type(contract IERC721Metadata)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":337,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1851:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":335,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1175_$","typeString":"type(contract super ERC721)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"1827:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":321,"id":340,"nodeType":"Return","src":"1688:175:5"}]},"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"1509:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":342,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:5","nodeType":"FunctionDefinition","overrides":{"id":318,"nodeType":"OverrideSpecifier","overrides":[{"id":316,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"1646:6:5"},{"id":317,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2183,"src":"1654:7:5"}],"src":"1637:25:5"},"parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:5","nodeType":"VariableDeclaration","scope":342,"src":"1597:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":313,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:5"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":342,"src":"1672:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:5"},"scope":1175,"src":"1570:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1216],"body":{"id":365,"nodeType":"Block","src":"2010:123:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2028:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:5","typeDescriptions":{}}},"id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":351,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"2020:73:5"},{"expression":{"baseExpression":{"id":361,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"2110:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":363,"indexExpression":{"id":362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2120:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":350,"id":364,"nodeType":"Return","src":"2103:23:5"}]},"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"1876:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":366,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:5","nodeType":"FunctionDefinition","overrides":{"id":347,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:5"},"parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"owner","nameLocation":"1956:5:5","nodeType":"VariableDeclaration","scope":366,"src":"1948:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:5"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"2001:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:5"},"scope":1175,"src":"1929:204:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1224],"body":{"id":393,"nodeType":"Block","src":"2271:138:5","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"owner","nameLocation":"2289:5:5","nodeType":"VariableDeclaration","scope":393,"src":"2281:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":380,"initialValue":{"arguments":[{"id":378,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2306:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":377,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"2297:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2332:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:5","typeDescriptions":{}}},"id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"2324:56:5"},{"expression":{"id":391,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2397:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":374,"id":392,"nodeType":"Return","src":"2390:12:5"}]},"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2139:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":394,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:5","nodeType":"FunctionDefinition","overrides":{"id":371,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:5"},"parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:5","nodeType":"VariableDeclaration","scope":394,"src":"2207:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:5"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":394,"src":"2262:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:5"},"scope":1175,"src":"2190:219:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1477],"body":{"id":403,"nodeType":"Block","src":"2540:29:5","statements":[{"expression":{"id":401,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2557:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":400,"id":402,"nodeType":"Return","src":"2550:12:5"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"2415:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:5","nodeType":"FunctionDefinition","overrides":{"id":397,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:5"},"parameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"2484:2:5"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2525:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":398,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:5"},"scope":1175,"src":"2471:98:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1483],"body":{"id":413,"nodeType":"Block","src":"2704:31:5","statements":[{"expression":{"id":411,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2721:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":410,"id":412,"nodeType":"Return","src":"2714:14:5"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2575:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":414,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:5","nodeType":"FunctionDefinition","overrides":{"id":407,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:5"},"parameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"2648:2:5"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":414,"src":"2689:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":408,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:5"},"scope":1175,"src":"2633:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1491],"body":{"id":452,"nodeType":"Block","src":"2889:188:5","statements":[{"expression":{"arguments":[{"id":424,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":423,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2899:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"ExpressionStatement","src":"2899:23:5"},{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:5","nodeType":"VariableDeclaration","scope":452,"src":"2933:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":427,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":429,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2957:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":434,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2990:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":432,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:5","typeDescriptions":{}}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:5","trueExpression":{"arguments":[{"arguments":[{"id":443,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3036:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"3045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1977,"src":"3045:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":439,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:5","typeDescriptions":{}}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":422,"id":451,"nodeType":"Return","src":"2977:93:5"}]},"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"2741:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:5","nodeType":"FunctionDefinition","overrides":{"id":419,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:5"},"parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":453,"src":"2819:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:5"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"2874:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":420,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:5"},"scope":1175,"src":"2801:276:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":461,"nodeType":"Block","src":"3385:26:5","statements":[{"expression":{"hexValue":"","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":458,"id":460,"nodeType":"Return","src":"3395:9:5"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"3083:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":462,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:5","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"3336:2:5"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"3370:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:5"},"scope":1175,"src":"3319:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1264],"body":{"id":504,"nodeType":"Block","src":"3538:336:5","statements":[{"assignments":[472],"declarations":[{"constant":false,"id":472,"mutability":"mutable","name":"owner","nameLocation":"3556:5:5","nodeType":"VariableDeclaration","scope":504,"src":"3548:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":477,"initialValue":{"arguments":[{"id":475,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":473,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3564:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1175_$","typeString":"type(contract ERC721)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":394,"src":"3564:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3605:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":480,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3611:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"ExpressionStatement","src":"3597:57:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":486,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3686:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":488,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3702:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3728:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":492,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3735:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":490,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"3711:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"3665:170:5"},{"expression":{"arguments":[{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3855:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":499,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"3846:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3846:21:5"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"3417:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:5","nodeType":"FunctionDefinition","overrides":{"id":469,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:5"},"parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"to","nameLocation":"3493:2:5","nodeType":"VariableDeclaration","scope":505,"src":"3485:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:5","nodeType":"VariableDeclaration","scope":505,"src":"3497:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:5"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"3538:0:5"},"scope":1175,"src":"3468:406:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1280],"body":{"id":522,"nodeType":"Block","src":"4020:82:5","statements":[{"expression":{"arguments":[{"id":515,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"4030:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"ExpressionStatement","src":"4030:23:5"},{"expression":{"baseExpression":{"id":518,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"4071:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":520,"indexExpression":{"id":519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":513,"id":521,"nodeType":"Return","src":"4064:31:5"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3880:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":523,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:5","nodeType":"FunctionDefinition","overrides":{"id":510,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:5"},"parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:5","nodeType":"VariableDeclaration","scope":523,"src":"3956:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:5"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":523,"src":"4011:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:5"},"scope":1175,"src":"3935:167:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1272],"body":{"id":539,"nodeType":"Block","src":"4253:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":533,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"4282:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":535,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"4296:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4306:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":532,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4263:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4263:52:5"}]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"4108:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:5","nodeType":"FunctionDefinition","overrides":{"id":530,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:5"},"parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"operator","nameLocation":"4204:8:5","nodeType":"VariableDeclaration","scope":540,"src":"4196:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"approved","nameLocation":"4219:8:5","nodeType":"VariableDeclaration","scope":540,"src":"4214:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":527,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:5"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"4253:0:5"},"scope":1175,"src":"4169:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1290],"body":{"id":557,"nodeType":"Block","src":"4491:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":551,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4508:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":553,"indexExpression":{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4527:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":555,"indexExpression":{"id":554,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4534:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":550,"id":556,"nodeType":"Return","src":"4501:42:5"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4328:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":558,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:5","nodeType":"FunctionDefinition","overrides":{"id":547,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:5"},"parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"owner","nameLocation":"4422:5:5","nodeType":"VariableDeclaration","scope":558,"src":"4414:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"operator","nameLocation":"4437:8:5","nodeType":"VariableDeclaration","scope":558,"src":"4429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:5"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"4485:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:5"},"scope":1175,"src":"4388:162:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1256],"body":{"id":584,"nodeType":"Block","src":"4701:207:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":571,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"4790:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":573,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4804:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"4771:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4763:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"4763:99:5"},{"expression":{"arguments":[{"id":579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4883:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4889:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4873:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4873:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"ExpressionStatement","src":"4873:28:5"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"4556:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":585,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:5","nodeType":"FunctionDefinition","overrides":{"id":567,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:5"},"parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"from","nameLocation":"4642:4:5","nodeType":"VariableDeclaration","scope":585,"src":"4634:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"to","nameLocation":"4656:2:5","nodeType":"VariableDeclaration","scope":585,"src":"4648:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:5","nodeType":"VariableDeclaration","scope":585,"src":"4660:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:5"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"4701:0:5"},"scope":1175,"src":"4612:296:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1246],"body":{"id":603,"nodeType":"Block","src":"5067:56:5","statements":[{"expression":{"arguments":[{"id":597,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5094:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":598,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5100:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"5104:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":596,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[604,634],"referencedDeclaration":634,"src":"5077:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5077:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"5077:39:5"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"4914:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:5","nodeType":"FunctionDefinition","overrides":{"id":594,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:5"},"parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"from","nameLocation":"5008:4:5","nodeType":"VariableDeclaration","scope":604,"src":"5000:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"to","nameLocation":"5022:2:5","nodeType":"VariableDeclaration","scope":604,"src":"5014:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:5","nodeType":"VariableDeclaration","scope":604,"src":"5026:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:5"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"5067:0:5"},"scope":1175,"src":"4974:149:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1236],"body":{"id":633,"nodeType":"Block","src":"5301:164:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":619,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"5338:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5352:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":618,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"5319:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5319:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5311:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"5311:99:5"},{"expression":{"arguments":[{"id":627,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"5434:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5440:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"5444:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":630,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"5453:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":626,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5420:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5420:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"5420:38:5"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"5129:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":634,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:5","nodeType":"FunctionDefinition","overrides":{"id":615,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:5"},"parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"from","nameLocation":"5223:4:5","nodeType":"VariableDeclaration","scope":634,"src":"5215:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"to","nameLocation":"5237:2:5","nodeType":"VariableDeclaration","scope":634,"src":"5229:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:5","nodeType":"VariableDeclaration","scope":634,"src":"5241:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"data","nameLocation":"5271:4:5","nodeType":"VariableDeclaration","scope":634,"src":"5258:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":612,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:5"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"5301:0:5"},"scope":1175,"src":"5189:276:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":662,"nodeType":"Block","src":"6428:165:5","statements":[{"expression":{"arguments":[{"id":647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"6448:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"6454:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":646,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"6438:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6438:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"ExpressionStatement","src":"6438:28:5"},{"expression":{"arguments":[{"arguments":[{"id":654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"6507:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"6513:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6517:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":657,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6526:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":653,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6484:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6484:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:110:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"6476:110:5"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"5471:850:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:5","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"from","nameLocation":"6357:4:5","nodeType":"VariableDeclaration","scope":663,"src":"6349:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"to","nameLocation":"6371:2:5","nodeType":"VariableDeclaration","scope":663,"src":"6363:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:5","nodeType":"VariableDeclaration","scope":663,"src":"6375:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"data","nameLocation":"6405:4:5","nodeType":"VariableDeclaration","scope":663,"src":"6392:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":642,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:5"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"6428:0:5"},"scope":1175,"src":"6326:267:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"6777:40:5","statements":[{"expression":{"baseExpression":{"id":671,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"6794:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":673,"indexExpression":{"id":672,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":670,"id":674,"nodeType":"Return","src":"6787:23:5"}]},"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"6599:98:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:5","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:5","nodeType":"VariableDeclaration","scope":676,"src":"6720:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:5"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"6768:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:5"},"scope":1175,"src":"6702:115:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"7191:55:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"7217:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":684,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"7208:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7208:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:5","typeDescriptions":{}}},"id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":683,"id":692,"nodeType":"Return","src":"7201:38:5"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"6823:292:5","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:5","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:5","nodeType":"VariableDeclaration","scope":694,"src":"7137:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:5"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"7185:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:5"},"scope":1175,"src":"7120:126:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":727,"nodeType":"Block","src":"7503:162:5","statements":[{"assignments":[705],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"owner","nameLocation":"7521:5:5","nodeType":"VariableDeclaration","scope":727,"src":"7513:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":710,"initialValue":{"arguments":[{"id":708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":706,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"7529:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1175_$","typeString":"type(contract ERC721)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":394,"src":"7529:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:5"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"7570:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":712,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"7581:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":715,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"7607:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"7614:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":714,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7590:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7590:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"7626:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7626:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":722,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"7650:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":703,"id":726,"nodeType":"Return","src":"7562:96:5"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"7252:147:5","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":728,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:5","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"spender","nameLocation":"7440:7:5","nodeType":"VariableDeclaration","scope":728,"src":"7432:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:5","nodeType":"VariableDeclaration","scope":728,"src":"7449:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:5"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"7497:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":701,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:5"},"scope":1175,"src":"7404:261:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":742,"nodeType":"Block","src":"8060:43:5","statements":[{"expression":{"arguments":[{"id":737,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"8080:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":736,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[743,772],"referencedDeclaration":772,"src":"8070:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8070:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"8070:26:5"}]},"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"7671:319:5","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":743,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:5","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"to","nameLocation":"8022:2:5","nodeType":"VariableDeclaration","scope":743,"src":"8014:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:5","nodeType":"VariableDeclaration","scope":743,"src":"8026:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:5"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"8060:0:5"},"scope":1175,"src":"7995:108:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":771,"nodeType":"Block","src":"8408:195:5","statements":[{"expression":{"arguments":[{"id":754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8424:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8428:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8418:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8418:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"8418:18:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:5","typeDescriptions":{}}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8490:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"8502:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8506:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":766,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8515:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":759,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"8467:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8467:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8446:150:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"ExpressionStatement","src":"8446:150:5"}]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"8109:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:5","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"to","nameLocation":"8351:2:5","nodeType":"VariableDeclaration","scope":772,"src":"8343:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:5","nodeType":"VariableDeclaration","scope":772,"src":"8355:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"data","nameLocation":"8385:4:5","nodeType":"VariableDeclaration","scope":772,"src":"8372:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:5"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"8408:0:5"},"scope":1175,"src":"8324:279:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"8986:859:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9004:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:5","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"8996:61:5"},{"expression":{"arguments":[{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:5","subExpression":{"arguments":[{"id":792,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":791,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9076:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"9067:58:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:5","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9157:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9169:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":798,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"9136:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9136:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"9136:48:5"},{"expression":{"arguments":[{"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:5","subExpression":{"arguments":[{"id":810,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9288:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":809,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9280:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9280:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9271:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"9271:58:5"},{"id":822,"nodeType":"UncheckedBlock","src":"9340:360:5","statements":[{"expression":{"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":816,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"9671:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":818,"indexExpression":{"id":817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9681:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":821,"nodeType":"ExpressionStatement","src":"9671:18:5"}]},{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":823,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"9710:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":825,"indexExpression":{"id":824,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":826,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9729:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":828,"nodeType":"ExpressionStatement","src":"9710:21:5"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:5","typeDescriptions":{}}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9756:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9768:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9772:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":829,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"9747:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9747:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"EmitStatement","src":"9742:38:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:5","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9811:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9823:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":838,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"9791:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"ExpressionStatement","src":"9791:47:5"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"8609:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:5","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"to","nameLocation":"8948:2:5","nodeType":"VariableDeclaration","scope":849,"src":"8940:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:5","nodeType":"VariableDeclaration","scope":849,"src":"8952:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:5"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"8986:0:5"},"scope":1175,"src":"8925:920:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":915,"nodeType":"Block","src":"10220:713:5","statements":[{"assignments":[856],"declarations":[{"constant":false,"id":856,"mutability":"mutable","name":"owner","nameLocation":"10238:5:5","nodeType":"VariableDeclaration","scope":915,"src":"10230:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":861,"initialValue":{"arguments":[{"id":859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10261:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":857,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"10246:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1175_$","typeString":"type(contract ERC721)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":394,"src":"10246:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10246:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:5"},{"expression":{"arguments":[{"id":863,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10301:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:5","typeDescriptions":{}}},"id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10308:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10320:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":862,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"10280:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10280:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"10280:51:5"},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":872,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10433:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":873,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"10441:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1175_$","typeString":"type(contract ERC721)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":394,"src":"10441:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":878,"nodeType":"ExpressionStatement","src":"10433:31:5"},{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:5","subExpression":{"baseExpression":{"id":879,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"10509:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":881,"indexExpression":{"id":880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10525:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"10502:31:5"},{"id":890,"nodeType":"UncheckedBlock","src":"10544:237:5","statements":[{"expression":{"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":884,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"10749:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":886,"indexExpression":{"id":885,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10759:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":889,"nodeType":"ExpressionStatement","src":"10749:21:5"}]},{"expression":{"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:5","subExpression":{"baseExpression":{"id":891,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"10797:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":893,"indexExpression":{"id":892,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"10790:23:5"},{"eventCall":{"arguments":[{"id":897,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10838:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:5","typeDescriptions":{}}},"id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10845:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10857:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":896,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"10829:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10829:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"EmitStatement","src":"10824:41:5"},{"expression":{"arguments":[{"id":906,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10896:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:5","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10915:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":905,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"10876:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10876:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"10876:50:5"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"9851:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":916,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:5","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:5","nodeType":"VariableDeclaration","scope":916,"src":"10186:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:5"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"10220:0:5"},"scope":1175,"src":"10171:762:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1000,"nodeType":"Block","src":"11336:1124:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":929,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"11369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":927,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"11354:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1175_$","typeString":"type(contract ERC721)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":394,"src":"11354:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11354:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":931,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"11381:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"11346:81:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11445:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:5","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11451:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11437:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"11437:65:5"},{"expression":{"arguments":[{"id":947,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"11534:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11540:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"11544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":946,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"11513:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11513:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"11513:42:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"11670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":954,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"11655:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1175_$","typeString":"type(contract ERC721)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":394,"src":"11655:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11655:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":958,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"11682:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"11647:81:5"},{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:5","subExpression":{"baseExpression":{"id":963,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"11797:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":965,"indexExpression":{"id":964,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"11813:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":967,"nodeType":"ExpressionStatement","src":"11790:31:5"},{"id":980,"nodeType":"UncheckedBlock","src":"11832:496:5","statements":[{"expression":{"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":968,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"12265:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":970,"indexExpression":{"id":969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"12275:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":973,"nodeType":"ExpressionStatement","src":"12265:20:5"},{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":974,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"12299:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":976,"indexExpression":{"id":975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12309:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":979,"nodeType":"ExpressionStatement","src":"12299:18:5"}]},{"expression":{"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":981,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"12337:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":983,"indexExpression":{"id":982,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"12345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12356:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":986,"nodeType":"ExpressionStatement","src":"12337:21:5"},{"eventCall":{"arguments":[{"id":988,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"12383:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":989,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12389:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":990,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"12393:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":987,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"12374:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12374:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"EmitStatement","src":"12369:32:5"},{"expression":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"12432:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12438:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"12442:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":993,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"12412:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12412:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"12412:41:5"}]},"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"10939:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1001,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:5","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"from","nameLocation":"11284:4:5","nodeType":"VariableDeclaration","scope":1001,"src":"11276:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"to","nameLocation":"11298:2:5","nodeType":"VariableDeclaration","scope":1001,"src":"11290:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:5","nodeType":"VariableDeclaration","scope":1001,"src":"11302:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:5"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"11336:0:5"},"scope":1175,"src":"11257:1203:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1024,"nodeType":"Block","src":"12636:107:5","statements":[{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1009,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"12646:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1011,"indexExpression":{"id":1010,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"12673:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1014,"nodeType":"ExpressionStatement","src":"12646:29:5"},{"eventCall":{"arguments":[{"arguments":[{"id":1018,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1016,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"12699:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1175_$","typeString":"type(contract ERC721)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":394,"src":"12699:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12699:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"12724:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1015,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"12690:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12690:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1023,"nodeType":"EmitStatement","src":"12685:51:5"}]},"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"12466:101:5","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1025,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:5","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"to","nameLocation":"12598:2:5","nodeType":"VariableDeclaration","scope":1025,"src":"12590:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:5","nodeType":"VariableDeclaration","scope":1025,"src":"12602:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:5"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"12636:0:5"},"scope":1175,"src":"12572:171:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1056,"nodeType":"Block","src":"12972:184:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1036,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"12990:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1037,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"12999:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12982:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"12982:55:5"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1042,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"13047:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1045,"indexExpression":{"id":1043,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"13066:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1046,"indexExpression":{"id":1044,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"13073:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1047,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"13085:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"ExpressionStatement","src":"13047:46:5"},{"eventCall":{"arguments":[{"id":1051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"13123:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"13130:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"13140:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1050,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"13108:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13108:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"EmitStatement","src":"13103:46:5"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"12749:125:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:5","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"owner","nameLocation":"12915:5:5","nodeType":"VariableDeclaration","scope":1057,"src":"12907:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"operator","nameLocation":"12930:8:5","nodeType":"VariableDeclaration","scope":1057,"src":"12922:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"approved","nameLocation":"12945:8:5","nodeType":"VariableDeclaration","scope":1057,"src":"12940:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:5"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"12972:0:5"},"scope":1175,"src":"12879:277:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"13303:70:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"13329:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1064,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"13321:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13313:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"13313:53:5"}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"13162:73:5","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:5","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:5","nodeType":"VariableDeclaration","scope":1071,"src":"13264:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:5"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"13303:0:5"},"scope":1175,"src":"13240:133:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"14080:676:5","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1085,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"14094:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1510,"src":"14094:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14094:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1130,"nodeType":"Block","src":"14714:36:5","statements":[{"expression":{"hexValue":"74727565","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1084,"id":1129,"nodeType":"Return","src":"14728:11:5"}]},"id":1131,"nodeType":"IfStatement","src":"14090:660:5","trueBody":{"id":1127,"nodeType":"Block","src":"14111:597:5","statements":[{"clauses":[{"block":{"id":1107,"nodeType":"Block","src":"14225:91:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"14250:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1102,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"14260:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1309_$","typeString":"type(contract IERC721Receiver)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1308,"src":"14260:32:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14260:41:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1084,"id":1106,"nodeType":"Return","src":"14243:58:5"}]},"errorName":"","id":1108,"nodeType":"TryCatchClause","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"retval","nameLocation":"14217:6:5","nodeType":"VariableDeclaration","scope":1108,"src":"14210:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1098,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:5"},"src":"14201:115:5"},{"block":{"id":1124,"nodeType":"Block","src":"14345:353:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1112,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"14367:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14367:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1122,"nodeType":"Block","src":"14494:190:5","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:5","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:5"},"nodeType":"YulFunctionCall","src":"14613:15:5"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:5"},"nodeType":"YulFunctionCall","src":"14630:13:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:5"},"nodeType":"YulFunctionCall","src":"14606:38:5"},"nodeType":"YulExpressionStatement","src":"14606:38:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1110,"isOffset":false,"isSlot":false,"src":"14621:6:5","valueSize":1},{"declaration":1110,"isOffset":false,"isSlot":false,"src":"14636:6:5","valueSize":1}],"id":1121,"nodeType":"InlineAssembly","src":"14571:95:5"}]},"id":1123,"nodeType":"IfStatement","src":"14363:321:5","trueBody":{"id":1120,"nodeType":"Block","src":"14387:101:5","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1116,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14409:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"ExpressionStatement","src":"14409:60:5"}]}}]},"errorName":"","id":1125,"nodeType":"TryCatchClause","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"reason","nameLocation":"14337:6:5","nodeType":"VariableDeclaration","scope":1125,"src":"14324:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:5"},"src":"14317:381:5"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1092,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"14166:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14166:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"14180:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"14186:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"14195:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1089,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"14145:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1088,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"14129:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1309_$","typeString":"type(contract IERC721Receiver)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1309","typeString":"contract IERC721Receiver"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1308,"src":"14129:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:71:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1126,"nodeType":"TryStatement","src":"14125:573:5"}]}}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"13379:541:5","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:5","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"from","nameLocation":"13974:4:5","nodeType":"VariableDeclaration","scope":1133,"src":"13966:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"to","nameLocation":"13996:2:5","nodeType":"VariableDeclaration","scope":1133,"src":"13988:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:5","nodeType":"VariableDeclaration","scope":1133,"src":"14008:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"data","nameLocation":"14046:4:5","nodeType":"VariableDeclaration","scope":1133,"src":"14033:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1079,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:5"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"14074:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1082,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:5"},"scope":1175,"src":"13925:831:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1145,"nodeType":"Block","src":"15586:2:5","statements":[]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"14762:705:5","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:5","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"from","nameLocation":"15510:4:5","nodeType":"VariableDeclaration","scope":1146,"src":"15502:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"to","nameLocation":"15524:2:5","nodeType":"VariableDeclaration","scope":1146,"src":"15516:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:5","nodeType":"VariableDeclaration","scope":1146,"src":"15528:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:5","nodeType":"VariableDeclaration","scope":1146,"src":"15550:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:5"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"15586:0:5"},"scope":1175,"src":"15472:116:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"16407:2:5","statements":[]},"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"15594:695:5","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:5","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"from","nameLocation":"16331:4:5","nodeType":"VariableDeclaration","scope":1159,"src":"16323:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"to","nameLocation":"16345:2:5","nodeType":"VariableDeclaration","scope":1159,"src":"16337:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:5","nodeType":"VariableDeclaration","scope":1159,"src":"16349:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:5","nodeType":"VariableDeclaration","scope":1159,"src":"16371:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:5"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[],"src":"16407:0:5"},"scope":1175,"src":"16294:115:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"16958:45:5","statements":[{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"16968:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1169,"indexExpression":{"id":1168,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"16978:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1170,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"16990:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"nodeType":"ExpressionStatement","src":"16968:28:5"}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"16415:409:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:5","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"account","nameLocation":"16924:7:5","nodeType":"VariableDeclaration","scope":1174,"src":"16916:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"amount","nameLocation":"16941:6:5","nodeType":"VariableDeclaration","scope":1174,"src":"16933:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:5"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[],"src":"16958:0:5"},"scope":1175,"src":"16882:121:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1176,"src":"628:16377:5","usedErrors":[]}],"src":"107:16899:5"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2183],"IERC721":[1291]},"id":1292,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1177,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":2184,"src":"133:47:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1180,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2183,"src":"271:7:6"},"id":1181,"nodeType":"InheritanceSpecifier","src":"271:7:6"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"182:67:6","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1291,"linearizedBaseContracts":[1291,2183],"name":"IERC721","nameLocation":"260:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"285:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1190,"name":"Transfer","nameLocation":"384:8:6","nodeType":"EventDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:6","nodeType":"VariableDeclaration","scope":1190,"src":"393:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:6","nodeType":"VariableDeclaration","scope":1190,"src":"415:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:6","nodeType":"VariableDeclaration","scope":1190,"src":"435:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:6"},"src":"378:82:6"},{"anonymous":false,"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"466:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1199,"name":"Approval","nameLocation":"571:8:6","nodeType":"EventDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:6","nodeType":"VariableDeclaration","scope":1199,"src":"580:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:6","nodeType":"VariableDeclaration","scope":1199,"src":"603:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:6","nodeType":"VariableDeclaration","scope":1199,"src":"629:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:6"},"src":"565:89:6"},{"anonymous":false,"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"660:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1208,"name":"ApprovalForAll","nameLocation":"788:14:6","nodeType":"EventDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:6","nodeType":"VariableDeclaration","scope":1208,"src":"803:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:6","nodeType":"VariableDeclaration","scope":1208,"src":"826:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1206,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:6","nodeType":"VariableDeclaration","scope":1208,"src":"852:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1205,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:6"},"src":"782:85:6"},{"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"873:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1216,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:6","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"owner","nameLocation":"981:5:6","nodeType":"VariableDeclaration","scope":1216,"src":"973:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:6"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"balance","nameLocation":"1019:7:6","nodeType":"VariableDeclaration","scope":1216,"src":"1011:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:6"},"scope":1291,"src":"954:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"1034:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1224,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:6","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:6","nodeType":"VariableDeclaration","scope":1224,"src":"1187:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:6"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"owner","nameLocation":"1235:5:6","nodeType":"VariableDeclaration","scope":1224,"src":"1227:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:6"},"scope":1291,"src":"1170:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"1248:556:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1236,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:6","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"from","nameLocation":"1843:4:6","nodeType":"VariableDeclaration","scope":1236,"src":"1835:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"to","nameLocation":"1857:2:6","nodeType":"VariableDeclaration","scope":1236,"src":"1849:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:6","nodeType":"VariableDeclaration","scope":1236,"src":"1861:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"data","nameLocation":"1893:4:6","nodeType":"VariableDeclaration","scope":1236,"src":"1878:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1232,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:6"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"1907:0:6"},"scope":1291,"src":"1809:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"1914:687:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1246,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:6","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"from","nameLocation":"2640:4:6","nodeType":"VariableDeclaration","scope":1246,"src":"2632:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"to","nameLocation":"2654:2:6","nodeType":"VariableDeclaration","scope":1246,"src":"2646:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:6","nodeType":"VariableDeclaration","scope":1246,"src":"2658:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:6"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[],"src":"2683:0:6"},"scope":1291,"src":"2606:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"2690:732:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1256,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:6","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"from","nameLocation":"3457:4:6","nodeType":"VariableDeclaration","scope":1256,"src":"3449:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"to","nameLocation":"3471:2:6","nodeType":"VariableDeclaration","scope":1256,"src":"3463:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:6","nodeType":"VariableDeclaration","scope":1256,"src":"3475:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:6"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"3500:0:6"},"scope":1291,"src":"3427:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"3507:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1264,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:6","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"to","nameLocation":"3989:2:6","nodeType":"VariableDeclaration","scope":1264,"src":"3981:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:6","nodeType":"VariableDeclaration","scope":1264,"src":"3993:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:6"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[],"src":"4018:0:6"},"scope":1291,"src":"3964:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"4025:309:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1272,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:6","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"operator","nameLocation":"4374:8:6","nodeType":"VariableDeclaration","scope":1272,"src":"4366:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"approved","nameLocation":"4389:8:6","nodeType":"VariableDeclaration","scope":1272,"src":"4384:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1268,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:6"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[],"src":"4407:0:6"},"scope":1291,"src":"4339:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"4414:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1280,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:6","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:6","nodeType":"VariableDeclaration","scope":1280,"src":"4579:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:6"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"operator","nameLocation":"4627:8:6","nodeType":"VariableDeclaration","scope":1280,"src":"4619:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:6"},"scope":1291,"src":"4558:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"4643:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1290,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:6","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"owner","nameLocation":"4820:5:6","nodeType":"VariableDeclaration","scope":1290,"src":"4812:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"operator","nameLocation":"4835:8:6","nodeType":"VariableDeclaration","scope":1290,"src":"4827:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:6"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"4868:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1287,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:6"},"scope":1291,"src":"4786:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1292,"src":"250:4626:6","usedErrors":[]}],"src":"108:4769:6"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1309]},"id":1310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1293,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"141:152:7","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1309,"linearizedBaseContracts":[1309],"name":"IERC721Receiver","nameLocation":"304:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"326:493:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1308,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:7","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"operator","nameLocation":"867:8:7","nodeType":"VariableDeclaration","scope":1308,"src":"859:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"from","nameLocation":"893:4:7","nodeType":"VariableDeclaration","scope":1308,"src":"885:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:7","nodeType":"VariableDeclaration","scope":1308,"src":"907:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"data","nameLocation":"947:4:7","nodeType":"VariableDeclaration","scope":1308,"src":"932:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1302,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:7"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1308,"src":"976:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1305,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:7"},"scope":1309,"src":"824:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1310,"src":"294:692:7","usedErrors":[]}],"src":"116:871:7"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1822],"Context":[1844],"ERC165":[2171],"ERC721":[1175],"ERC721URIStorage":[1465],"IERC165":[2183],"IERC4906":[137],"IERC721":[1291],"IERC721Metadata":[1492],"IERC721Receiver":[1309],"Math":[3049],"SignedMath":[3154],"Strings":[2147]},"id":1466,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1311,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1466,"sourceUnit":1176,"src":"153:23:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1466,"sourceUnit":138,"src":"177:42:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1315,"name":"IERC4906","nodeType":"IdentifierPath","referencedDeclaration":137,"src":"329:8:8"},"id":1316,"nodeType":"InheritanceSpecifier","src":"329:8:8"},{"baseName":{"id":1317,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"339:6:8"},"id":1318,"nodeType":"InheritanceSpecifier","src":"339:6:8"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"221:69:8","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":1465,"linearizedBaseContracts":[1465,1175,1492,137,1291,2171,2183,1844],"name":"ERC721URIStorage","nameLocation":"309:16:8","nodeType":"ContractDefinition","nodes":[{"id":1321,"libraryName":{"id":1319,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"358:7:8"},"nodeType":"UsingForDirective","src":"352:26:8","typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1325,"mutability":"mutable","name":"_tokenURIs","nameLocation":"458:10:8","nodeType":"VariableDeclaration","scope":1465,"src":"423:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1324,"keyType":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1323,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[342,2182],"body":{"id":1348,"nodeType":"Block","src":"643:97:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"660:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:10:8","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"675:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1337,"name":"bytes4","nodeType":"ElementaryTypeName","src":"675:6:8","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"675:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"660:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1344,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"721:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1342,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"697:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1465_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":342,"src":"697:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"697:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"660:73:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1335,"id":1347,"nodeType":"Return","src":"653:80:8"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"475:55:8","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1349,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"544:17:8","nodeType":"FunctionDefinition","overrides":{"id":1332,"nodeType":"OverrideSpecifier","overrides":[{"id":1330,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"611:6:8"},{"id":1331,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2183,"src":"619:7:8"}],"src":"602:25:8"},"parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"interfaceId","nameLocation":"569:11:8","nodeType":"VariableDeclaration","scope":1349,"src":"562:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1327,"name":"bytes4","nodeType":"ElementaryTypeName","src":"562:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"561:20:8"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1349,"src":"637:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1333,"name":"bool","nodeType":"ElementaryTypeName","src":"637:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"636:6:8"},"scope":1465,"src":"535:205:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[453],"body":{"id":1407,"nodeType":"Block","src":"894:520:8","statements":[{"expression":{"arguments":[{"id":1359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"919:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1358,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"904:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"ExpressionStatement","src":"904:23:8"},{"assignments":[1363],"declarations":[{"constant":false,"id":1363,"mutability":"mutable","name":"_tokenURI","nameLocation":"952:9:8","nodeType":"VariableDeclaration","scope":1407,"src":"938:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1362,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1367,"initialValue":{"baseExpression":{"id":1364,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"964:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1366,"indexExpression":{"id":1365,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"975:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"938:45:8"},{"assignments":[1369],"declarations":[{"constant":false,"id":1369,"mutability":"mutable","name":"base","nameLocation":"1007:4:8","nodeType":"VariableDeclaration","scope":1407,"src":"993:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1368,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1372,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1370,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1014:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1014:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"993:31:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1375,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"1103:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"1097:5:8","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1097:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1097:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1097:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1383,"nodeType":"IfStatement","src":"1093:70:8","trueBody":{"id":1382,"nodeType":"Block","src":"1122:41:8","statements":[{"expression":{"id":1380,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1143:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1357,"id":1381,"nodeType":"Return","src":"1136:16:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1386,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1271:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1384,"name":"bytes","nodeType":"ElementaryTypeName","src":"1265:5:8","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1265:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1265:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"1261:106:8","trueBody":{"id":1400,"nodeType":"Block","src":"1294:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1395,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"1339:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1396,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1345:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1393,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1322:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1322:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1322:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1315:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1391,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:8","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1357,"id":1399,"nodeType":"Return","src":"1308:48:8"}]}},{"expression":{"arguments":[{"id":1404,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"1399:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1402,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1465_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":453,"src":"1384:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1384:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1357,"id":1406,"nodeType":"Return","src":"1377:30:8"}]},"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"746:55:8","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1408,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"815:8:8","nodeType":"FunctionDefinition","overrides":{"id":1354,"nodeType":"OverrideSpecifier","overrides":[],"src":"861:8:8"},"parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"tokenId","nameLocation":"832:7:8","nodeType":"VariableDeclaration","scope":1408,"src":"824:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:17:8"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1408,"src":"879:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1355,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:8"},"scope":1465,"src":"806:608:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1433,"nodeType":"Block","src":"1680:172:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1418,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1706:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1417,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1698:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1698:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1690:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"1690:75:8"},{"expression":{"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1423,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"1775:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1425,"indexExpression":{"id":1424,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1786:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1775:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1426,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"1797:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1775:31:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1428,"nodeType":"ExpressionStatement","src":"1775:31:8"},{"eventCall":{"arguments":[{"id":1430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1837:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1429,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"1822:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1822:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1432,"nodeType":"EmitStatement","src":"1817:28:8"}]},"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"1420:174:8","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1608:12:8","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"tokenId","nameLocation":"1629:7:8","nodeType":"VariableDeclaration","scope":1434,"src":"1621:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"_tokenURI","nameLocation":"1652:9:8","nodeType":"VariableDeclaration","scope":1434,"src":"1638:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1412,"name":"string","nodeType":"ElementaryTypeName","src":"1638:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:42:8"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"1680:0:8"},"scope":1465,"src":"1599:253:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[916],"body":{"id":1463,"nodeType":"Block","src":"2128:142:8","statements":[{"expression":{"arguments":[{"id":1444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2150:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1441,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2138:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1465_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":916,"src":"2138:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2138:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"2138:20:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1449,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"2179:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1451,"indexExpression":{"id":1450,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2190:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2179:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2173:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1447,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:8","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2173:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2173:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1462,"nodeType":"IfStatement","src":"2169:95:8","trueBody":{"id":1461,"nodeType":"Block","src":"2213:51:8","statements":[{"expression":{"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2227:26:8","subExpression":{"baseExpression":{"id":1456,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"2234:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1458,"indexExpression":{"id":1457,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2245:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1460,"nodeType":"ExpressionStatement","src":"2227:26:8"}]}}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"1858:207:8","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2079:5:8","nodeType":"FunctionDefinition","overrides":{"id":1439,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:8"},"parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"tokenId","nameLocation":"2093:7:8","nodeType":"VariableDeclaration","scope":1464,"src":"2085:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2084:17:8"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"2128:0:8"},"scope":1465,"src":"2070:200:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1466,"src":"291:1981:8","usedErrors":[]}],"src":"128:2145:8"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2183],"IERC721":[1291],"IERC721Metadata":[1492]},"id":1493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1467,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1493,"sourceUnit":1292,"src":"137:24:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1470,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1291,"src":"326:7:9"},"id":1471,"nodeType":"InheritanceSpecifier","src":"326:7:9"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"163:133:9","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1492,"linearizedBaseContracts":[1492,1291,2183],"name":"IERC721Metadata","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"340:58:9","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1477,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:9","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"416:2:9"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"442:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1474,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:9"},"scope":1492,"src":"403:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"463:60:9","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1483,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:9","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"543:2:9"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"569:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1480,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:9"},"scope":1492,"src":"528:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"590:90:9","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1491,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:9","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:9","nodeType":"VariableDeclaration","scope":1491,"src":"703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:9"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"743:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1488,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:9"},"scope":1492,"src":"685:73:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1493,"src":"297:463:9","usedErrors":[]}],"src":"112:649:9"}},"@openzeppelin/contracts/utils/Address.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1822]},"id":1823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1494,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1822,"linearizedBaseContracts":[1822],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1509,"nodeType":"Block","src":"1478:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1503,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1702:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1502,"id":1508,"nodeType":"Return","src":"1695:30:10"}]},"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"216:1191:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:10","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"account","nameLocation":"1440:7:10","nodeType":"VariableDeclaration","scope":1510,"src":"1432:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:10"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"1472:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1500,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:10"},"scope":1822,"src":"1412:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"2718:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1521,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1822","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1822","typeString":"library Address"}],"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:10","typeDescriptions":{}}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1524,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2761:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"ExpressionStatement","src":"2728:73:10"},{"assignments":[1530,null],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"success","nameLocation":"2818:7:10","nodeType":"VariableDeclaration","scope":1543,"src":"2813:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1529,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1537,"initialValue":{"arguments":[{"hexValue":"","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1531,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2831:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1533,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2853:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:10"},{"expression":{"arguments":[{"id":1539,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2882:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"2874:78:10"}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"1738:904:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:10","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:10","nodeType":"VariableDeclaration","scope":1544,"src":"2666:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"amount","nameLocation":"2701:6:10","nodeType":"VariableDeclaration","scope":1544,"src":"2693:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:10"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[],"src":"2718:0:10"},"scope":1822,"src":"2647:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"3790:96:10","statements":[{"expression":{"arguments":[{"id":1555,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"3829:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1556,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"3837:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1554,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1602,1646],"referencedDeclaration":1646,"src":"3807:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1553,"id":1560,"nodeType":"Return","src":"3800:79:10"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"2965:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:10","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"target","nameLocation":"3731:6:10","nodeType":"VariableDeclaration","scope":1562,"src":"3723:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"data","nameLocation":"3752:4:10","nodeType":"VariableDeclaration","scope":1562,"src":"3739:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1548,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:10"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1562,"src":"3776:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1551,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:10"},"scope":1822,"src":"3701:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1581,"nodeType":"Block","src":"4255:76:10","statements":[{"expression":{"arguments":[{"id":1575,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"4294:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"4302:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1578,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4311:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1574,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1602,1646],"referencedDeclaration":1646,"src":"4272:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1573,"id":1580,"nodeType":"Return","src":"4265:59:10"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"3892:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:10","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"target","nameLocation":"4147:6:10","nodeType":"VariableDeclaration","scope":1582,"src":"4139:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"data","nameLocation":"4176:4:10","nodeType":"VariableDeclaration","scope":1582,"src":"4163:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1566,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:10","nodeType":"VariableDeclaration","scope":1582,"src":"4190:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:10"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1582,"src":"4241:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:10"},"scope":1822,"src":"4108:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"4806:111:10","statements":[{"expression":{"arguments":[{"id":1595,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"4845:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"4853:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"4859:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1594,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1602,1646],"referencedDeclaration":1646,"src":"4823:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1593,"id":1600,"nodeType":"Return","src":"4816:94:10"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"4337:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:10","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"target","nameLocation":"4732:6:10","nodeType":"VariableDeclaration","scope":1602,"src":"4724:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"data","nameLocation":"4753:4:10","nodeType":"VariableDeclaration","scope":1602,"src":"4740:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1586,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"value","nameLocation":"4767:5:10","nodeType":"VariableDeclaration","scope":1602,"src":"4759:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:10"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1602,"src":"4792:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:10"},"scope":1822,"src":"4693:224:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"5344:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1619,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1822","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1822","typeString":"library Address"}],"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:10","typeDescriptions":{}}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"5387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"ExpressionStatement","src":"5354:81:10"},{"assignments":[1628,1630],"declarations":[{"constant":false,"id":1628,"mutability":"mutable","name":"success","nameLocation":"5451:7:10","nodeType":"VariableDeclaration","scope":1645,"src":"5446:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1627,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:10","nodeType":"VariableDeclaration","scope":1645,"src":"5460:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1629,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1637,"initialValue":{"arguments":[{"id":1635,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"5513:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1631,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"5487:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"5506:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:10"},{"expression":{"arguments":[{"id":1639,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"5562:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1640,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"5570:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1641,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5579:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1642,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5591:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1638,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"5535:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1615,"id":1644,"nodeType":"Return","src":"5528:76:10"}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"4923:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:10","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"target","nameLocation":"5213:6:10","nodeType":"VariableDeclaration","scope":1646,"src":"5205:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"data","nameLocation":"5242:4:10","nodeType":"VariableDeclaration","scope":1646,"src":"5229:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"5264:5:10","nodeType":"VariableDeclaration","scope":1646,"src":"5256:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:10","nodeType":"VariableDeclaration","scope":1646,"src":"5279:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1610,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:10"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1646,"src":"5330:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1613,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:10"},"scope":1822,"src":"5165:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1662,"nodeType":"Block","src":"5888:97:10","statements":[{"expression":{"arguments":[{"id":1657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5924:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"5932:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1656,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1663,1692],"referencedDeclaration":1692,"src":"5905:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1655,"id":1661,"nodeType":"Return","src":"5898:80:10"}]},"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"5617:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:10","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"target","nameLocation":"5824:6:10","nodeType":"VariableDeclaration","scope":1663,"src":"5816:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"data","nameLocation":"5845:4:10","nodeType":"VariableDeclaration","scope":1663,"src":"5832:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1650,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:10"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"5874:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1653,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:10"},"scope":1822,"src":"5788:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1691,"nodeType":"Block","src":"6327:168:10","statements":[{"assignments":[1676,1678],"declarations":[{"constant":false,"id":1676,"mutability":"mutable","name":"success","nameLocation":"6343:7:10","nodeType":"VariableDeclaration","scope":1691,"src":"6338:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1675,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:10","nodeType":"VariableDeclaration","scope":1691,"src":"6352:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1677,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1683,"initialValue":{"arguments":[{"id":1681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"6397:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1679,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"6379:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:10"},{"expression":{"arguments":[{"id":1685,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"6446:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1686,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6454:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1687,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"6463:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1688,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"6475:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1684,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"6419:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1674,"id":1690,"nodeType":"Return","src":"6412:76:10"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"5991:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:10","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"target","nameLocation":"6214:6:10","nodeType":"VariableDeclaration","scope":1692,"src":"6206:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"data","nameLocation":"6243:4:10","nodeType":"VariableDeclaration","scope":1692,"src":"6230:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1667,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:10","nodeType":"VariableDeclaration","scope":1692,"src":"6257:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1669,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:10"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1692,"src":"6313:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1672,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:10"},"scope":1822,"src":"6169:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"6771:101:10","statements":[{"expression":{"arguments":[{"id":1703,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"6809:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1704,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6817:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1702,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1709,1738],"referencedDeclaration":1738,"src":"6788:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1701,"id":1707,"nodeType":"Return","src":"6781:84:10"}]},"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"6501:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:10","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"target","nameLocation":"6712:6:10","nodeType":"VariableDeclaration","scope":1709,"src":"6704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"data","nameLocation":"6733:4:10","nodeType":"VariableDeclaration","scope":1709,"src":"6720:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1696,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:10"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"6757:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1699,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:10"},"scope":1822,"src":"6674:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1737,"nodeType":"Block","src":"7213:170:10","statements":[{"assignments":[1722,1724],"declarations":[{"constant":false,"id":1722,"mutability":"mutable","name":"success","nameLocation":"7229:7:10","nodeType":"VariableDeclaration","scope":1737,"src":"7224:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1721,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:10","nodeType":"VariableDeclaration","scope":1737,"src":"7238:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1723,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1729,"initialValue":{"arguments":[{"id":1727,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"7285:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1725,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"7265:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:10"},{"expression":{"arguments":[{"id":1731,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"7334:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1732,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"7342:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1733,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"7351:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1734,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"7363:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1730,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"7307:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1720,"id":1736,"nodeType":"Return","src":"7300:76:10"}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"6878:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1738,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:10","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"target","nameLocation":"7105:6:10","nodeType":"VariableDeclaration","scope":1738,"src":"7097:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"data","nameLocation":"7134:4:10","nodeType":"VariableDeclaration","scope":1738,"src":"7121:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1713,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:10","nodeType":"VariableDeclaration","scope":1738,"src":"7148:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1715,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:10"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1738,"src":"7199:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1718,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:10"},"scope":1822,"src":"7058:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1776,"nodeType":"Block","src":"7865:434:10","statements":[{"condition":{"id":1752,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"7879:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1774,"nodeType":"Block","src":"8235:58:10","statements":[{"expression":{"arguments":[{"id":1770,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"8257:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1771,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"8269:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1769,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"8249:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1773,"nodeType":"ExpressionStatement","src":"8249:33:10"}]},"id":1775,"nodeType":"IfStatement","src":"7875:418:10","trueBody":{"id":1768,"nodeType":"Block","src":"7888:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1753,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"7906:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1765,"nodeType":"IfStatement","src":"7902:286:10","trueBody":{"id":1764,"nodeType":"Block","src":"7930:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1759,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"8132:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1758,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"8121:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"8113:60:10"}]}},{"expression":{"id":1766,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"8208:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1751,"id":1767,"nodeType":"Return","src":"8201:17:10"}]}}]},"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"7389:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:10","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"target","nameLocation":"7724:6:10","nodeType":"VariableDeclaration","scope":1777,"src":"7716:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"success","nameLocation":"7745:7:10","nodeType":"VariableDeclaration","scope":1777,"src":"7740:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1742,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:10","nodeType":"VariableDeclaration","scope":1777,"src":"7762:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1744,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:10","nodeType":"VariableDeclaration","scope":1777,"src":"7795:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1746,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:10"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"7851:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1749,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:10"},"scope":1822,"src":"7671:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"8680:135:10","statements":[{"condition":{"id":1789,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"8694:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1798,"nodeType":"Block","src":"8751:58:10","statements":[{"expression":{"arguments":[{"id":1794,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8773:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1795,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"8785:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1793,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"8765:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1797,"nodeType":"ExpressionStatement","src":"8765:33:10"}]},"id":1799,"nodeType":"IfStatement","src":"8690:119:10","trueBody":{"id":1792,"nodeType":"Block","src":"8703:42:10","statements":[{"expression":{"id":1790,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8724:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1788,"id":1791,"nodeType":"Return","src":"8717:17:10"}]}}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"8305:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:10","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"success","nameLocation":"8560:7:10","nodeType":"VariableDeclaration","scope":1801,"src":"8555:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1779,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:10","nodeType":"VariableDeclaration","scope":1801,"src":"8577:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1781,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:10","nodeType":"VariableDeclaration","scope":1801,"src":"8610:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:10"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"8666:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1786,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:10"},"scope":1822,"src":"8520:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1820,"nodeType":"Block","src":"8904:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1808,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"8980:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1818,"nodeType":"Block","src":"9310:45:10","statements":[{"expression":{"arguments":[{"id":1815,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"9331:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1814,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1817,"nodeType":"ExpressionStatement","src":"9324:20:10"}]},"id":1819,"nodeType":"IfStatement","src":"8976:379:10","trueBody":{"id":1813,"nodeType":"Block","src":"9003:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:10"},"nodeType":"YulFunctionCall","src":"9202:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:10"},"nodeType":"YulFunctionCall","src":"9243:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:10"},"nodeType":"YulFunctionCall","src":"9236:44:10"},"nodeType":"YulExpressionStatement","src":"9236:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1803,"isOffset":false,"isSlot":false,"src":"9208:10:10","valueSize":1},{"declaration":1803,"isOffset":false,"isSlot":false,"src":"9251:10:10","valueSize":1}],"id":1812,"nodeType":"InlineAssembly","src":"9152:142:10"}]}}]},"id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:10","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:10","nodeType":"VariableDeclaration","scope":1821,"src":"8838:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1802,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:10","nodeType":"VariableDeclaration","scope":1821,"src":"8863:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1804,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:10"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"8904:0:10"},"scope":1822,"src":"8821:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1823,"src":"194:9169:10","usedErrors":[]}],"src":"101:9263:10"}},"@openzeppelin/contracts/utils/Context.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1844]},"id":1845,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1824,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1844,"linearizedBaseContracts":[1844],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1833,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":1830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1829,"id":1832,"nodeType":"Return","src":"712:17:11"}]},"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":1844,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1842,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":1839,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1838,"id":1841,"nodeType":"Return","src":"819:15:11"}]},"id":1843,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1843,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1836,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":1844,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1845,"src":"608:235:11","usedErrors":[]}],"src":"86:758:11"}},"@openzeppelin/contracts/utils/Counters.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1918]},"id":1919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1846,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"112:311:12","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1918,"linearizedBaseContracts":[1918],"name":"Counters","nameLocation":"432:8:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1850,"members":[{"constant":false,"id":1849,"mutability":"mutable","name":"_value","nameLocation":"794:6:12","nodeType":"VariableDeclaration","scope":1850,"src":"786:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:12","nodeType":"StructDefinition","scope":1918,"src":"447:374:12","visibility":"public"},{"body":{"id":1861,"nodeType":"Block","src":"901:38:12","statements":[{"expression":{"expression":{"id":1858,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"918:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"918:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1857,"id":1860,"nodeType":"Return","src":"911:21:12"}]},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:12","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"counter","nameLocation":"860:7:12","nodeType":"VariableDeclaration","scope":1862,"src":"844:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1852,"nodeType":"UserDefinedTypeName","pathNode":{"id":1851,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1850,"src":"844:7:12"},"referencedDeclaration":1850,"src":"844:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:12"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"892:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:12"},"scope":1918,"src":"827:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"998:70:12","statements":[{"id":1874,"nodeType":"UncheckedBlock","src":"1008:54:12","statements":[{"expression":{"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1868,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"1032:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"1032:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1873,"nodeType":"ExpressionStatement","src":"1032:19:12"}]}]},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:12","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"counter","nameLocation":"980:7:12","nodeType":"VariableDeclaration","scope":1876,"src":"964:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1864,"nodeType":"UserDefinedTypeName","pathNode":{"id":1863,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1850,"src":"964:7:12"},"referencedDeclaration":1850,"src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:12"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[],"src":"998:0:12"},"scope":1918,"src":"945:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1903,"nodeType":"Block","src":"1127:176:12","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"value","nameLocation":"1145:5:12","nodeType":"VariableDeclaration","scope":1903,"src":"1137:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1886,"initialValue":{"expression":{"id":1884,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1153:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"1153:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1185:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"ExpressionStatement","src":"1177:49:12"},{"id":1902,"nodeType":"UncheckedBlock","src":"1236:61:12","statements":[{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1894,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1260:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"1260:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1277:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"nodeType":"ExpressionStatement","src":"1260:26:12"}]}]},"id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:12","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"counter","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":1904,"src":"1093:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1878,"nodeType":"UserDefinedTypeName","pathNode":{"id":1877,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1850,"src":"1093:7:12"},"referencedDeclaration":1850,"src":"1093:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:12"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[],"src":"1127:0:12"},"scope":1918,"src":"1074:229:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1916,"nodeType":"Block","src":"1358:35:12","statements":[{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1910,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"1368:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1849,"src":"1368:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"1368:18:12"}]},"id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:12","nodeType":"FunctionDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"counter","nameLocation":"1340:7:12","nodeType":"VariableDeclaration","scope":1917,"src":"1324:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1906,"nodeType":"UserDefinedTypeName","pathNode":{"id":1905,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1850,"src":"1324:7:12"},"referencedDeclaration":1850,"src":"1324:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:12"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[],"src":"1358:0:12"},"scope":1918,"src":"1309:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1919,"src":"424:971:12","usedErrors":[]}],"src":"87:1309:12"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3049],"SignedMath":[3154],"Strings":[2147]},"id":2148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1920,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2148,"sourceUnit":3050,"src":"126:25:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2148,"sourceUnit":3155,"src":"152:31:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"185:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":2147,"linearizedBaseContracts":[2147],"name":"Strings","nameLocation":"228:7:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1926,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:13","nodeType":"VariableDeclaration","scope":2147,"src":"242:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1924,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1929,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:13","nodeType":"VariableDeclaration","scope":2147,"src":"302:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1927,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1976,"nodeType":"Block","src":"518:625:13","statements":[{"id":1975,"nodeType":"UncheckedBlock","src":"528:609:13","statements":[{"assignments":[1938],"declarations":[{"constant":false,"id":1938,"mutability":"mutable","name":"length","nameLocation":"560:6:13","nodeType":"VariableDeclaration","scope":1975,"src":"552:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"580:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1939,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"569:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3049_$","typeString":"type(library Math)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2886,"src":"569:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:13"},{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"buffer","nameLocation":"618:6:13","nodeType":"VariableDeclaration","scope":1975,"src":"604:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1946,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1952,"initialValue":{"arguments":[{"id":1950,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"638:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1948,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:13"},{"assignments":[1954],"declarations":[{"constant":false,"id":1954,"mutability":"mutable","name":"ptr","nameLocation":"667:3:13","nodeType":"VariableDeclaration","scope":1975,"src":"659:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1955,"nodeType":"VariableDeclarationStatement","src":"659:11:13"},{"AST":{"nodeType":"YulBlock","src":"740:67:13","statements":[{"nodeType":"YulAssignment","src":"758:35:13","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:13","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:13"},"nodeType":"YulFunctionCall","src":"777:15:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:13"},"nodeType":"YulFunctionCall","src":"765:28:13"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1947,"isOffset":false,"isSlot":false,"src":"769:6:13","valueSize":1},{"declaration":1938,"isOffset":false,"isSlot":false,"src":"785:6:13","valueSize":1},{"declaration":1954,"isOffset":false,"isSlot":false,"src":"758:3:13","valueSize":1}],"id":1956,"nodeType":"InlineAssembly","src":"731:76:13"},{"body":{"id":1971,"nodeType":"Block","src":"833:267:13","statements":[{"expression":{"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:13","subExpression":{"id":1958,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"851:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1960,"nodeType":"ExpressionStatement","src":"851:5:13"},{"AST":{"nodeType":"YulBlock","src":"934:84:13","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:13"},"nodeType":"YulFunctionCall","src":"974:14:13"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:13"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:13"},"nodeType":"YulFunctionCall","src":"969:30:13"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:13"},"nodeType":"YulFunctionCall","src":"956:44:13"},"nodeType":"YulExpressionStatement","src":"956:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1926,"isOffset":false,"isSlot":false,"src":"990:8:13","valueSize":1},{"declaration":1954,"isOffset":false,"isSlot":false,"src":"964:3:13","valueSize":1},{"declaration":1932,"isOffset":false,"isSlot":false,"src":"978:5:13","valueSize":1}],"id":1961,"nodeType":"InlineAssembly","src":"925:93:13"},{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1035:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1965,"nodeType":"ExpressionStatement","src":"1035:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1068:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1970,"nodeType":"IfStatement","src":"1064:21:13","trueBody":{"id":1969,"nodeType":"Break","src":"1080:5:13"}}]},"condition":{"hexValue":"74727565","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1972,"nodeType":"WhileStatement","src":"820:280:13"},{"expression":{"id":1973,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1120:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1936,"id":1974,"nodeType":"Return","src":"1113:13:13"}]}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"352:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:13","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"value","nameLocation":"473:5:13","nodeType":"VariableDeclaration","scope":1977,"src":"465:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:13"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"503:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1934,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:13"},"scope":2147,"src":"447:696:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2004,"nodeType":"Block","src":"1313:103:13","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"1354:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:13","trueExpression":{"hexValue":"2d","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"1400:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1996,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1385:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3154_$","typeString":"type(library SignedMath)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3153,"src":"1385:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1995,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1977,2005],"referencedDeclaration":1977,"src":"1376:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1987,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1985,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:13","typeDescriptions":{}}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1984,"id":2003,"nodeType":"Return","src":"1323:86:13"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"1149:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:13","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"value","nameLocation":"1268:5:13","nodeType":"VariableDeclaration","scope":2005,"src":"1261:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1979,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:13"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"1298:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1982,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:13"},"scope":2147,"src":"1243:173:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2024,"nodeType":"Block","src":"1595:100:13","statements":[{"id":2023,"nodeType":"UncheckedBlock","src":"1605:84:13","statements":[{"expression":{"arguments":[{"id":2014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"1648:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"1667:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2015,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"1655:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3049_$","typeString":"type(library Math)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3009,"src":"1655:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2025,2101,2121],"referencedDeclaration":2101,"src":"1636:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2012,"id":2022,"nodeType":"Return","src":"1629:49:13"}]}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"1422:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2025,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:13","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"value","nameLocation":"1550:5:13","nodeType":"VariableDeclaration","scope":2025,"src":"1542:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:13"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2025,"src":"1580:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2010,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:13"},"scope":2147,"src":"1521:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2100,"nodeType":"Block","src":"1908:347:13","statements":[{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:13","nodeType":"VariableDeclaration","scope":2100,"src":"1918:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2045,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2040,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1954:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2037,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:13"},{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2046,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1975:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2048,"indexExpression":{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2051,"nodeType":"ExpressionStatement","src":"1975:15:13"},{"expression":{"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2052,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2000:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2054,"indexExpression":{"hexValue":"31","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2057,"nodeType":"ExpressionStatement","src":"2000:15:13"},{"body":{"id":2086,"nodeType":"Block","src":"2070:83:13","statements":[{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2072,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2084:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2074,"indexExpression":{"id":2073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2091:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2075,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"2096:8:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2079,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2105:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2081,"nodeType":"ExpressionStatement","src":"2084:33:13"},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2131:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"2131:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2058:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2087,"initializationExpression":{"assignments":[2059],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"i","nameLocation":"2038:1:13","nodeType":"VariableDeclaration","scope":2087,"src":"2030:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2065,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2061,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"2046:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:13"},"loopExpression":{"expression":{"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:13","subExpression":{"id":2069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2067:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2071,"nodeType":"ExpressionStatement","src":"2065:3:13"},"nodeType":"ForStatement","src":"2025:128:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2170:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2094,"nodeType":"ExpressionStatement","src":"2162:55:13"},{"expression":{"arguments":[{"id":2097,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2241:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:13","typeDescriptions":{}}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2034,"id":2099,"nodeType":"Return","src":"2227:21:13"}]},"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"1701:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2101,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:13","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"value","nameLocation":"1847:5:13","nodeType":"VariableDeclaration","scope":2101,"src":"1839:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"length","nameLocation":"1862:6:13","nodeType":"VariableDeclaration","scope":2101,"src":"1854:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:13"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2101,"src":"1893:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2032,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:13"},"scope":2147,"src":"1818:437:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"2480:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2114,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"2525:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2112,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:13","typeDescriptions":{}}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:13","typeDescriptions":{}}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2117,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2533:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2109,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2025,2101,2121],"referencedDeclaration":2101,"src":"2497:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2108,"id":2119,"nodeType":"Return","src":"2490:59:13"}]},"documentation":{"id":2102,"nodeType":"StructuredDocumentation","src":"2261:141:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:13","nodeType":"FunctionDefinition","parameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"addr","nameLocation":"2436:4:13","nodeType":"VariableDeclaration","scope":2121,"src":"2428:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:13"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"2465:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2106,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:13"},"scope":2147,"src":"2407:149:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2145,"nodeType":"Block","src":"2711:66:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2744:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2132,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:13","typeDescriptions":{}}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2131,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2767:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2138,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:13","typeDescriptions":{}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2137,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2130,"id":2144,"nodeType":"Return","src":"2721:49:13"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"2562:66:13","text":" @dev Returns true if the two strings are equal."},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:13","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"a","nameLocation":"2662:1:13","nodeType":"VariableDeclaration","scope":2146,"src":"2648:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"b","nameLocation":"2679:1:13","nodeType":"VariableDeclaration","scope":2146,"src":"2665:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2125,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:13"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2146,"src":"2705:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2128,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:13"},"scope":2147,"src":"2633:144:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2148,"src":"220:2559:13","usedErrors":[]}],"src":"101:2679:13"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2171],"IERC165":[2183]},"id":2172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2149,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2172,"sourceUnit":2184,"src":"124:23:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2152,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2183,"src":"754:7:14"},"id":2153,"nodeType":"InheritanceSpecifier","src":"754:7:14"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"149:576:14","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2171,"linearizedBaseContracts":[2171,2183],"name":"ERC165","nameLocation":"744:6:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2182],"body":{"id":2169,"nodeType":"Block","src":"920:64:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"937:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2164,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2183_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2183_$","typeString":"type(contract IERC165)"}],"id":2163,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2183","typeString":"type(contract IERC165)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2161,"id":2168,"nodeType":"Return","src":"930:47:14"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"768:56:14","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:14","nodeType":"FunctionDefinition","overrides":{"id":2158,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:14"},"parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:14","nodeType":"VariableDeclaration","scope":2170,"src":"856:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2155,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:14"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"914:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2159,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:14"},"scope":2171,"src":"829:155:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2172,"src":"726:260:14","usedErrors":[]}],"src":"99:888:14"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2183]},"id":2184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2173,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"125:279:15","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2183,"linearizedBaseContracts":[2183],"name":"IERC165","nameLocation":"415:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"429:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2182,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:15","nodeType":"FunctionDefinition","parameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:15","nodeType":"VariableDeclaration","scope":2182,"src":"801:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2176,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:15"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2182,"src":"844:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2179,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:15"},"scope":2183,"src":"774:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2184,"src":"405:447:15","usedErrors":[]}],"src":"100:753:15"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3049]},"id":3050,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2185,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"128:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3049,"linearizedBaseContracts":[3049],"name":"Math","nameLocation":"210:4:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2190,"members":[{"id":2187,"name":"Down","nameLocation":"245:4:16","nodeType":"EnumValue","src":"245:4:16"},{"id":2188,"name":"Up","nameLocation":"287:2:16","nodeType":"EnumValue","src":"287:2:16"},{"id":2189,"name":"Zero","nameLocation":"318:4:16","nodeType":"EnumValue","src":"318:4:16"}],"name":"Rounding","nameLocation":"226:8:16","nodeType":"EnumDefinition","src":"221:122:16"},{"body":{"id":2207,"nodeType":"Block","src":"480:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"497:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"501:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"509:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:16","trueExpression":{"id":2203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"505:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2199,"id":2206,"nodeType":"Return","src":"490:20:16"}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"349:59:16","text":" @dev Returns the largest of two numbers."},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:16","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"a","nameLocation":"434:1:16","nodeType":"VariableDeclaration","scope":2208,"src":"426:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"b","nameLocation":"445:1:16","nodeType":"VariableDeclaration","scope":2208,"src":"437:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:16"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"471:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:16"},"scope":3049,"src":"413:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2225,"nodeType":"Block","src":"655:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"672:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"676:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"684:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:16","trueExpression":{"id":2221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"680:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2217,"id":2224,"nodeType":"Return","src":"665:20:16"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"523:60:16","text":" @dev Returns the smallest of two numbers."},"id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:16","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"a","nameLocation":"609:1:16","nodeType":"VariableDeclaration","scope":2226,"src":"601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"b","nameLocation":"620:1:16","nodeType":"VariableDeclaration","scope":2226,"src":"612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:16"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2226,"src":"646:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:16"},"scope":3049,"src":"588:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2248,"nodeType":"Block","src":"876:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"931:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"935:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"941:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"945:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2235,"id":2247,"nodeType":"Return","src":"923:28:16"}]},"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"698:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2249,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:16","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"a","nameLocation":"830:1:16","nodeType":"VariableDeclaration","scope":2249,"src":"822:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"b","nameLocation":"841:1:16","nodeType":"VariableDeclaration","scope":2249,"src":"833:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:16"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2249,"src":"867:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:16"},"scope":3049,"src":"805:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2273,"nodeType":"Block","src":"1228:123:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"1316:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"1330:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"1339:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:16","trueExpression":{"hexValue":"30","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2258,"id":2272,"nodeType":"Return","src":"1309:35:16"}]},"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"964:188:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:16","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"a","nameLocation":"1182:1:16","nodeType":"VariableDeclaration","scope":2274,"src":"1174:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"b","nameLocation":"1193:1:16","nodeType":"VariableDeclaration","scope":2274,"src":"1185:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:16"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"1219:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:16"},"scope":3049,"src":"1157:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"1765:4115:16","statements":[{"id":2395,"nodeType":"UncheckedBlock","src":"1775:4099:16","statements":[{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:16","nodeType":"VariableDeclaration","scope":2395,"src":"2096:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2288,"nodeType":"VariableDeclarationStatement","src":"2096:13:16"},{"assignments":[2290],"declarations":[{"constant":false,"id":2290,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:16","nodeType":"VariableDeclaration","scope":2395,"src":"2168:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2291,"nodeType":"VariableDeclarationStatement","src":"2168:13:16"},{"AST":{"nodeType":"YulBlock","src":"2248:157:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:16"},"nodeType":"YulFunctionCall","src":"2289:6:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:16"},"nodeType":"YulFunctionCall","src":"2276:20:16"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:16","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:16"},"nodeType":"YulFunctionCall","src":"2322:9:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:16"}]},{"nodeType":"YulAssignment","src":"2348:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:16"},"nodeType":"YulFunctionCall","src":"2361:14:16"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:16"},"nodeType":"YulFunctionCall","src":"2377:13:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:16"},"nodeType":"YulFunctionCall","src":"2357:34:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2287,"isOffset":false,"isSlot":false,"src":"2313:5:16","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"2369:5:16","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"2384:5:16","valueSize":1},{"declaration":2290,"isOffset":false,"isSlot":false,"src":"2348:5:16","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"2283:1:16","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"2326:1:16","valueSize":1},{"declaration":2279,"isOffset":false,"isSlot":false,"src":"2286:1:16","valueSize":1},{"declaration":2279,"isOffset":false,"isSlot":false,"src":"2329:1:16","valueSize":1}],"id":2292,"nodeType":"InlineAssembly","src":"2239:166:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2486:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2301,"nodeType":"IfStatement","src":"2482:368:16","trueBody":{"id":2300,"nodeType":"Block","src":"2498:352:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2816:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2297,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"2824:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2285,"id":2299,"nodeType":"Return","src":"2809:26:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"2960:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2304,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2974:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2308,"nodeType":"ExpressionStatement","src":"2952:53:16"},{"assignments":[2310],"declarations":[{"constant":false,"id":2310,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:16","nodeType":"VariableDeclaration","scope":2395,"src":"3261:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2311,"nodeType":"VariableDeclarationStatement","src":"3261:17:16"},{"AST":{"nodeType":"YulBlock","src":"3301:291:16","statements":[{"nodeType":"YulAssignment","src":"3370:38:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:16"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:16"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:16"},"nodeType":"YulFunctionCall","src":"3383:25:16"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:16"}]},{"nodeType":"YulAssignment","src":"3490:41:16","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:16"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:16"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:16"},"nodeType":"YulFunctionCall","src":"3510:20:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:16"},"nodeType":"YulFunctionCall","src":"3499:32:16"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:16"}]},{"nodeType":"YulAssignment","src":"3548:30:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:16"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:16"},"nodeType":"YulFunctionCall","src":"3557:21:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"3396:11:16","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"3524:5:16","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"3548:5:16","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"3561:5:16","valueSize":1},{"declaration":2290,"isOffset":false,"isSlot":false,"src":"3490:5:16","valueSize":1},{"declaration":2290,"isOffset":false,"isSlot":false,"src":"3503:5:16","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3370:9:16","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3513:9:16","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3568:9:16","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"3390:1:16","valueSize":1},{"declaration":2279,"isOffset":false,"isSlot":false,"src":"3393:1:16","valueSize":1}],"id":2312,"nodeType":"InlineAssembly","src":"3292:300:16"},{"assignments":[2314],"declarations":[{"constant":false,"id":2314,"mutability":"mutable","name":"twos","nameLocation":"3907:4:16","nodeType":"VariableDeclaration","scope":2395,"src":"3899:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2322,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"3914:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:16","subExpression":{"id":2316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"3930:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:16"},{"AST":{"nodeType":"YulBlock","src":"3969:362:16","statements":[{"nodeType":"YulAssignment","src":"4034:37:16","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:16"},"nodeType":"YulFunctionCall","src":"4049:22:16"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:16"}]},{"nodeType":"YulAssignment","src":"4138:25:16","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:16"},"nodeType":"YulFunctionCall","src":"4147:16:16"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:16"}]},{"nodeType":"YulAssignment","src":"4278:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:16","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:16"},"nodeType":"YulFunctionCall","src":"4294:12:16"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:16"},"nodeType":"YulFunctionCall","src":"4290:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:16"},"nodeType":"YulFunctionCall","src":"4286:31:16"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:16"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"4034:11:16","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"4053:11:16","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"4138:5:16","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"4151:5:16","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"4066:4:16","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"4158:4:16","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"4278:4:16","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"4301:4:16","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"4308:4:16","valueSize":1}],"id":2323,"nodeType":"InlineAssembly","src":"3960:371:16"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2324,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"4397:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"4406:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2326,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4414:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2329,"nodeType":"ExpressionStatement","src":"4397:21:16"},{"assignments":[2331],"declarations":[{"constant":false,"id":2331,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:16","nodeType":"VariableDeclaration","scope":2395,"src":"4736:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2338,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2333,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"4759:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:16"},{"expression":{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2339,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"4992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5007:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2342,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5021:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2346,"nodeType":"ExpressionStatement","src":"4992:36:16"},{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2347,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5076:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2350,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5090:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ExpressionStatement","src":"5061:36:16"},{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2355,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5131:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5146:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2358,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5160:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ExpressionStatement","src":"5131:36:16"},{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2363,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5201:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5216:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2366,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ExpressionStatement","src":"5201:36:16"},{"expression":{"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2371,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5286:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2374,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5300:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2378,"nodeType":"ExpressionStatement","src":"5271:36:16"},{"expression":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5342:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5357:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2382,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2386,"nodeType":"ExpressionStatement","src":"5342:36:16"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"5812:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"5821:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2389,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"5829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"5812:24:16"},{"expression":{"id":2393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"5857:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2285,"id":2394,"nodeType":"Return","src":"5850:13:16"}]}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"1357:305:16","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:16","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"x","nameLocation":"1691:1:16","nodeType":"VariableDeclaration","scope":2397,"src":"1683:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"y","nameLocation":"1702:1:16","nodeType":"VariableDeclaration","scope":2397,"src":"1694:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:16","nodeType":"VariableDeclaration","scope":2397,"src":"1705:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:16"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"result","nameLocation":"1757:6:16","nodeType":"VariableDeclaration","scope":2397,"src":"1749:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:16"},"scope":3049,"src":"1667:4213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2440,"nodeType":"Block","src":"6122:189:16","statements":[{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"result","nameLocation":"6140:6:16","nodeType":"VariableDeclaration","scope":2440,"src":"6132:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2419,"initialValue":{"arguments":[{"id":2415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6156:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2416,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"6159:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"6162:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2414,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2397,2441],"referencedDeclaration":2397,"src":"6149:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2420,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"6188:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2421,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"6200:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2190_$","typeString":"type(enum Math.Rounding)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2188,"src":"6200:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"src":"6188:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2425,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6222:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2426,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"6225:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2427,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"6228:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2424,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2437,"nodeType":"IfStatement","src":"6184:98:16","trueBody":{"id":2436,"nodeType":"Block","src":"6246:36:16","statements":[{"expression":{"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"6260:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2435,"nodeType":"ExpressionStatement","src":"6260:11:16"}]}},{"expression":{"id":2438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"6298:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2411,"id":2439,"nodeType":"Return","src":"6291:13:16"}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"5886:121:16","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2441,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:16","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"x","nameLocation":"6036:1:16","nodeType":"VariableDeclaration","scope":2441,"src":"6028:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"y","nameLocation":"6047:1:16","nodeType":"VariableDeclaration","scope":2441,"src":"6039:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:16","nodeType":"VariableDeclaration","scope":2441,"src":"6050:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:16","nodeType":"VariableDeclaration","scope":2441,"src":"6071:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"typeName":{"id":2406,"nodeType":"UserDefinedTypeName","pathNode":{"id":2405,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2190,"src":"6071:8:16"},"referencedDeclaration":2190,"src":"6071:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:16"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2441,"src":"6113:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:16"},"scope":3049,"src":"6012:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2552,"nodeType":"Block","src":"6587:1585:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"6601:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"nodeType":"IfStatement","src":"6597:45:16","trueBody":{"id":2454,"nodeType":"Block","src":"6609:33:16","statements":[{"expression":{"hexValue":"30","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2448,"id":2453,"nodeType":"Return","src":"6623:8:16"}]}},{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"result","nameLocation":"7329:6:16","nodeType":"VariableDeclaration","scope":2552,"src":"7321:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2466,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"7349:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2459,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2721,2757],"referencedDeclaration":2721,"src":"7344:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:16"},{"id":2551,"nodeType":"UncheckedBlock","src":"7758:408:16","statements":[{"expression":{"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7782:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7792:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"7801:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7805:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"nodeType":"ExpressionStatement","src":"7782:35:16"},{"expression":{"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7831:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7841:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"7850:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7854:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2488,"nodeType":"ExpressionStatement","src":"7831:35:16"},{"expression":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7880:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7890:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"7899:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7903:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2499,"nodeType":"ExpressionStatement","src":"7880:35:16"},{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7929:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7939:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"7948:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7952:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2510,"nodeType":"ExpressionStatement","src":"7929:35:16"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7978:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7988:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"7997:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8001:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"7978:35:16"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8027:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8037:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"8046:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8050:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"8027:35:16"},{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8076:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8086:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"8095:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8099:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"8076:35:16"},{"expression":{"arguments":[{"id":2545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8136:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"8144:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8148:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2544,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"8132:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2550,"nodeType":"Return","src":"8125:30:16"}]}]},"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"6317:208:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2553,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:16","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"a","nameLocation":"6552:1:16","nodeType":"VariableDeclaration","scope":2553,"src":"6544:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:16"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"6578:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:16"},"scope":3049,"src":"6530:1642:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2588,"nodeType":"Block","src":"8348:161:16","statements":[{"id":2587,"nodeType":"UncheckedBlock","src":"8358:145:16","statements":[{"assignments":[2565],"declarations":[{"constant":false,"id":2565,"mutability":"mutable","name":"result","nameLocation":"8390:6:16","nodeType":"VariableDeclaration","scope":2587,"src":"8382:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2569,"initialValue":{"arguments":[{"id":2567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"8404:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2566,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2553,2589],"referencedDeclaration":2553,"src":"8399:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"8427:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"8437:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2572,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"8449:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2190_$","typeString":"type(enum Math.Rounding)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2188,"src":"8449:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"src":"8437:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"8464:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"8473:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"8482:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:16","trueExpression":{"hexValue":"31","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2563,"id":2586,"nodeType":"Return","src":"8420:72:16"}]}]},"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"8178:89:16","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:16","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"a","nameLocation":"8294:1:16","nodeType":"VariableDeclaration","scope":2589,"src":"8286:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:16","nodeType":"VariableDeclaration","scope":2589,"src":"8297:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"typeName":{"id":2558,"nodeType":"UserDefinedTypeName","pathNode":{"id":2557,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2190,"src":"8297:8:16"},"referencedDeclaration":2190,"src":"8297:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:16"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"8339:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:16"},"scope":3049,"src":"8272:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"8694:922:16","statements":[{"assignments":[2598],"declarations":[{"constant":false,"id":2598,"mutability":"mutable","name":"result","nameLocation":"8712:6:16","nodeType":"VariableDeclaration","scope":2720,"src":"8704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:16"},{"id":2717,"nodeType":"UncheckedBlock","src":"8732:855:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8760:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2615,"nodeType":"IfStatement","src":"8756:99:16","trueBody":{"id":2614,"nodeType":"Block","src":"8778:77:16","statements":[{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8796:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2609,"nodeType":"ExpressionStatement","src":"8796:13:16"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"8827:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"8827:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8872:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2630,"nodeType":"IfStatement","src":"8868:96:16","trueBody":{"id":2629,"nodeType":"Block","src":"8889:75:16","statements":[{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8907:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2624,"nodeType":"ExpressionStatement","src":"8907:12:16"},{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"8937:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"8937:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"8981:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2645,"nodeType":"IfStatement","src":"8977:96:16","trueBody":{"id":2644,"nodeType":"Block","src":"8998:75:16","statements":[{"expression":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9016:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2639,"nodeType":"ExpressionStatement","src":"9016:12:16"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9046:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"9046:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9090:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2660,"nodeType":"IfStatement","src":"9086:96:16","trueBody":{"id":2659,"nodeType":"Block","src":"9107:75:16","statements":[{"expression":{"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9125:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2654,"nodeType":"ExpressionStatement","src":"9125:12:16"},{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9155:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2658,"nodeType":"ExpressionStatement","src":"9155:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9199:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2675,"nodeType":"IfStatement","src":"9195:93:16","trueBody":{"id":2674,"nodeType":"Block","src":"9215:73:16","statements":[{"expression":{"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9233:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2669,"nodeType":"ExpressionStatement","src":"9233:11:16"},{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9262:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2673,"nodeType":"ExpressionStatement","src":"9262:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9305:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2690,"nodeType":"IfStatement","src":"9301:93:16","trueBody":{"id":2689,"nodeType":"Block","src":"9321:73:16","statements":[{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9339:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2684,"nodeType":"ExpressionStatement","src":"9339:11:16"},{"expression":{"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9368:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2688,"nodeType":"ExpressionStatement","src":"9368:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9411:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2705,"nodeType":"IfStatement","src":"9407:93:16","trueBody":{"id":2704,"nodeType":"Block","src":"9427:73:16","statements":[{"expression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9445:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2699,"nodeType":"ExpressionStatement","src":"9445:11:16"},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9474:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ExpressionStatement","src":"9474:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9517:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2716,"nodeType":"IfStatement","src":"9513:64:16","trueBody":{"id":2715,"nodeType":"Block","src":"9533:44:16","statements":[{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9551:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"nodeType":"ExpressionStatement","src":"9551:11:16"}]}}]},{"expression":{"id":2718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9603:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2596,"id":2719,"nodeType":"Return","src":"9596:13:16"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"8515:113:16","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:16","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"value","nameLocation":"8655:5:16","nodeType":"VariableDeclaration","scope":2721,"src":"8647:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:16"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2721,"src":"8685:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:16"},"scope":3049,"src":"8633:983:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2756,"nodeType":"Block","src":"9849:165:16","statements":[{"id":2755,"nodeType":"UncheckedBlock","src":"9859:149:16","statements":[{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"result","nameLocation":"9891:6:16","nodeType":"VariableDeclaration","scope":2755,"src":"9883:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"id":2735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9905:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2734,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2721,2757],"referencedDeclaration":2721,"src":"9900:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"9932:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2739,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"9942:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2740,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"9954:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2190_$","typeString":"type(enum Math.Rounding)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2188,"src":"9954:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"src":"9942:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"9974:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9983:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:16","trueExpression":{"hexValue":"31","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2731,"id":2754,"nodeType":"Return","src":"9925:72:16"}]}]},"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"9622:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:16","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"value","nameLocation":"9791:5:16","nodeType":"VariableDeclaration","scope":2757,"src":"9783:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:16","nodeType":"VariableDeclaration","scope":2757,"src":"9798:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"typeName":{"id":2726,"nodeType":"UserDefinedTypeName","pathNode":{"id":2725,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2190,"src":"9798:8:16"},"referencedDeclaration":2190,"src":"9798:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:16"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2757,"src":"9840:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:16"},"scope":3049,"src":"9769:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"10201:854:16","statements":[{"assignments":[2766],"declarations":[{"constant":false,"id":2766,"mutability":"mutable","name":"result","nameLocation":"10219:6:16","nodeType":"VariableDeclaration","scope":2885,"src":"10211:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2768,"initialValue":{"hexValue":"30","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:16"},{"id":2882,"nodeType":"UncheckedBlock","src":"10239:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10267:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2785,"nodeType":"IfStatement","src":"10263:103:16","trueBody":{"id":2784,"nodeType":"Block","src":"10286:80:16","statements":[{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10304:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"10304:17:16"},{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"10339:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2783,"nodeType":"ExpressionStatement","src":"10339:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10383:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"IfStatement","src":"10379:103:16","trueBody":{"id":2801,"nodeType":"Block","src":"10402:80:16","statements":[{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10420:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"10420:17:16"},{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"10455:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ExpressionStatement","src":"10455:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10499:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2819,"nodeType":"IfStatement","src":"10495:103:16","trueBody":{"id":2818,"nodeType":"Block","src":"10518:80:16","statements":[{"expression":{"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10536:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2813,"nodeType":"ExpressionStatement","src":"10536:17:16"},{"expression":{"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"10571:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2817,"nodeType":"ExpressionStatement","src":"10571:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10615:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2836,"nodeType":"IfStatement","src":"10611:100:16","trueBody":{"id":2835,"nodeType":"Block","src":"10633:78:16","statements":[{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10651:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ExpressionStatement","src":"10651:16:16"},{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"10685:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2834,"nodeType":"ExpressionStatement","src":"10685:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10728:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2853,"nodeType":"IfStatement","src":"10724:100:16","trueBody":{"id":2852,"nodeType":"Block","src":"10746:78:16","statements":[{"expression":{"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10764:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2847,"nodeType":"ExpressionStatement","src":"10764:16:16"},{"expression":{"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"10798:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2851,"nodeType":"ExpressionStatement","src":"10798:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10841:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2870,"nodeType":"IfStatement","src":"10837:100:16","trueBody":{"id":2869,"nodeType":"Block","src":"10859:78:16","statements":[{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10877:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2864,"nodeType":"ExpressionStatement","src":"10877:16:16"},{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"10911:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2868,"nodeType":"ExpressionStatement","src":"10911:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"10954:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2881,"nodeType":"IfStatement","src":"10950:66:16","trueBody":{"id":2880,"nodeType":"Block","src":"10972:44:16","statements":[{"expression":{"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"10990:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2879,"nodeType":"ExpressionStatement","src":"10990:11:16"}]}}]},{"expression":{"id":2883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"11042:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2764,"id":2884,"nodeType":"Return","src":"11035:13:16"}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"10020:114:16","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:16","nodeType":"FunctionDefinition","parameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"value","nameLocation":"10162:5:16","nodeType":"VariableDeclaration","scope":2886,"src":"10154:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:16"},"returnParameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"10192:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:16"},"scope":3049,"src":"10139:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2921,"nodeType":"Block","src":"11290:167:16","statements":[{"id":2920,"nodeType":"UncheckedBlock","src":"11300:151:16","statements":[{"assignments":[2898],"declarations":[{"constant":false,"id":2898,"mutability":"mutable","name":"result","nameLocation":"11332:6:16","nodeType":"VariableDeclaration","scope":2920,"src":"11324:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2902,"initialValue":{"arguments":[{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"11347:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2899,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2886,2922],"referencedDeclaration":2886,"src":"11341:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"11374:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11384:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2905,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"11396:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2190_$","typeString":"type(enum Math.Rounding)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2188,"src":"11396:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"src":"11384:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"11417:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"11426:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:16","trueExpression":{"hexValue":"31","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2896,"id":2919,"nodeType":"Return","src":"11367:73:16"}]}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"11061:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2922,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:16","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"11232:5:16","nodeType":"VariableDeclaration","scope":2922,"src":"11224:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:16","nodeType":"VariableDeclaration","scope":2922,"src":"11239:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"typeName":{"id":2891,"nodeType":"UserDefinedTypeName","pathNode":{"id":2890,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2190,"src":"11239:8:16"},"referencedDeclaration":2190,"src":"11239:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:16"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2922,"src":"11281:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:16"},"scope":3049,"src":"11209:248:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3008,"nodeType":"Block","src":"11771:600:16","statements":[{"assignments":[2931],"declarations":[{"constant":false,"id":2931,"mutability":"mutable","name":"result","nameLocation":"11789:6:16","nodeType":"VariableDeclaration","scope":3008,"src":"11781:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2930,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2933,"initialValue":{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:16"},{"id":3005,"nodeType":"UncheckedBlock","src":"11809:533:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"11837:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2948,"nodeType":"IfStatement","src":"11833:98:16","trueBody":{"id":2947,"nodeType":"Block","src":"11855:76:16","statements":[{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"11873:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2942,"nodeType":"ExpressionStatement","src":"11873:13:16"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"11904:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2946,"nodeType":"ExpressionStatement","src":"11904:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"11948:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2963,"nodeType":"IfStatement","src":"11944:95:16","trueBody":{"id":2962,"nodeType":"Block","src":"11965:74:16","statements":[{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"11983:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2957,"nodeType":"ExpressionStatement","src":"11983:12:16"},{"expression":{"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"12013:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2961,"nodeType":"ExpressionStatement","src":"12013:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12056:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2978,"nodeType":"IfStatement","src":"12052:95:16","trueBody":{"id":2977,"nodeType":"Block","src":"12073:74:16","statements":[{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12091:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"12091:12:16"},{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"12121:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"nodeType":"ExpressionStatement","src":"12121:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12164:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2993,"nodeType":"IfStatement","src":"12160:95:16","trueBody":{"id":2992,"nodeType":"Block","src":"12181:74:16","statements":[{"expression":{"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12199:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2987,"nodeType":"ExpressionStatement","src":"12199:12:16"},{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"12229:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ExpressionStatement","src":"12229:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12272:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3004,"nodeType":"IfStatement","src":"12268:64:16","trueBody":{"id":3003,"nodeType":"Block","src":"12288:44:16","statements":[{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"12306:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"12306:11:16"}]}}]},{"expression":{"id":3006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"12358:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2929,"id":3007,"nodeType":"Return","src":"12351:13:16"}]},"documentation":{"id":2923,"nodeType":"StructuredDocumentation","src":"11463:240:16","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3009,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:16","nodeType":"FunctionDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"value","nameLocation":"11732:5:16","nodeType":"VariableDeclaration","scope":3009,"src":"11724:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:16"},"returnParameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3009,"src":"11762:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:16"},"scope":3049,"src":"11708:663:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"12608:174:16","statements":[{"id":3046,"nodeType":"UncheckedBlock","src":"12618:158:16","statements":[{"assignments":[3021],"declarations":[{"constant":false,"id":3021,"mutability":"mutable","name":"result","nameLocation":"12650:6:16","nodeType":"VariableDeclaration","scope":3046,"src":"12642:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[{"id":3023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"12666:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3022,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3009,3048],"referencedDeclaration":3009,"src":"12659:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"12693:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"12703:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3028,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12715:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2190_$","typeString":"type(enum Math.Rounding)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2188,"src":"12715:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"src":"12703:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"12736:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"12751:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:16","trueExpression":{"hexValue":"31","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3019,"id":3045,"nodeType":"Return","src":"12686:79:16"}]}]},"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"12377:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:16","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"value","nameLocation":"12550:5:16","nodeType":"VariableDeclaration","scope":3048,"src":"12542:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:16","nodeType":"VariableDeclaration","scope":3048,"src":"12557:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"},"typeName":{"id":3014,"nodeType":"UserDefinedTypeName","pathNode":{"id":3013,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2190,"src":"12557:8:16"},"referencedDeclaration":2190,"src":"12557:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2190","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:16"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3048,"src":"12599:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:16"},"scope":3049,"src":"12526:256:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3050,"src":"202:12582:16","usedErrors":[]}],"src":"103:12682:16"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3154]},"id":3155,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3051,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"134:80:17","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3154,"linearizedBaseContracts":[3154],"name":"SignedMath","nameLocation":"223:10:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3069,"nodeType":"Block","src":"375:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"392:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3063,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"396:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"404:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:17","trueExpression":{"id":3065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"400:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3061,"id":3068,"nodeType":"Return","src":"385:20:17"}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"240:66:17","text":" @dev Returns the largest of two signed numbers."},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:17","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"a","nameLocation":"331:1:17","nodeType":"VariableDeclaration","scope":3070,"src":"324:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3054,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"b","nameLocation":"341:1:17","nodeType":"VariableDeclaration","scope":3070,"src":"334:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3056,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:17"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"367:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3059,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:17"},"scope":3154,"src":"311:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"554:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"571:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"575:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"583:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:17","trueExpression":{"id":3083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"579:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3079,"id":3086,"nodeType":"Return","src":"564:20:17"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"418:67:17","text":" @dev Returns the smallest of two signed numbers."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:17","nodeType":"FunctionDefinition","parameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"a","nameLocation":"510:1:17","nodeType":"VariableDeclaration","scope":3088,"src":"503:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3072,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"b","nameLocation":"520:1:17","nodeType":"VariableDeclaration","scope":3088,"src":"513:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3074,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:17"},"returnParameters":{"id":3079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3088,"src":"546:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3077,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:17"},"scope":3154,"src":"490:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3131,"nodeType":"Block","src":"796:162:17","statements":[{"assignments":[3099],"declarations":[{"constant":false,"id":3099,"mutability":"mutable","name":"x","nameLocation":"865:1:17","nodeType":"VariableDeclaration","scope":3131,"src":"858:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3098,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3112,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"870:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"874:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"881:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"885:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:17"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"910:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3118,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"930:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:17","typeDescriptions":{}}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3114,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:17","typeDescriptions":{}}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"944:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"948:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3097,"id":3130,"nodeType":"Return","src":"903:48:17"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"597:126:17","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3132,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:17","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"a","nameLocation":"752:1:17","nodeType":"VariableDeclaration","scope":3132,"src":"745:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3090,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"b","nameLocation":"762:1:17","nodeType":"VariableDeclaration","scope":3132,"src":"755:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3092,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:17"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3132,"src":"788:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3095,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:17"},"scope":3154,"src":"728:230:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3152,"nodeType":"Block","src":"1102:158:17","statements":[{"id":3151,"nodeType":"UncheckedBlock","src":"1112:142:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"1227:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:17","subExpression":{"id":3146,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"1241:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:17","trueExpression":{"id":3145,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"1236:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:17","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3139,"id":3150,"nodeType":"Return","src":"1212:31:17"}]}]},"documentation":{"id":3133,"nodeType":"StructuredDocumentation","src":"964:78:17","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3153,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:17","nodeType":"FunctionDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"n","nameLocation":"1067:1:17","nodeType":"VariableDeclaration","scope":3153,"src":"1060:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3134,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:17"},"returnParameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3153,"src":"1093:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:17"},"scope":3154,"src":"1047:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3155,"src":"215:1047:17","usedErrors":[]}],"src":"109:1154:17"}},"contracts/MangoNFT.sol":{"id":18,"ast":{"absolutePath":"contracts/MangoNFT.sol","exportedSymbols":{"Address":[1822],"Context":[1844],"Counters":[1918],"ERC165":[2171],"ERC721":[1175],"ERC721URIStorage":[1465],"IERC165":[2183],"IERC4906":[137],"IERC721":[1291],"IERC721Metadata":[1492],"IERC721Receiver":[1309],"Mango":[3305],"Math":[3049],"Ownable":[112],"Pausable":[248],"SignedMath":[3154],"Strings":[2147]},"id":3306,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3156,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3306,"sourceUnit":1176,"src":"57:57:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":3158,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3306,"sourceUnit":1466,"src":"115:78:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":3159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3306,"sourceUnit":249,"src":"194:55:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3306,"sourceUnit":113,"src":"250:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":3161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3306,"sourceUnit":1919,"src":"303:52:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3162,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"375:6:18"},"id":3163,"nodeType":"InheritanceSpecifier","src":"375:6:18"},{"baseName":{"id":3164,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"383:16:18"},"id":3165,"nodeType":"InheritanceSpecifier","src":"383:16:18"},{"baseName":{"id":3166,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"401:8:18"},"id":3167,"nodeType":"InheritanceSpecifier","src":"401:8:18"},{"baseName":{"id":3168,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"411:7:18"},"id":3169,"nodeType":"InheritanceSpecifier","src":"411:7:18"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3305,"linearizedBaseContracts":[3305,112,248,1465,1175,1492,137,1291,2171,2183,1844],"name":"Mango","nameLocation":"366:5:18","nodeType":"ContractDefinition","nodes":[{"id":3173,"libraryName":{"id":3170,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":1918,"src":"429:8:18"},"nodeType":"UsingForDirective","src":"423:36:18","typeName":{"id":3172,"nodeType":"UserDefinedTypeName","pathNode":{"id":3171,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1850,"src":"442:16:18"},"referencedDeclaration":1850,"src":"442:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":3176,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"488:15:18","nodeType":"VariableDeclaration","scope":3305,"src":"463:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3175,"nodeType":"UserDefinedTypeName","pathNode":{"id":3174,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1850,"src":"463:16:18"},"referencedDeclaration":1850,"src":"463:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"body":{"id":3183,"nodeType":"Block","src":"545:2:18","statements":[]},"id":3184,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d616e676f","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"529:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_88282b4fd4e6ed87796aa0681e58b44f8378d9f0d3d7ac2afc2aebdb8537eb02","typeString":"literal_string \"Mango\""},"value":"Mango"},{"hexValue":"4d474b","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"538:5:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_81eb37c760650b024f3b7ca9a4335dcceab95107ce1f300128ec58a4f1e8bfb7","typeString":"literal_string \"MGK\""},"value":"MGK"}],"id":3181,"kind":"baseConstructorSpecifier","modifierName":{"id":3178,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"522:6:18"},"nodeType":"ModifierInvocation","src":"522:22:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[],"src":"519:2:18"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[],"src":"545:0:18"},"scope":3305,"src":"508:39:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3192,"nodeType":"Block","src":"585:19:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3189,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"591:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"591:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3191,"nodeType":"ExpressionStatement","src":"591:8:18"}]},"functionSelector":"8456cb59","id":3193,"implemented":true,"kind":"function","modifiers":[{"id":3187,"kind":"modifierInvocation","modifierName":{"id":3186,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"575:9:18"},"nodeType":"ModifierInvocation","src":"575:9:18"}],"name":"pause","nameLocation":"560:5:18","nodeType":"FunctionDefinition","parameters":{"id":3185,"nodeType":"ParameterList","parameters":[],"src":"565:2:18"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"585:0:18"},"scope":3305,"src":"551:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3201,"nodeType":"Block","src":"644:21:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3198,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"650:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"650:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3200,"nodeType":"ExpressionStatement","src":"650:10:18"}]},"functionSelector":"3f4ba83a","id":3202,"implemented":true,"kind":"function","modifiers":[{"id":3196,"kind":"modifierInvocation","modifierName":{"id":3195,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"634:9:18"},"nodeType":"ModifierInvocation","src":"634:9:18"}],"name":"unpause","nameLocation":"617:7:18","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[],"src":"624:2:18"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[],"src":"644:0:18"},"scope":3305,"src":"608:57:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3232,"nodeType":"Block","src":"735:147:18","statements":[{"assignments":[3212],"declarations":[{"constant":false,"id":3212,"mutability":"mutable","name":"tokenId","nameLocation":"749:7:18","nodeType":"VariableDeclaration","scope":3232,"src":"741:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"741:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3216,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3213,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"759:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage","typeString":"struct Counters.Counter storage ref"}},"id":3214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"759:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1850_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1850_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"759:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"741:43:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3217,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"790:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1850_storage","typeString":"struct Counters.Counter storage ref"}},"id":3219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"790:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1850_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1850_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"790:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3221,"nodeType":"ExpressionStatement","src":"790:27:18"},{"expression":{"arguments":[{"id":3223,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"833:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3224,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"837:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3222,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[743,772],"referencedDeclaration":743,"src":"823:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"823:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3226,"nodeType":"ExpressionStatement","src":"823:22:18"},{"expression":{"arguments":[{"id":3228,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"864:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3229,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"873:3:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3227,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"851:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"851:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3231,"nodeType":"ExpressionStatement","src":"851:26:18"}]},"functionSelector":"d204c45e","id":3233,"implemented":true,"kind":"function","modifiers":[{"id":3209,"kind":"modifierInvocation","modifierName":{"id":3208,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"725:9:18"},"nodeType":"ModifierInvocation","src":"725:9:18"}],"name":"safeMint","nameLocation":"678:8:18","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"to","nameLocation":"695:2:18","nodeType":"VariableDeclaration","scope":3233,"src":"687:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"uri","nameLocation":"713:3:18","nodeType":"VariableDeclaration","scope":3233,"src":"699:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3205,"name":"string","nodeType":"ElementaryTypeName","src":"699:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"686:31:18"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[],"src":"735:0:18"},"scope":3305,"src":"669:213:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1146],"body":{"id":3256,"nodeType":"Block","src":"1024:67:18","statements":[{"expression":{"arguments":[{"id":3250,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"1057:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"1063:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"1067:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3253,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"1076:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3247,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1030:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Mango_$3305_$","typeString":"type(contract super Mango)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1146,"src":"1030:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1030:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"1030:56:18"}]},"id":3257,"implemented":true,"kind":"function","modifiers":[{"id":3244,"kind":"modifierInvocation","modifierName":{"id":3243,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":175,"src":"995:13:18"},"nodeType":"ModifierInvocation","src":"995:13:18"}],"name":"_beforeTokenTransfer","nameLocation":"895:20:18","nodeType":"FunctionDefinition","overrides":{"id":3245,"nodeType":"OverrideSpecifier","overrides":[],"src":"1013:8:18"},"parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"from","nameLocation":"924:4:18","nodeType":"VariableDeclaration","scope":3257,"src":"916:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"to","nameLocation":"938:2:18","nodeType":"VariableDeclaration","scope":3257,"src":"930:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"tokenId","nameLocation":"950:7:18","nodeType":"VariableDeclaration","scope":3257,"src":"942:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"batchSize","nameLocation":"967:9:18","nodeType":"VariableDeclaration","scope":3257,"src":"959:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"959:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"915:62:18"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[],"src":"1024:0:18"},"scope":3305,"src":"886:205:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[916,1464],"body":{"id":3271,"nodeType":"Block","src":"1237:31:18","statements":[{"expression":{"arguments":[{"id":3268,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"1255:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3265,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1243:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Mango_$3305_$","typeString":"type(contract super Mango)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1464,"src":"1243:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1243:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3270,"nodeType":"ExpressionStatement","src":"1243:20:18"}]},"id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1170:5:18","nodeType":"FunctionDefinition","overrides":{"id":3263,"nodeType":"OverrideSpecifier","overrides":[{"id":3261,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"1211:6:18"},{"id":3262,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"1219:16:18"}],"src":"1202:34:18"},"parameters":{"id":3260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"tokenId","nameLocation":"1184:7:18","nodeType":"VariableDeclaration","scope":3272,"src":"1176:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1175:17:18"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[],"src":"1237:0:18"},"scope":3305,"src":"1161:107:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[453,1408],"body":{"id":3287,"nodeType":"Block","src":"1396:41:18","statements":[{"expression":{"arguments":[{"id":3284,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"1424:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3282,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1409:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Mango_$3305_$","typeString":"type(contract super Mango)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1408,"src":"1409:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1409:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3281,"id":3286,"nodeType":"Return","src":"1402:30:18"}]},"functionSelector":"c87b56dd","id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1281:8:18","nodeType":"FunctionDefinition","overrides":{"id":3278,"nodeType":"OverrideSpecifier","overrides":[{"id":3276,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"1340:6:18"},{"id":3277,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"1348:16:18"}],"src":"1331:34:18"},"parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"tokenId","nameLocation":"1298:7:18","nodeType":"VariableDeclaration","scope":3288,"src":"1290:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1289:17:18"},"returnParameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3288,"src":"1379:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3279,"name":"string","nodeType":"ElementaryTypeName","src":"1379:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1378:15:18"},"scope":3305,"src":"1272:165:18","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[342,1349],"body":{"id":3303,"nodeType":"Block","src":"1552:50:18","statements":[{"expression":{"arguments":[{"id":3300,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"1587:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3298,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1563:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Mango_$3305_$","typeString":"type(contract super Mango)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"1563:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1563:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3297,"id":3302,"nodeType":"Return","src":"1556:43:18"}]},"functionSelector":"01ffc9a7","id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1452:17:18","nodeType":"FunctionDefinition","overrides":{"id":3294,"nodeType":"OverrideSpecifier","overrides":[{"id":3292,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1175,"src":"1511:6:18"},{"id":3293,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"1519:16:18"}],"src":"1502:34:18"},"parameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"interfaceId","nameLocation":"1477:11:18","nodeType":"VariableDeclaration","scope":3304,"src":"1470:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3289,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1470:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1469:20:18"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3304,"src":"1546:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3295,"name":"bool","nodeType":"ElementaryTypeName","src":"1546:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1545:6:18"},"scope":3305,"src":"1443:159:18","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3306,"src":"357:1247:18","usedErrors":[]}],"src":"32:1572:18"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"paused()":"5c975abb"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC721.sol:ERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_55\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.le\t@.BB0_63\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_69\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256t_bytes, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r10\n\tand\tr1, r10, r4\n\tld.1\t64, r1\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_1[0], r3, r5\n\tjump.gt\t@.BB0_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r3\n\tand\t31, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_102\n\tadd\tr0, r0, r6\n.BB0_8:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_8\n.BB0_102:\n\tsub.s!\t0, r3, r6\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r3\n\tsub.s!\t64, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_2[0], r2, r5\n\tsub.s!\t0, r5, r6\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd.ne\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r3\n\tsub.s!\t@CPI0_1[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr1, r2, r2\n\tadd\tr4, r1, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_2[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_2[0], r5, r5\n\tand\t@CPI0_2[0], r2, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_2[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tld.1\tr4, r5\n\tsub.s!\t@CPI0_1[0], r5, r6\n\tjump.le\t@.BB0_14\n.BB0_5:\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_59\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_71\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tand\t@CPI0_25[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_63:\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_4407, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_59:\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_79\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_20[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_safeTransferFrom_604, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_69:\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[6]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_4412, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_setApprovalForAll, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_71:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes4, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_supportsInterface, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_85:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n\tand\t@CPI0_25[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_tuple_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_79:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_2[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_tokenURI, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tadd\t63, r5, r6\n\tand\tr6, r10, r6\n\tld.1\t64, r11\n\tadd\tr11, r6, r6\n\tsub!\tr6, r11, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_1[0], r6, r8\n\tjump.gt\t@.BB0_5\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r6\n\tst.1.inc\tr11, r5, r12\n\tadd\t32, r5, r6\n\tadd\tr6, r4, r7\n\tsub!\tr7, r2, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r7\n.BB0_19:\n\tadd\t32, r7, r7\n\tadd\tr7, r11, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_19\n\tsub!\tr7, r5, r4\n\tjump.le\t@.BB0_22\n\tadd\tr11, r6, r4\n\tst.1\tr4, r0\n.BB0_22:\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r1\n\tadd\t31, r1, r3\n\tadd\t@CPI0_2[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_2[0], r3, r3\n\tand\t@CPI0_2[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r3\n\tsub.s!\t@CPI0_1[0], r3, r4\n\tjump.gt\t@.BB0_5\n\tadd\t63, r3, r4\n\tand\tr4, r10, r4\n\tld.1\t64, r7\n\tadd\tr7, r4, r4\n\tsub!\tr4, r7, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_1[0], r4, r6\n\tjump.gt\t@.BB0_5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_5\n\tst.1\t64, r4\n\tst.1\tr7, r3\n\tadd\t32, r3, r4\n\tadd\tr4, r1, r5\n\tsub!\tr5, r2, r2\n\tjump.le\t@.BB0_28\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\tr12, r0, stack-[3]\n\tadd\tr11, r0, stack-[6]\n\tadd\tr10, r0, stack-[4]\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r2\n.BB0_30:\n\tadd\t32, r2, r2\n\tadd\tr2, r7, r5\n\tadd\tr2, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_30\n\tsub!\tr2, r3, r1\n\tjump.le\t@.BB0_33\n\tadd\tr7, r4, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_1[0], r1, r1\n\tjump.gt\t@.BB0_5\n\tadd\tr7, r0, stack-[1]\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.eq\tr3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_50\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[6], r0, r6\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r3\n\tand!\tr3, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_47\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_46:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_46\n.BB0_47:\n\tadd\tstack-[5], r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_49\n\tadd\tstack-[5], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[6], r0, r4\n\tadd\tr2, r4, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_49:\n\tadd\t1, r0, r1\n\tadd\tstack-[5], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_42\n.BB0_50:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_52\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_52:\n\tadd\tstack-[5], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_42:\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t1, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_decode_bytes4:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB2_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI2_1[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB2_1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB3_5\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB3_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB3_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end3:\n\nabi_decode_addresst_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_tuple_address:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_addresst_bool:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tjump.gt\t@.BB7_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t0, r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_decode_addresst_addresst_uint256t_bytes:\n.func_begin8:\n\tadd\tr1, r0, r5\n\tsub.s\t4, r5, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t127, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI8_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB8_1\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r2\n\tjump.gt\t@.BB8_1\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tjump.gt\t@.BB8_1\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tptr.add.s\t100, r4, r6\n\tld\tr6, r8\n\tsub.s!\t@CPI8_2[0], r8, r6\n\tjump.gt\t@.BB8_1\n\tadd\t35, r8, r6\n\tadd\t@CPI8_0[0], r0, r7\n\tsub!\tr6, r5, r9\n\tadd\t0, r0, r9\n\tadd.ge\tr7, r0, r9\n\tand\t@CPI8_0[0], r5, r10\n\tand\t@CPI8_0[0], r6, r6\n\tsub!\tr6, r10, r11\n\tadd.ge\t0, r0, r7\n\txor\tr6, r10, r6\n\tsub.s!\t@CPI8_0[0], r6, r6\n\tadd\tr9, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB8_1\n\tadd\t4, r8, r6\n\tptr.add\tr4, r6, r4\n\tld\tr4, r6\n\tsub.s!\t@CPI8_3[0], r6, r4\n\tjump.ge\t@.BB8_7\n\tadd\t63, r6, r4\n\tsub.s\t32, r0, r7\n\tand\tr4, r7, r7\n\tld.1\t64, r4\n\tadd\tr4, r7, r7\n\tsub!\tr7, r4, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI8_2[0], r7, r10\n\tjump.gt\t@.BB8_7\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB8_7\n\tst.1\t64, r7\n\tst.1.inc\tr4, r6, r7\n\tadd\t36, r8, r8\n\tadd\tr8, r6, r9\n\tsub!\tr9, r5, r5\n\tjump.gt\t@.BB8_1\n\tand\t31, r6, r5\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tshr.s!\t5, r6, r9\n\tjump.eq\t@.BB8_16\n\tadd\tr0, r0, r10\n.BB8_13:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB8_13\n.BB8_16:\n\tsub.s!\t0, r5, r10\n\tjump.eq\t@.BB8_15\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r9\n\tshl.s\t3, r5, r5\n\tld.1\tr9, r10\n\tshl\tr10, r5, r10\n\tshr\tr10, r5, r10\n\tld\tr8, r8\n\tsub\t256, r5, r5\n\tshr\tr8, r5, r8\n\tshl\tr8, r5, r5\n\tor\tr5, r10, r5\n\tst.1\tr9, r5\n.BB8_15:\n\tadd\tr7, r6, r5\n\tst.1\tr5, r0\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_7:\n\tadd\t@CPI8_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_addresst_address:\n.func_begin9:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tjump.gt\t@.BB9_1\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_supportsInterface:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t@CPI10_2[0], r1, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tsub.s!\t@CPI10_3[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tor\tr1, r2, r1\n\tand\t1, r1, r1\n\tret\n.func_end10:\n\nmapping_index_access_mapping_address_uint256_of_address_4412:\n.func_begin11:\n\tand\t@CPI11_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin12:\n\tand\t@CPI12_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_balanceOf:\n.func_begin13:\n\tand!\t@CPI13_0[0], r1, r1\n\tjump.eq\t@.BB13_1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_ownerOf:\n.func_begin14:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI14_2[0], r1, r1\n\tjump.eq\t@.BB14_3\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_0[0], r0, r2\n\tsub.s!\t@CPI14_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin15:\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB15_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB15_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB15_4\n.BB15_9:\n\tadd\t32, r0, r4\n\tst.1\t0, r0\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB15_4\n\tadd\t@CPI15_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB15_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB15_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB15_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI15_1[0], r2, r4\n\tjump.gt\t@.BB15_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB15_6\n\tst.1\t64, r2\n\tret\n.BB15_1:\n\tadd\t@CPI15_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_6:\n\tadd\t@CPI15_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI15_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\ncopy_array_from_storage_to_memory_string_4407:\n.func_begin16:\n\tadd\t1, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB16_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB16_9\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r0, r4\n\tjump\t@.BB16_4\n.BB16_9:\n\tst.1\t0, r5\n\tadd\t32, r0, r4\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB16_4\n\tadd\t@CPI16_0[0], r0, r4\n\tadd\tr0, r0, r6\n.BB16_11:\n\tadd\tr6, r0, r5\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB16_11\n\tadd\t95, r5, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r4\n.BB16_4:\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI16_1[0], r2, r4\n\tjump.gt\t@.BB16_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB16_6\n\tst.1\t64, r2\n\tret\n.BB16_1:\n\tadd\t@CPI16_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_6:\n\tadd\t@CPI16_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_tokenURI:\n.func_begin17:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_3\n\tsub.s!\t@CPI17_3[0], r2, r1\n\tjump.ge\t@.BB17_5\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tst.1\tr2, r0\n\tld.1\t64, r1\n\tsub.s!\t@CPI17_4[0], r1, r2\n\tjump.gt\t@.BB17_5\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tret\n.BB17_5:\n\tadd\t@CPI17_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI17_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_3:\n\tadd\t68, r2, r1\n\tadd\t@CPI17_7[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t24, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI17_8[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI17_0[0], r0, r1\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\nfun_approve:\n.func_begin18:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, stack-[4]\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI18_2[0], r1, r1\n\tjump.eq\t@.BB18_3\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI18_2[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB18_5\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.eq\t@.BB18_11\n\tadd\tr3, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI18_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB18_10\n.BB18_11:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI18_7[0], r2, r2\n\tadd\tstack-[2], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI18_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_1\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI18_2[0], r1, r5\n\tjump.eq\t@.BB18_14\n\tadd\t@CPI18_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI18_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI18_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI18_9[0], r0, r4\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB18_1\n\tret\n.BB18_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI18_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_0[0], r0, r2\n\tsub.s!\t@CPI18_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_0[0], r0, r2\n\tsub.s!\t@CPI18_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_14:\n\tadd\t68, r2, r1\n\tadd\t@CPI18_10[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t24, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI18_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI18_0[0], r0, r1\n\tsub.s!\t@CPI18_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_10:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI18_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI18_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t61, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI18_0[0], r0, r2\n\tsub.s!\t@CPI18_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI18_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_getApproved:\n.func_begin19:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI19_2[0], r1, r1\n\tjump.eq\t@.BB19_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI19_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI19_2[0], r1, r1\n\tret\n.BB19_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI19_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI19_0[0], r0, r2\n\tsub.s!\t@CPI19_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI19_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_setApprovalForAll:\n.func_begin20:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand\t@CPI20_0[0], r1, r1\n\tcontext.caller\tr2\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB20_1\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI20_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI20_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI20_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI20_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB20_3\n\tret\n.BB20_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI20_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_1[0], r0, r2\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nfun_transferFrom:\n.func_begin21:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tadd\tr3, r0, stack-[6]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI21_2[0], r1, r1\n\tjump.eq\t@.BB21_3\n\tcontext.caller\tr2\n\tand\t@CPI21_2[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB21_13\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB21_13\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI21_2[0], r1, r1\n\tjump.eq\t@.BB21_3\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI21_2[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB21_12\n.BB21_13:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI21_2[0], r1, r2\n\tjump.eq\t@.BB21_3\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI21_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB21_16\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI21_2[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tjump.eq\t@.BB21_18\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI21_2[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tjump.eq\t@.BB21_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB21_16\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI21_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI21_9[0], r2, r2\n\tadd\tstack-[1], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI21_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI21_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI21_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI21_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI21_11[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB21_1\n\tret\n.BB21_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_15[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_16:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI21_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI21_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI21_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI21_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI21_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI21_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nfun_safeTransferFrom_604:\n.func_begin22:\n\tnop\tstack+=[7]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[5]\n\tld.1\t64, r2\n\tsub.s!\t@CPI22_0[0], r2, r1\n\tjump.ge\t@.BB22_1\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r0\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI22_3[0], r1, r1\n\tjump.eq\t@.BB22_5\n\tcontext.caller\tr2\n\tand\t@CPI22_3[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB22_15\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB22_15\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI22_3[0], r1, r1\n\tjump.eq\t@.BB22_5\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI22_3[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB22_14\n.BB22_15:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI22_3[0], r1, r2\n\tjump.eq\t@.BB22_5\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI22_3[0], r1, r1\n\tsub!\tr2, r1, r1\n\tadd\tstack-[7], r0, r1\n\tjump.ne\t@.BB22_18\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[4], r0, r2\n\tand!\t@CPI22_3[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tjump.eq\t@.BB22_20\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI22_3[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB22_5\n\tsub!\tr1, r2, r1\n\tadd\tstack-[7], r0, r1\n\tjump.ne\t@.BB22_18\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI22_10[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI22_10[0], r2, r2\n\tadd\tstack-[2], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI22_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI22_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI22_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI22_11[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI22_12[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB22_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[1], r0, r4\n\tnear_call\tr0, @fun_checkOnERC721Received, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB22_30\n\tret\n.BB22_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_1[0], r0, r2\n\tsub.s!\t@CPI22_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI22_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI22_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_1[0], r0, r2\n\tsub.s!\t@CPI22_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_1:\n\tadd\t@CPI22_17[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI22_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI22_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI22_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_1[0], r0, r2\n\tsub.s!\t@CPI22_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_30:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI22_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI22_1[0], r0, r2\n\tsub.s!\t@CPI22_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI22_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_14:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI22_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI22_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_1[0], r0, r2\n\tsub.s!\t@CPI22_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nfun_safeTransferFrom:\n.func_begin23:\n\tnop\tstack+=[7]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[5]\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tjump.eq\t@.BB23_3\n\tcontext.caller\tr2\n\tand\t@CPI23_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB23_13\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB23_13\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tjump.eq\t@.BB23_3\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB23_12\n.BB23_13:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r2\n\tjump.eq\t@.BB23_3\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI23_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB23_16\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tjump.eq\t@.BB23_18\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB23_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB23_16\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI23_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI23_9[0], r2, r2\n\tadd\tstack-[2], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI23_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI23_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI23_11[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB23_1\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[1], r0, r4\n\tnear_call\tr0, @fun_checkOnERC721Received, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB23_28\n\tret\n.BB23_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI23_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_15[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_16:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_28:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI23_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI23_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\nabi_encode_stringliteral_1e76:\n.func_begin24:\n\tadd\t96, r1, r2\n\tadd\t@CPI24_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI24_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end24:\n\nfun_checkOnERC721Received:\n.func_begin25:\n\tnop\tstack+=[6]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI25_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr2, r0, stack-[4]\n\tst.2\t4, r2\n\tadd\t@CPI25_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB25_1\n\tadd\t1, r0, r1\n\tld\tr3, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB25_3\n\tadd\t@CPI25_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI25_3[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.2\t4, r1\n\tadd\t@CPI25_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB25_1\n\tld.1\t64, r9\n\tadd\t100, r9, r1\n\tadd\t128, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r9, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI25_3[0], r1, r1\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\t@CPI25_4[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.caller\tr1\n\tand\t@CPI25_3[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tadd\tstack-[3], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r9, r2\n\tst.1\tr2, r1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB25_11\n\tadd\t164, r9, r2\n\tadd\tr0, r0, r3\n.BB25_8:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB25_8\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB25_11\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB25_11:\n\tcontext.gas_left\tr6\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB25_13\n\tcontext.sp\tr1\n\tsub.s\t6, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\t0, r0, stack-[6]\n\tjump\t@.BB25_18\n.BB25_13:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI25_1[0], r0, r3\n\tsub.s!\t@CPI25_1[0], r9, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr9, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI25_1[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI25_1[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr9, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI25_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB25_35\n\tadd\tr0, r0, r6\n.BB25_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB25_15\n.BB25_35:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB25_17\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB25_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr1\n\tsub.s\t5, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\t0, r0, stack-[5]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_24\n.BB25_18:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r9, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI25_6[0], r2, r4\n\tjump.gt\t@.BB25_20\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB25_20\n\tst.1\t64, r2\n\tadd\t@CPI25_8[0], r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI25_8[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI25_8[0], r3, r3\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB25_1\n\tld.1\tr9, r2\n\tand\t@CPI25_9[0], r2, r3\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB25_1\n\tdiv.s\t32, r1, r1, r0\n\tadd\tr2, r0, stack[r1]\n\tsub.s!\t@CPI25_4[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB25_3:\n\tret\n.BB25_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_24:\n\tadd\t96, r0, r1\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB25_31\n\tadd\t63, r3, r1\n\tand\t@CPI25_5[0], r1, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI25_6[0], r2, r5\n\tjump.gt\t@.BB25_20\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB25_20\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB25_34\n\tadd\tr0, r0, r6\n.BB25_29:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB25_29\n.BB25_34:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB25_31\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr2, r3\n.BB25_31:\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t0, r1, r3\n\tjump.ne\t@.BB25_32\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t@CPI25_7[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI25_1[0], r0, r2\n\tsub.s!\t@CPI25_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI25_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_20:\n\tadd\t@CPI25_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI25_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_32:\n\tadd\t@CPI25_1[0], r0, r3\n\tsub.s!\t@CPI25_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI25_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end25:\n\n__farcall:\n.func_begin26:\n.tmp0:\n\tfar_call\tr1, r2, @.BB26_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB26_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end26:\n\n__staticcall:\n.func_begin27:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB27_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB27_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end27:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_0:\nCPI17_0:\nCPI18_0:\nCPI19_0:\nCPI20_1:\nCPI21_0:\nCPI22_1:\nCPI23_0:\nCPI25_1:\n\t.cell 4294967295\nCPI0_1:\nCPI8_2:\nCPI15_1:\nCPI16_1:\nCPI25_6:\n\t.cell 18446744073709551615\nCPI0_2:\nCPI2_0:\nCPI4_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI25_8:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_3:\nCPI1_2:\nCPI20_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\nCPI1_3:\nCPI8_4:\nCPI15_2:\nCPI16_2:\nCPI17_5:\nCPI22_17:\nCPI25_10:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_6:\nCPI1_4:\nCPI8_5:\nCPI15_3:\nCPI16_3:\nCPI17_6:\nCPI22_18:\nCPI25_11:\n\t.cell 2852213850513516153367582212096\nCPI0_7:\n\t.cell 1666326813\nCPI0_8:\n\t.cell 2720838756\nCPI0_9:\n\t.cell 3363526364\nCPI0_10:\n\t.cell 3363526365\nCPI0_11:\n\t.cell 3917867461\nCPI0_12:\n\t.cell 2720838757\nCPI0_13:\n\t.cell 3096268766\nCPI0_14:\n\t.cell 1666326814\nCPI0_15:\n\t.cell 1889567281\nCPI0_16:\n\t.cell 2514000705\nCPI0_17:\n\t.cell 157198258\nCPI0_18:\n\t.cell 157198259\nCPI0_19:\n\t.cell 599290589\nCPI0_20:\n\t.cell 1115958798\nCPI0_21:\n\t.cell 33540519\nCPI0_22:\n\t.cell 117300739\nCPI0_23:\n\t.cell 135795452\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI9_1:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI14_2:\nCPI17_2:\nCPI18_2:\nCPI19_2:\nCPI20_0:\nCPI21_2:\nCPI22_3:\nCPI23_2:\nCPI25_3:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_26:\n\t.cell 2535301202817642044428229017600\nCPI1_0:\nCPI8_3:\n\t.cell 18446744073709551616\nCPI2_1:\nCPI10_0:\nCPI25_9:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI10_1:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI10_2:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI10_3:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI11_2:\nCPI12_2:\nCPI13_2:\nCPI14_1:\nCPI17_1:\nCPI18_1:\nCPI19_1:\nCPI20_2:\nCPI21_1:\nCPI22_2:\nCPI23_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI13_3:\n\t.cell 49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI13_4:\n\t.cell 31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI13_5:\nCPI14_4:\nCPI17_8:\nCPI18_5:\nCPI19_4:\nCPI20_6:\nCPI21_5:\nCPI22_6:\nCPI23_5:\nCPI25_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI13_6:\nCPI18_6:\nCPI21_6:\nCPI22_7:\nCPI23_6:\n\t.cell 10458117451882892562347801444352\nCPI14_3:\nCPI17_7:\nCPI18_10:\nCPI19_3:\nCPI21_14:\nCPI22_15:\nCPI23_14:\n\t.cell 31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI14_5:\nCPI17_9:\nCPI18_11:\nCPI19_5:\nCPI20_7:\nCPI21_15:\nCPI22_16:\nCPI23_15:\n\t.cell 7922816251426433759354395033600\nCPI15_0:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI16_0:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI17_3:\nCPI22_0:\n\t.cell 18446744073709551584\nCPI17_4:\n\t.cell 18446744073709551583\nCPI18_3:\n\t.cell 48576686418507356219831365361070156960199332940003936683527688631380237877248\nCPI18_4:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI18_7:\nCPI21_9:\nCPI22_10:\nCPI23_9:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI18_8:\nCPI21_10:\nCPI22_11:\nCPI23_10:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI18_9:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI18_12:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI18_13:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI20_4:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI20_5:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI21_3:\nCPI22_4:\nCPI23_3:\n\t.cell 51620973015253767882670130074298444487415533390198982457255807955294746574848\nCPI21_4:\nCPI22_5:\nCPI23_4:\n\t.cell 31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI21_7:\nCPI22_8:\nCPI23_7:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI21_8:\nCPI22_9:\nCPI23_8:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI21_11:\nCPI22_12:\nCPI23_11:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI21_12:\nCPI22_13:\nCPI23_12:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI21_13:\nCPI22_14:\nCPI23_13:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI24_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI24_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\nCPI25_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI25_2:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI25_4:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI25_5:\n\t.cell 8589934560\n","bytecode":{"object":"0004000000000002000600000000000200000000030100190000006003300270000002ec0430019700030000004103550002000000010355000002ec0030019d000100000000001f0000008001000039000000400010043f0000000101200190000000290000c13d0000000001000031000000040110008c000001dd0000413d0000000201000367000000000101043b000000e001100270000002f30210009c0000007e0000a13d000002f40210009c000000a40000a13d000002f50210009c000000dd0000213d000002f80210009c000000f60000613d000002f90110009c000001dd0000c13d0000000001000416000000000110004c000001dd0000c13d00000000010000310bab037c0000040f0bab092f0000040f000002ec01000041000000400200043d000002ec0320009c0000000001024019000000400110021000000bac0001042e0000000001000416000000000110004c000001dd0000c13d00000000020000310000001f01200039000000200a00008a0000000004a1016f000000400100043d0000000003140019000000000443004b00000000040000190000000104004039000002ed0530009c000000780000213d0000000104400190000000780000c13d000000400030043f0000001f0320018f00000002040003670000000505200272000000470000613d000000000600001900000005076002100000000008710019000000000774034f000000000707043b00000000007804350000000106600039000000000756004b0000003f0000413d000000000630004c000000560000613d0000000505500210000000000454034f00000000055100190000000303300210000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f0000000000350435000002ee03000041000000400420008c00000000040000190000000004034019000002ee05200197000000000650004c000000000300a019000002ee0550009c000000000304c019000000000330004c000001dd0000c13d0000000034010434000002ed0540009c000001dd0000213d000000000221001900000000041400190000001f05400039000002ee06000041000000000725004b00000000070000190000000007068019000002ee05500197000002ee08200197000000000985004b0000000006008019000000000585013f000002ee0550009c00000000050700190000000005066019000000000550004c000001dd0000c13d0000000005040433000002ed0650009c000001970000a13d000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad00010430000002fd0210009c000000cb0000213d000003010210009c000001020000613d000003020210009c0000010e0000613d000003030110009c000001dd0000c13d0000000001000416000000000110004c000001dd0000c13d000000040100008a0000000001100031000002ee02000041000000200310008c00000000030000190000000003024019000002ee01100197000000000410004c000000000200a019000002ee0110009c00000000010300190000000001026019000000000110004c000001dd0000c13d00000004010000390000000201100367000000000101043b0bab05f40000040f0000030501100197000000400200043d0000000000120435000002ec01000041000002ec0320009c0000000001024019000000400110021000000304011001c700000bac0001042e000002fa0210009c0000012f0000613d000002fb0210009c0000014d0000613d000002fc0110009c000001dd0000c13d0000000001000416000000000110004c000001dd0000c13d000000040100008a0000000001100031000002ee02000041000000000310004c00000000030000190000000003024019000002ee01100197000000000410004c000000000200a019000002ee0110009c00000000010300190000000001026019000000000110004c000001dd0000c13d0bab04ba0000040f0000000002010019000000400100043d000600000001001d0bab03010000040f00000006040000290000000001410049000002ec02000041000002ec0310009c0000000001028019000002ec0340009c000000000204401900000040022002100000006001100210000000000121019f00000bac0001042e000002fe0210009c0000015b0000613d000002ff0210009c000001670000613d000003000110009c000001dd0000c13d0000000001000416000000000110004c000001dd0000c13d00000000010000310bab03300000040f0bab07c70000040f000002ec01000041000000400200043d000002ec0320009c0000000001024019000000400110021000000bac0001042e000002f60210009c000001730000613d000002f70110009c000001dd0000c13d0000000001000416000000000110004c000001dd0000c13d00000000010000310bab03e60000040f000600000002001d0bab040d0000040f00000006020000290bab041f0000040f000000000101041a000000ff011001900000000001000019000000010100c039000000400200043d0000000000120435000002ec01000041000002ec0320009c0000000001024019000000400110021000000304011001c700000bac0001042e0000000001000416000000000110004c000001dd0000c13d00000000010000310bab03600000040f0bab062d0000040f000002ec01000041000000400200043d000002ec0320009c0000000001024019000000400110021000000bac0001042e0000000001000416000000000110004c000001dd0000c13d00000000010000310bab02eb0000040f0bab03ff0000040f000000000110004c0000000001000019000000010100c039000000800010043f000003060100004100000bac0001042e0000000001000416000000000110004c000001dd0000c13d000000040100008a0000000001100031000002ee02000041000000000310004c00000000030000190000000003024019000002ee01100197000000000410004c000000000200a019000002ee0110009c00000000010300190000000001026019000000000110004c000001dd0000c13d0bab047f0000040f0000000002010019000000400100043d000600000001001d0bab03010000040f00000006040000290000000001410049000002ec02000041000002ec0310009c0000000001028019000002ec0340009c000000000204401900000040022002100000006001100210000000000121019f00000bac0001042e0000000001000416000000000110004c000001dd0000c13d000000040100008a0000000001100031000002ee02000041000000200310008c00000000030000190000000003024019000002ee01100197000000000410004c000000000200a019000002ee0110009c00000000010300190000000001026019000000000110004c000001dd0000c13d00000004010000390000000201100367000000000101043b0bab04590000040f0000030501100197000000400200043d0000000000120435000002ec01000041000002ec0320009c0000000001024019000000400110021000000304011001c700000bac0001042e0000000001000416000000000110004c000001dd0000c13d00000000010000310bab034b0000040f0bab04300000040f000000400200043d0000000000120435000002ec01000041000002ec0320009c0000000001024019000000400110021000000304011001c700000bac0001042e0000000001000416000000000110004c000001dd0000c13d00000000010000310bab03190000040f0bab052d0000040f000002ec01000041000000400200043d000002ec0320009c0000000001024019000000400110021000000bac0001042e0000000001000416000000000110004c000001dd0000c13d00000000010000310bab03300000040f0bab06840000040f000002ec01000041000000400200043d000002ec0320009c0000000001024019000000400110021000000bac0001042e0000000001000416000000000110004c000001dd0000c13d000000040100008a0000000001100031000002ee02000041000000200310008c00000000030000190000000003024019000002ee01100197000000000410004c000000000200a019000002ee0110009c00000000010300190000000001026019000000000110004c000001dd0000c13d00000004010000390000000201100367000000000101043b0bab04f60000040f0000000002010019000000400100043d000600000001001d0bab03010000040f00000006040000290000000001410049000002ec02000041000002ec0310009c0000000001028019000002ec0340009c000000000204401900000040022002100000006001100210000000000121019f00000bac0001042e0000003f065000390000000006a6016f000000400b00043d00000000066b00190000000007b6004b00000000070000190000000107004039000002ed0860009c000000780000213d0000000107700190000000780000c13d000000400060043f000000000c5b043600000020065000390000000007460019000000000727004b000001dd0000213d000000000750004c000001b60000613d000000000700001900000020077000390000000008b70019000000000947001900000000090904330000000000980435000000000857004b000001ab0000413d000000000457004b000001b60000a13d00000000046b001900000000000404350000000003030433000002ed0430009c000001dd0000213d00000000011300190000001f03100039000002ee04000041000000000523004b00000000050000190000000005048019000002ee03300197000002ee06200197000000000763004b0000000004008019000000000363013f000002ee0330009c00000000030500190000000003046019000000000330004c000001dd0000c13d0000000003010433000002ed0430009c000000780000213d0000003f043000390000000004a4016f000000400700043d0000000004470019000000000574004b00000000050000190000000105004039000002ed0640009c000000780000213d0000000105500190000000780000c13d000000400040043f000000000037043500000020043000390000000005140019000000000225004b000001df0000a13d000000000100001900000bad0001043000030000000c001d00060000000b001d00040000000a001d000000000230004c000001f00000613d000000000200001900000020022000390000000005720019000000000612001900000000060604330000000000650435000000000532004b000001e50000413d000000000132004b000001f00000a13d0000000001470019000000000001043500000006010000290000000001010433000500000001001d000002ed0110009c000000780000213d000100000007001d000000000100041a000000010210019000000001011002700000007f0310018f0000000001036019000200000001001d0000001f0110008c00000000010000190000000101002039000000010110018f000000000112004b000002080000613d000002f10100004100000000001004350000002201000039000000040010043f000002f20100004100000bad000104300000000201000029000000200110008c000002270000413d0000000000000435000002ec010000410000000002000414000002ec0320009c0000000001024019000000c001100210000002ef011001c700008010020000390bab0ba60000040f0000000102200190000001dd0000613d00000005030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000002010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000002270000813d000000000002041b0000000102200039000000000312004b000002230000413d00000005010000290000001f0110008c000002580000a13d0000000000000435000002ec010000410000000002000414000002ec0320009c0000000001024019000000c001100210000002ef011001c700008010020000390bab0ba60000040f000000010220019000000004020000290000000606000029000001dd0000613d000000050300002900000000032301700000002002000039000000000101043b000002460000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b0000023e0000413d0000000504000029000000000343004b000002540000813d00000005030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000060400002900000000024200190000000002020433000000000232016f000000000021041b000000010100003900000005020000290000000102200210000002650000013d0000000501000029000000000110004c00000000010000190000025e0000613d0000000301000029000000000101043300000005040000290000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f000000000010041b00000001010000290bab026e0000040f000000200100003900000100001004430000012000000443000002f00100004100000bac0001042e00050000000000020000000075010434000003070250009c000002dd0000813d0000000104000039000000000304041a000000010230019000000001063002700000007f0360018f00000000060360190000001f0360008c00000000030000190000000103002039000000010330018f000000000232004b000002e30000c13d000300000001001d000000200160008c000500000004001d000400000005001d000002a30000413d000100000006001d000200000007001d0000000000400435000002ec010000410000000002000414000002ec0320009c0000000001024019000000c001100210000002ef011001c700008010020000390bab0ba60000040f0000000102200190000002e90000613d00000004050000290000001f025000390000000502200270000000200350008c0000000002004019000000000301043b00000001010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b00000005040000290000000207000029000002a30000813d000000000002041b0000000102200039000000000312004b0000029f0000413d0000001f0150008c000002d00000a13d0000000000400435000002ec010000410000000002000414000002ec0320009c0000000001024019000000c001100210000002ef011001c700008010020000390bab0ba60000040f0000000102200190000002e90000613d000000200200008a000000040600002900000000032601700000002002000039000000000101043b0000000307000029000002c10000613d0000002002000039000000000400001900000000057200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000002b90000413d000000000363004b000002cc0000813d0000000303600210000000f80330018f000000010400008a000000000334022f000000000343013f00000000027200190000000002020433000000000232016f000000000021041b000000010160021000000001011001bf0000000504000029000002db0000013d000000000150004c0000000001000019000002db0000613d0000000301500210000000010200008a000000000112022f000000000121013f0000000002070433000000000112016f0000000102500210000000000121019f000000000014041b000000000001042d000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad00010430000002f10100004100000000001004350000002201000039000000040010043f000002f20100004100000bad00010430000000000100001900000bad00010430000000040110008a000002ee020000410000001f0310008c00000000030000190000000003022019000002ee01100197000000000410004c0000000002008019000002ee0110009c00000000010300190000000001026019000000000110004c000002ff0000613d00000004010000390000000201100367000000000101043b0000030802100197000000000212004b000002ff0000c13d000000000001042d000000000100001900000bad0001043000000020030000390000000004310436000000000302043300000000003404350000004001100039000000000430004c000003140000613d000000000400001900000000051400190000002004400039000000000624001900000000060604330000000000650435000000000534004b000003090000413d000000000234004b000003140000a13d000000000213001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d000000040110008a000002ee020000410000003f0310008c00000000030000190000000003022019000002ee01100197000000000410004c0000000002008019000002ee0110009c00000000010300190000000001026019000000000110004c0000032e0000613d00000002020003670000000401200370000000000101043b000003050310009c0000032e0000213d0000002402200370000000000202043b000000000001042d000000000100001900000bad00010430000000040110008a000002ee020000410000005f0310008c00000000030000190000000003022019000002ee01100197000000000410004c0000000002008019000002ee0110009c00000000010300190000000001026019000000000110004c000003490000613d00000002030003670000000401300370000000000101043b000003050210009c000003490000213d0000002402300370000000000202043b000003050420009c000003490000213d0000004403300370000000000303043b000000000001042d000000000100001900000bad00010430000000040110008a000002ee020000410000001f0310008c00000000030000190000000003022019000002ee01100197000000000410004c0000000002008019000002ee0110009c00000000010300190000000001026019000000000110004c0000035e0000613d00000004010000390000000201100367000000000101043b000003050210009c0000035e0000213d000000000001042d000000000100001900000bad00010430000000040110008a000002ee020000410000003f0310008c00000000030000190000000003022019000002ee01100197000000000410004c0000000002008019000002ee0110009c00000000010300190000000001026019000000000110004c0000037a0000613d00000002020003670000000401200370000000000101043b000003050310009c0000037a0000213d0000002402200370000000000202043b000000000320004c0000000003000019000000010300c039000000000332004b0000037a0000c13d000000000001042d000000000100001900000bad000104300000000005010019000000040150008a000002ee020000410000007f0310008c00000000030000190000000003022019000002ee01100197000000000410004c0000000002008019000002ee0110009c00000000010300190000000001026019000000000110004c000003de0000613d00000002040003670000000401400370000000000101043b000003050210009c000003de0000213d0000002402400370000000000202043b000003050320009c000003de0000213d0000004403400370000000000303043b0000006406400370000000000806043b000002ed0680009c000003de0000213d0000002306800039000002ee07000041000000000956004b00000000090000190000000009078019000002ee0a500197000002ee06600197000000000ba6004b00000000070080190000000006a6013f000002ee0660009c00000000060900190000000006076019000000000660004c000003de0000c13d0000000406800039000000000464034f000000000604043b000003070460009c000003e00000813d0000003f04600039000000200700008a000000000774016f000000400400043d0000000007740019000000000947004b00000000090000190000000109004039000002ed0a70009c000003e00000213d0000000109900190000003e00000c13d000000400070043f000000000764043600000024088000390000000009680019000000000559004b000003de0000213d0000001f0560018f00000002088003670000000509600272000003cc0000613d000000000a000019000000050ba00210000000000cb70019000000000bb8034f000000000b0b043b0000000000bc0435000000010aa00039000000000b9a004b000003c40000413d000000000a50004c000003db0000613d0000000509900210000000000898034f00000000099700190000000305500210000000000a090433000000000a5a01cf000000000a5a022f000000000808043b0000010005500089000000000858022f00000000055801cf0000000005a5019f000000000059043500000000056700190000000000050435000000000001042d000000000100001900000bad00010430000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad00010430000000040110008a000002ee020000410000003f0310008c00000000030000190000000003022019000002ee01100197000000000410004c0000000002008019000002ee0110009c00000000010300190000000001026019000000000110004c000003fd0000613d00000002020003670000000401200370000000000101043b000003050310009c000003fd0000213d0000002402200370000000000202043b000003050320009c000003fd0000213d000000000001042d000000000100001900000bad000104300000030801100197000003090210009c000000000200001900000001020060390000030a0310009c00000000030000190000000103006039000000000223019f0000030b0110009c00000000010000190000000101006039000000000121019f000000010110018f000000000001042d000003050110019700000000001004350000000501000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f00000001022001900000041d0000613d000000000101043b000000000001042d000000000100001900000bad0001043000000305022001970000000000200435000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f00000001022001900000042e0000613d000000000101043b000000000001042d000000000100001900000bad000104300000030501100198000004420000613d00000000001004350000000301000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000004570000613d000000000101043b000000000101041a000000000001042d000000400100043d00000064021000390000030d03000041000000000032043500000044021000390000030e0300004100000000003204350000002402100039000000290300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000000000100001900000bad0001043000000000001004350000000201000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f00000001022001900000046b0000613d000000000101043b000000000101041a00000305011001980000046d0000613d000000000001042d000000000100001900000bad00010430000000400100043d0000004402100039000003110300004100000000003204350000002402100039000000180300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000312011001c700000bad00010430000000000400041a000000010540019000000001014002700000007f0210018f000000000201c0190000001f0120008c00000000010000190000000101002039000000010110018f000000000115004b000004ae0000c13d000000400100043d0000000003210436000000000550004c000004930000c13d000001000200008a000000000224016f00000000002304350000004004000039000004a40000013d00000020040000390000000000000435000000000520004c000004a40000613d0000031304000041000000000600001900000000050600190000000006350019000000000704041a000000000076043500000001044000390000002006500039000000000726004b000004990000413d0000005f02500039000000200300008a000000000432016f0000000002140019000000000342004b00000000030000190000000103004039000002ed0420009c000004b40000213d0000000103300190000004b40000c13d000000400020043f000000000001042d000002f10100004100000000001004350000002201000039000000040010043f000002f20100004100000bad00010430000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad000104300000000105000039000000000405041a000000010640019000000001014002700000007f0210018f000000000201c0190000001f0120008c00000000010000190000000101002039000000010110018f000000000116004b000004ea0000c13d000000400100043d0000000003210436000000000660004c000004cf0000c13d000001000200008a000000000224016f00000000002304350000004004000039000004e00000013d00000000005004350000002004000039000000000520004c000004e00000613d0000031404000041000000000600001900000000050600190000000006350019000000000704041a000000000076043500000001044000390000002006500039000000000726004b000004d50000413d0000005f02500039000000200300008a000000000432016f0000000002140019000000000342004b00000000030000190000000103004039000002ed0420009c000004f00000213d0000000103300190000004f00000c13d000000400020043f000000000001042d000002f10100004100000000001004350000002201000039000000040010043f000002f20100004100000bad00010430000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad0001043000000000001004350000000201000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f00000001022001900000051a0000613d000000400200043d000000000101043b000000000101041a00000305011001980000051c0000613d000003150120009c000005140000813d0000002001200039000000400010043f0000000000020435000000400100043d000003160210009c000005140000213d0000002002100039000000400020043f0000000000010435000000000001042d000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad00010430000000000100001900000bad000104300000004401200039000003110300004100000000003104350000002401200039000000180300003900000000003104350000030f010000410000000000120435000000040120003900000020030000390000000000310435000002ec01000041000002ec0320009c0000000001024019000000400110021000000312011001c700000bad000104300005000000000002000400000001001d000500000002001d00000000002004350000000201000039000300000001001d000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000005a50000613d000000000101043b000000000101041a0000030501100198000005a70000613d00000004020000290000030502200197000200000002001d000000000212004b000005b90000613d0000000003000411000000000213004b0000056b0000613d000100000003001d00000000001004350000000501000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000005a50000613d000000000101043b000000010200002900000305022001970000000000200435000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000005a50000613d000000000101043b000000000101041a000000ff01100190000005df0000613d000000050100002900000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000005a50000613d000000000101043b000000000201041a00000319022001970000000203000029000000000232019f000000000021041b000000050100002900000000001004350000000301000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000005a50000613d000000400200043d000000000101043b000000000101041a0000030505100198000005ce0000613d000002ec010000410000000003000414000002ec0430009c0000000003018019000002ec0420009c00000000010240190000004001100210000000c002300210000000000112019f0000031a011001c70000800d0200003900000004030000390000031b04000041000000040600002900000005070000290bab0ba10000040f0000000101200190000005a50000613d000000000001042d000000000100001900000bad00010430000000400100043d0000004402100039000003110300004100000000003204350000002402100039000000180300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000312011001c700000bad00010430000000400100043d00000064021000390000031c03000041000000000032043500000044021000390000031d0300004100000000003204350000002402100039000000210300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad000104300000004401200039000003110300004100000000003104350000002401200039000000180300003900000000003104350000030f010000410000000000120435000000040120003900000020030000390000000000310435000002ec01000041000002ec0320009c0000000001024019000000400110021000000312011001c700000bad00010430000000400100043d00000064021000390000031703000041000000000032043500000044021000390000031803000041000000000032043500000024021000390000003d0300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad000104300001000000000002000100000001001d00000000001004350000000201000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000006190000613d000000000101043b000000000101041a00000305011001980000061b0000613d000000010100002900000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000006190000613d000000000101043b000000000101041a0000030501100197000000000001042d000000000100001900000bad00010430000000400100043d0000004402100039000003110300004100000000003204350000002402100039000000180300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000312011001c700000bad000104300004000000000002000200000002001d000300000001001d00000305011001970000000002000411000400000001001d000000000112004b000006720000613d000100000002001d00000000002004350000000501000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000006700000613d000000000101043b00000004020000290000000000200435000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000006700000613d000000000101043b000000000201041a000001000300008a000000000232016f0000000203000029000000000330004c0000000003000019000000010300c039000000000232019f000000000021041b000000400100043d0000000000310435000002ec020000410000000003000414000002ec0430009c0000000003028019000002ec0410009c00000000010280190000004001100210000000c002300210000000000112019f000002ef011001c70000800d0200003900000003030000390000031e04000041000000010500002900000003060000290bab0ba10000040f0000000101200190000006700000613d000000000001042d000000000100001900000bad00010430000000400100043d00000044021000390000031f0300004100000000003204350000002402100039000000190300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000312011001c700000bad000104300006000000000002000300000002001d000400000001001d000600000003001d00000000003004350000000201000039000500000001001d000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000101041a0000030501100198000007760000613d00000000020004110000030502200197000200000002001d000000000212004b000006e40000613d00000000001004350000000501000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b00000002020000290000000000200435000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000101041a000000ff01100190000006e40000c13d000000060100002900000000001004350000000501000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000101041a0000030501100198000007760000613d000000060100002900000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000101041a00000305011001970000000202000029000000000121004b000007b20000c13d000000060100002900000000001004350000000501000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000101041a0000030502100198000007760000613d00000004010000290000030501100197000000000112004b000007880000c13d000200000002001d00000003010000290000030501100198000100000001001d0000079d0000613d000000060100002900000000001004350000000501000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000101041a00000305011001980000000202000029000007760000613d000000000121004b000007880000c13d000000060100002900000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000201041a0000031902200197000000000021041b000000020100002900000000001004350000000301000039000200000001001d000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000201041a000000010220008a000000000021041b000000010100002900000000001004350000000201000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000201041a0000000102200039000000000021041b000000060100002900000000001004350000000501000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000007740000613d000000000101043b000000000201041a00000319022001970000000103000029000000000232019f000000000021041b000000400100043d000002ec020000410000000003000414000002ec0430009c0000000003028019000002ec0410009c00000000010280190000004001100210000000c002300210000000000112019f0000031a011001c70000800d02000039000000040300003900000324040000410000000405000029000000030600002900000006070000290bab0ba10000040f0000000101200190000007740000613d000000000001042d000000000100001900000bad00010430000000400100043d0000004402100039000003110300004100000000003204350000002402100039000000180300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000312011001c700000bad00010430000000400100043d0000006402100039000003220300004100000000003204350000004402100039000003230300004100000000003204350000002402100039000000250300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000000400100043d0000006402100039000003250300004100000000003204350000004402100039000003260300004100000000003204350000002402100039000000240300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000000400100043d00000064021000390000032003000041000000000032043500000044021000390000032103000041000000000032043500000024021000390000002d0300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad000104300007000000000002000400000002001d000500000001001d000000400200043d000003150120009c000008ee0000813d0000002001200039000000400010043f000100000002001d0000000000020435000700000003001d00000000003004350000000201000039000600000001001d000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000101041a0000030501100198000008c70000613d00000000020004110000030502200197000300000002001d000000000212004b0000082e0000613d00000000001004350000000501000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b00000003020000290000000000200435000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000101041a000000ff011001900000082e0000c13d000000070100002900000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000101041a0000030501100198000008c70000613d000000070100002900000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000101041a00000305011001970000000302000029000000000121004b0000091a0000c13d000000070100002900000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000101041a0000030502100198000008c70000613d00000005010000290000030501100197000000000112004b0000000701000029000008d90000c13d000300000002001d00000004020000290000030502200198000200000002001d000008f40000613d00000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000101041a00000305011001980000000302000029000008c70000613d000000000121004b0000000701000029000008d90000c13d00000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000201041a0000031902200197000000000021041b000000030100002900000000001004350000000301000039000300000001001d000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000201041a000000010220008a000000000021041b000000020100002900000000001004350000000301000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000201041a0000000102200039000000000021041b000000070100002900000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f0000000102200190000008c50000613d000000000101043b000000000201041a00000319022001970000000203000029000000000232019f000000000021041b000000400100043d000002ec020000410000000003000414000002ec0430009c0000000003028019000002ec0410009c00000000010280190000004001100210000000c002300210000000000112019f0000031a011001c70000800d02000039000000040300003900000324040000410000000505000029000000040600002900000007070000290bab0ba10000040f0000000101200190000008c50000613d00000005010000290000000402000029000000070300002900000001040000290bab0a980000040f000000000110004c000009090000613d000000000001042d000000000100001900000bad00010430000000400100043d0000004402100039000003110300004100000000003204350000002402100039000000180300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000312011001c700000bad00010430000000400100043d0000006402100039000003220300004100000000003204350000004402100039000003230300004100000000003204350000002402100039000000250300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad00010430000000400100043d0000006402100039000003250300004100000000003204350000004402100039000003260300004100000000003204350000002402100039000000240300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000000400200043d000700000002001d0000030f01000041000000000012043500000004012000390bab0a8b0000040f00000007040000290000000001410049000002ec02000041000002ec0310009c0000000001028019000002ec0340009c000000000204401900000040022002100000006001100210000000000121019f00000bad00010430000000400100043d00000064021000390000032003000041000000000032043500000044021000390000032103000041000000000032043500000024021000390000002d0300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad000104300007000000000002000100000004001d000400000002001d000500000001001d000700000003001d00000000003004350000000201000039000600000001001d000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000101041a000003050110019800000a290000613d00000000020004110000030502200197000300000002001d000000000212004b000009900000613d00000000001004350000000501000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b00000003020000290000000000200435000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000101041a000000ff01100190000009900000c13d000000070100002900000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000101041a000003050110019800000a290000613d000000070100002900000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000101041a00000305011001970000000302000029000000000121004b00000a760000c13d000000070100002900000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000101041a000003050210019800000a290000613d00000005010000290000030501100197000000000112004b00000a3b0000c13d000300000002001d00000004010000290000030501100198000200000001001d00000a500000613d000000070100002900000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000101041a0000030501100198000000030200002900000a290000613d000000000121004b00000a3b0000c13d000000070100002900000000001004350000000401000039000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000201041a0000031902200197000000000021041b000000030100002900000000001004350000000301000039000300000001001d000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000201041a000000010220008a000000000021041b000000020100002900000000001004350000000301000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000201041a0000000102200039000000000021041b000000070100002900000000001004350000000601000029000000200010043f000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000030c011001c700008010020000390bab0ba60000040f000000010220019000000a270000613d000000000101043b000000000201041a00000319022001970000000203000029000000000232019f000000000021041b000000400100043d000002ec020000410000000003000414000002ec0430009c0000000003028019000002ec0410009c00000000010280190000004001100210000000c002300210000000000112019f0000031a011001c70000800d02000039000000040300003900000324040000410000000505000029000000040600002900000007070000290bab0ba10000040f000000010120019000000a270000613d00000005010000290000000402000029000000070300002900000001040000290bab0a980000040f000000000110004c00000a650000613d000000000001042d000000000100001900000bad00010430000000400100043d0000004402100039000003110300004100000000003204350000002402100039000000180300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000312011001c700000bad00010430000000400100043d0000006402100039000003220300004100000000003204350000004402100039000003230300004100000000003204350000002402100039000000250300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000000400100043d0000006402100039000003250300004100000000003204350000004402100039000003260300004100000000003204350000002402100039000000240300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000000400200043d000700000002001d0000030f01000041000000000012043500000004012000390bab0a8b0000040f00000007040000290000000001410049000002ec02000041000002ec0310009c0000000001028019000002ec0340009c000000000204401900000040022002100000006001100210000000000121019f00000bad00010430000000400100043d00000064021000390000032003000041000000000032043500000044021000390000032103000041000000000032043500000024021000390000002d0300003900000000003204350000030f020000410000000000210435000000040210003900000020030000390000000000320435000002ec02000041000002ec0310009c0000000001028019000000400110021000000310011001c700000bad00010430000000600210003900000327030000410000000000320435000000400210003900000328030000410000000000320435000000200210003900000032030000390000000000320435000000200200003900000000002104350000008001100039000000000001042d0006000000000002000300000004001d000200000003001d000100000001001d00000329010000410000000000100439000400000002001d0000000400200443000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000032a011001c700008002020000390bab0ba60000040f000000000301034f000000010120019000000b4f0000613d0000000101000039000000000203043b000000000220004c00000b4e0000613d0000032901000041000000000010043900000004010000290000030501100197000400000001001d0000000400100443000002ec010000410000000002000414000002ec0320009c0000000001024019000000c0011002100000032a011001c700008002020000390bab0ba60000040f000000010220019000000b4f0000613d000000000101043b000000000110004c00000b4f0000613d000000400900043d00000064019000390000008002000039000000000021043500000044019000390000000202000029000000000021043500000001010000290000030501100197000000240290003900000000001204350000032b01000041000000000019043500000000010004110000030501100197000000040290003900000000001204350000000306000029000000000106043300000084029000390000000000120435000000000210004c00000ae60000613d000000a402900039000000000300001900000000042300190000002003300039000000000563001900000000050504330000000000540435000000000413004b00000adb0000413d000000000313004b00000ae60000a13d0000000002210019000000000002043500000000060004140000000402000029000000040320008c00000af00000c13d0000000001000415000000060110008a00000020011000c90000000103000031000600000000001d00000b2d0000013d0000001f01100039000000200300008a000000000131016f000002ec03000041000002ec0490009c000000000403001900000000040940190000004004400210000000a401100039000002ec0510009c00000000010380190000006001100210000000000141019f000002ec0460009c0000000003064019000000c003300210000000000113019f000400000009001d0bab0ba10000040f000000040900002900000000030100190000006003300270000002ec03300197000000200430008c000000200500003900000000050340190000001f0450018f000000050550027200000b160000613d000000000600001900000005076002100000000008790019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b00000b0e0000413d000000000640004c00000b250000613d0000000505500210000000000651034f00000000055900190000000304400210000000000705043300000000074701cf000000000747022f000000000606043b0000010004400089000000000646022f00000000044601cf000000000474019f0000000000450435000100000003001f00030000000103550000000001000415000000050110008a00000020011000c9000500000000001d000000010220019000000b510000613d0000001f02300039000000200300008a000000000332016f0000000002930019000000000332004b00000000030000190000000103004039000002ed0420009c00000b920000213d000000010330019000000b920000c13d000000400020043f000002ee020000410000000103000031000000200430008c00000000040000190000000004024019000002ee03300197000000000530004c000000000200a019000002ee0330009c000000000204c019000000000220004c00000b4f0000c13d00000000020904330000030803200197000000000323004b00000b4f0000c13d000000200110011a000000000102001f0000032b0120009c00000000010000190000000101006039000000000001042d000000000100001900000bad000104300000006001000039000000000230004c00000b7e0000613d0000003f013000390000032c02100197000000400100043d0000000002210019000000000412004b00000000040000190000000104004039000002ed0520009c00000b920000213d000000010440019000000b920000c13d000000400020043f0000000002310436000000030300036700000001050000310000001f0450018f000000050550027200000b6f0000613d000000000600001900000005076002100000000008720019000000000773034f000000000707043b00000000007804350000000106600039000000000756004b00000b670000413d000000000640004c00000b7e0000613d0000000505500210000000000353034f00000000025200190000000304400210000000000502043300000000054501cf000000000545022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000353019f00000000003204350000000021010434000000000310004c00000b980000c13d000000400200043d000400000002001d0000030f01000041000000000012043500000004012000390bab0a8b0000040f00000004040000290000000001410049000002ec02000041000002ec0310009c0000000001028019000002ec0340009c000000000204401900000040022002100000006001100210000000000121019f00000bad00010430000002f10100004100000000001004350000004101000039000000040010043f000002f20100004100000bad00010430000002ec03000041000002ec0420009c0000000002038019000002ec0410009c000000000103801900000060011002100000004002200210000000000121019f00000bad0001043000000ba4002104210000000102000039000000000001042d0000000002000019000000000001042d00000ba9002104230000000102000039000000000001042d0000000002000019000000000001042d00000bab0000043200000bac0001042e00000bad000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000ffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000002000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000000000006352211d00000000000000000000000000000000000000000000000000000000a22cb46400000000000000000000000000000000000000000000000000000000c87b56dc00000000000000000000000000000000000000000000000000000000c87b56dd00000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000a22cb46500000000000000000000000000000000000000000000000000000000b88d4fde000000000000000000000000000000000000000000000000000000006352211e0000000000000000000000000000000000000000000000000000000070a082310000000000000000000000000000000000000000000000000000000095d89b4100000000000000000000000000000000000000000000000000000000095ea7b200000000000000000000000000000000000000000000000000000000095ea7b30000000000000000000000000000000000000000000000000000000023b872dd0000000000000000000000000000000000000000000000000000000042842e0e0000000000000000000000000000000000000000000000000000000001ffc9a70000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000081812fc0000000000000000000000000000000000000020000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000200000008000000000000000000000000000000000000000000000000000000000000000010000000000000000ffffffff000000000000000000000000000000000000000000000000000000005b5e139f0000000000000000000000000000000000000000000000000000000080ac58cd0000000000000000000000000000000000000000000000000000000001ffc9a70000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000400000000000000000000000006c6964206f776e657200000000000000000000000000000000000000000000004552433732313a2061646472657373207a65726f206973206e6f74206120766108c379a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000840000000000000000000000004552433732313a20696e76616c696420746f6b656e20494400000000000000000000000000000000000000000000000000000064000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6000000000000000000000000000000000000000000000000ffffffffffffffe0000000000000000000000000000000000000000000000000ffffffffffffffdf6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000004552433732313a20617070726f76652063616c6c6572206973206e6f7420746fffffffffffffffffffffffff000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000008c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92572000000000000000000000000000000000000000000000000000000000000004552433732313a20617070726f76616c20746f2063757272656e74206f776e6517307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c314552433732313a20617070726f766520746f2063616c6c65720000000000000072206f7220617070726f766564000000000000000000000000000000000000004552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e656f776e65720000000000000000000000000000000000000000000000000000004552433732313a207472616e736665722066726f6d20696e636f727265637420ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef72657373000000000000000000000000000000000000000000000000000000004552433732313a207472616e7366657220746f20746865207a65726f2061646463656976657220696d706c656d656e74657200000000000000000000000000004552433732313a207472616e7366657220746f206e6f6e2045524337323152651806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000150b7a020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ffffffe000000000000000000000000000000000000000000000000000000000000000001a04b4cead6221567427625bfea161f8003c1c616db7321394a912fd781a8f7e"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 5:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 6:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 9:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 11:\"@openzeppelin/contracts/utils/Context.sol\", 14:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 15:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\"\nobject \"ERC721_1175\" {\n    code {\n        {\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721_1175\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            /// @src 5:1456:1469  \"_name = name_\"\n            let _5 := 0x00\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 5:1456:1469  \"_name = name_\" */ _5)), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ newLen)\n            let srcOffset := /** @src 5:1456:1469  \"_name = name_\" */ _5\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_998()\n                let i := /** @src 5:1456:1469  \"_name = name_\" */ _5\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 5:1456:1469  \"_name = name_\" */ _5, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src 5:1456:1469  \"_name = name_\" */ _5\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 5:1456:1469  \"_name = name_\" */ _5, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            let _6 := mload(64)\n            let _7 := datasize(\"ERC721_1175_deployed\")\n            codecopy(_6, dataoffset(\"ERC721_1175_deployed\"), _7)\n            return(_6, _7)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_998() -> data\n        {\n            mstore(/** @src 5:1456:1469  \"_name = name_\" */ 0x00, 0x00)\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            data := keccak256(/** @src 5:1456:1469  \"_name = name_\" */ 0x00, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 5:1479:1496  \"_symbol = symbol_\" */ 0x01)\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src 5:1456:1469  \"_name = name_\"\n                let _1 := 0x00\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src 5:1456:1469  \"_name = name_\" */ _1, _1)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src 5:1456:1469  \"_name = name_\" */ _1, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src 5:1456:1469  \"_name = name_\" */ _1)\n                }\n            }\n        }\n        /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n        function clean_up_bytearray_end_slots_string_storage_1902(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src 5:1479:1496  \"_symbol = symbol_\"\n                let _1 := 0x01\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _2, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _3 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { }\n                lt(start, _3)\n                {\n                    start := add(start, /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _2)\n                }\n            }\n        }\n        /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            /// @src 5:1479:1496  \"_symbol = symbol_\"\n            let _1 := 0x01\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            clean_up_bytearray_end_slots_string_storage_1902(extract_byte_array_length(sload(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)\n                    /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ newLen), /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1))\n            }\n            default /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 10:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"@openzeppelin/contracts/utils/Strings.sol\", 14:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 16:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"ERC721_1175_deployed\" {\n        code {\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_2, _2) }\n                        return(128, add(abi_encode_bool_4397(fun_supportsInterface(abi_decode_bytes4(calldatasize()))), not(127)))\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(_2, _2) }\n                        let ret := fun_getApproved(abi_decode_uint256(calldatasize()))\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_address(memPos_1, ret), memPos_1))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        fun_approve(param, param_1)\n                        return(mload(_1), _2)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        fun_transferFrom(param_2, param_3, param_4)\n                        return(mload(_1), _2)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6, param_7 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        fun_safeTransferFrom_604(param_5, param_6, param_7)\n                        return(mload(_1), _2)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_1 := fun_ownerOf(abi_decode_uint256(calldatasize()))\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_address(memPos_2, ret_1), memPos_2))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_2 := fun_balanceOf(abi_decode_tuple_address(calldatasize()))\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_uint256(memPos_3, ret_2), memPos_3))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string_4407()\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_string(memPos_4, converted_1), memPos_4))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_8, param_9 := abi_decode_addresst_bool(calldatasize())\n                        fun_setApprovalForAll(param_8, param_9)\n                        return(mload(_1), _2)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(_2, _2) }\n                        let param_10, param_11, param_12, param_13 := abi_decode_addresst_addresst_uint256t_bytes(calldatasize())\n                        fun_safeTransferFrom(param_10, param_11, param_12, param_13)\n                        return(mload(_1), _2)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_tokenURI(abi_decode_uint256(calldatasize()))\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_string(memPos_5, ret_3), memPos_5))\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_14, param_15 := abi_decode_addresst_address(calldatasize())\n                        let ret_4 := /** @src 5:4508:4543  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 5:4508:4533  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_4412(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ param_14), param_15))\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_bool(memPos_6, ret_4), memPos_6))\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function abi_decode_bytes4(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_bool_4397(value0) -> tail\n            {\n                tail := 160\n                mstore(128, iszero(iszero(value0)))\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(pos, length), 0x20), 0)\n                }\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function abi_decode_uint256(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                value0 := calldataload(4)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_address_7199() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_decode_tuple_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_bool(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, iszero(iszero(value_1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_7203(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_addresst_addresst_uint256t_bytes(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                value0 := abi_decode_address_7199()\n                value1 := abi_decode_address()\n                value2 := calldataload(68)\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                if iszero(slt(add(offset, 35), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := calldataload(add(4, offset))\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value3 := memPtr\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n            }\n            /// @ast-id 342 @src 5:1570:1870  \"function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {...\"\n            function fun_supportsInterface(var_interfaceId) -> var\n            {\n                /// @src 5:1707:1747  \"interfaceId == type(IERC721).interfaceId\"\n                let _1 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ var_interfaceId, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff))\n                /// @src 5:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr := /** @src 5:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_1, /** @src 5:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                /// @src 5:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                if iszero(expr)\n                {\n                    expr := /** @src 5:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_1, /** @src 5:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                }\n                /// @src 5:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 14:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 14:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                }\n                /// @src 5:1688:1863  \"return...\"\n                var := expr_1\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function mapping_index_access_mapping_address_uint256_of_address_4412(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 5:4508:4526  \"_operatorApprovals\" */ 0x05)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_4427(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 5:12265:12274  \"_balances\" */ 0x03)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 366 @src 5:1929:2133  \"function balanceOf(address owner) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_owner) -> var\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := and(/** @src 5:2028:2047  \"owner != address(0)\" */ var_owner, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1))\n                if /** @src 5:2028:2047  \"owner != address(0)\" */ iszero(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC721: address zero is not a va\")\n                    mstore(add(memPtr, 100), \"lid owner\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src 5:2045:2046  \"0\" */ 0x00, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                mstore(0x20, /** @src 5:2110:2119  \"_balances\" */ 0x03)\n                /// @src 5:2103:2126  \"return _balances[owner]\"\n                var := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sload(keccak256(/** @src 5:2045:2046  \"0\" */ 0x00, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40))\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 394 @src 5:2190:2409  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:6794:6801  \"_owners\" */ 0x02)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 5:2324:2380  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 5:2332:2351  \"owner != address(0)\" */ iszero(iszero(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ cleaned)))\n                /// @src 5:2390:2402  \"return owner\"\n                var := cleaned\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 0)\n                data := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n            }\n            function array_dataslot_string_storage_7202() -> data\n            {\n                mstore(0, /** @src 5:2721:2728  \"_symbol\" */ 0x01)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                data := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := 0\n                let slotValue := sload(ret)\n                let length := ret\n                let _1 := 1\n                length := shr(_1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(ret, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(ret, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string_4407() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 5:2721:2728  \"_symbol\"\n                let _1 := 0x01\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let slotValue := sload(/** @src 5:2721:2728  \"_symbol\" */ _1)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                length := shr(/** @src 5:2721:2728  \"_symbol\" */ _1, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ slotValue)\n                let outOfPlaceEncoding := and(slotValue, /** @src 5:2721:2728  \"_symbol\" */ _1)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, _2))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _2)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_7202()\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 5:2721:2728  \"_symbol\" */ _1)\n                    }\n                    /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            /// @ast-id 453 @src 5:2801:3077  \"function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {...\"\n            function fun_tokenURI(var_tokenId) -> var_mpos\n            {\n                /// @src 5:2914:2921  \"tokenId\"\n                fun_requireMinted(var_tokenId)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPtr := mload(64)\n                finalize_allocation_7203(memPtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_7203(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 5:2977:3070  \"return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                var_mpos := memPtr_1\n            }\n            /// @ast-id 505 @src 5:3468:3874  \"function approve(address to, uint256 tokenId) public virtual override {...\"\n            function fun_approve(var_to, var_tokenId)\n            {\n                /// @src 5:3564:3587  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 5:3605:3616  \"to != owner\"\n                let _2 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:3605:3616  \"to != owner\" */ expr, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if /** @src 5:3605:3616  \"to != owner\" */ eq(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:3605:3616  \"to != owner\" */ var_to, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 5:3605:3616  \"to != owner\" */ _2)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC721: approval to current owne\")\n                    mstore(add(memPtr, 100), \"r\")\n                    revert(memPtr, 132)\n                }\n                /// @src 5:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                let expr_1 := /** @src 5:3686:3707  \"_msgSender() == owner\" */ eq(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:3686:3707  \"_msgSender() == owner\" */ _2)\n                /// @src 5:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(/** @src 5:4508:4543  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 5:4508:4533  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_4412(/** @src 5:3711:3748  \"isApprovedForAll(owner, _msgSender())\" */ expr), /** @src 11:719:729  \"msg.sender\" */ caller())), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0xff)\n                }\n                if iszero(expr_1)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 61)\n                    mstore(add(memPtr_1, 68), \"ERC721: approve caller is not to\")\n                    mstore(add(memPtr_1, 100), \"ken owner or approved for all\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 5:3859:3866  \"tokenId\"\n                fun__approve(var_to, var_tokenId)\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function mapping_index_access_mapping_uint256_address_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 5:11797:11812  \"_tokenApprovals\" */ 0x04)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256_4429(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 5:12337:12344  \"_owners\" */ 0x02)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 523 @src 5:3935:4102  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 5:4045:4052  \"tokenId\"\n                fun_requireMinted(var_tokenId)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:4071:4086  \"_tokenApprovals\" */ 0x04)\n                /// @src 5:4064:4095  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            /// @ast-id 540 @src 5:4169:4322  \"function setApprovalForAll(address operator, bool approved) public virtual override {...\"\n            function fun_setApprovalForAll(var_operator, var_approved)\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if /** @src 5:12990:13007  \"owner != operator\" */ eq(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:12990:13007  \"owner != operator\" */ var_operator, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"ERC721: approve to caller\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:719:729  \"msg.sender\" */ caller())\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(0x20, /** @src 5:13047:13065  \"_operatorApprovals\" */ 0x05)\n                /// @src 5:13047:13082  \"_operatorApprovals[owner][operator]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40), /** @src 5:13047:13082  \"_operatorApprovals[owner][operator]\" */ var_operator)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _2 := iszero(iszero(var_approved))\n                let value := and(sload(_1), not(255))\n                sstore(_1, or(value, and(_2, 255)))\n                /// @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                let _3 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(0x40)\n                mstore(_3, _2)\n                /// @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_3, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x20, /** @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ var_operator)\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            function require_helper_stringliteral_12a8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 585 @src 5:4612:4908  \"function transferFrom(address from, address to, uint256 tokenId) public virtual override {...\"\n            function fun_transferFrom(var_from, var_to, var_tokenId)\n            {\n                /// @src 5:4763:4862  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                require_helper_stringliteral_12a8(/** @src 5:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 5:4893:4900  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n            }\n            /// @ast-id 604 @src 5:4974:5123  \"function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {...\"\n            function fun_safeTransferFrom_604(var_from, var_to, var_tokenId)\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPtr := mload(64)\n                finalize_allocation_7203(memPtr)\n                mstore(memPtr, 0)\n                /// @src 5:5077:5116  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                fun_safeTransferFrom(var_from, var_to, var_tokenId, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ memPtr)\n            }\n            /// @ast-id 634 @src 5:5189:5465  \"function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_mpos)\n            {\n                /// @src 5:5311:5410  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                require_helper_stringliteral_12a8(/** @src 5:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 5:6458:6465  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 5:6484:6531  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos))\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 728 @src 5:7404:7665  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 5:7570:7586  \"spender == owner\"\n                let _2 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:7529:7552  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 5:7570:7586  \"spender == owner\"\n                let _3 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:7570:7586  \"spender == owner\" */ var_spender, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 5:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 5:7570:7586  \"spender == owner\" */ eq(_3, _2)\n                /// @src 5:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                    mstore(0x20, /** @src 5:4508:4526  \"_operatorApprovals\" */ 0x05)\n                    /// @src 5:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(/** @src 5:4508:4543  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40), /** @src 5:7590:7622  \"isApprovedForAll(owner, spender)\" */ var_spender)), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0xff)\n                }\n                /// @src 5:7570:7657  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 5:7626:7657  \"getApproved(tokenId) == spender\" */ eq(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:7626:7646  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 5:7626:7657  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 5:7562:7658  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function require_helper_stringliteral_277f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n            }\n            function update_storage_value_address_to_address(slot)\n            {\n                sstore(slot, and(sload(slot), shl(160, 0xffffffffffffffffffffffff)))\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 1001 @src 5:11257:12460  \"function _transfer(address from, address to, uint256 tokenId) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 5:11354:11377  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\"\n                let _2 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 5:11346:11427  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if /** @src 5:11445:11461  \"to != address(0)\" */ iszero(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:11445:11461  \"to != address(0)\" */ var_to, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 5:11647:11728  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 5:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ eq(cleanup_address(/** @src 5:11655:11678  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId)), /** @src 5:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                update_storage_value_address_to_address(/** @src 5:11797:11821  \"_tokenApprovals[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256(var_tokenId))\n                /// @src 5:12265:12280  \"_balances[from]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_4427(var_from)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                sstore(_3, add(sload(/** @src 5:12265:12285  \"_balances[from] -= 1\" */ _3), /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ not(0)))\n                /// @src 5:12299:12312  \"_balances[to]\"\n                let _4 := mapping_index_access_mapping_address_uint256_of_address_4427(var_to)\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                sstore(_4, add(sload(/** @src 5:12299:12317  \"_balances[to] += 1\" */ _4), /** @src 5:12284:12285  \"1\" */ 0x01))\n                /// @src 5:12337:12358  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 5:12337:12353  \"_owners[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256_4429(var_tokenId), /** @src 5:12337:12358  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 5:12374:12401  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64), /** @src 5:11459:11460  \"0\" */ 0x00, /** @src 5:12374:12401  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to, var_tokenId)\n            }\n            /// @ast-id 1025 @src 5:12572:12743  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun__approve(var_to, var_tokenId)\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:12646:12661  \"_tokenApprovals\" */ 0x04)\n                /// @src 5:12646:12675  \"_tokenApprovals[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40), /** @src 5:12646:12675  \"_tokenApprovals[tokenId] = to\" */ var_to)\n                /// @src 5:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(0x40), /** @src -1:-1:-1 */ 0, /** @src 5:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 5:12699:12722  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 5:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_to, var_tokenId)\n            }\n            /// @ast-id 1071 @src 5:13240:13373  \"function _requireMinted(uint256 tokenId) internal view virtual {...\"\n            function fun_requireMinted(var_tokenId)\n            {\n                /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:6794:6801  \"_owners\" */ 0x02)\n                /// @src 5:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 5:7208:7239  \"_ownerOf(tokenId) != address(0)\" */ iszero(iszero(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1)))))\n            }\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 1133 @src 5:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_1080_mpos) -> var\n            {\n                /// @src 5:14074:14078  \"bool\"\n                var := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                /// @src 5:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 10:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 10:1702:1721  \"account.code.length\" */ extcodesize(/** @src 5:14094:14109  \"to.isContract()\" */ var_to)))\n                case /** @src 5:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 5:14728:14739  \"return true\"\n                    var := /** @src 5:14735:14739  \"true\" */ 0x01\n                    /// @src 5:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 5:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let _1 := and(/** @src 5:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1))\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if iszero(extcodesize(_1))\n                    {\n                        /// @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), _1, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0, /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, sub(abi_encode_address_address_uint256_bytes(add(_2, 4), /** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ var_from, var_tokenId, var_data_1080_mpos), _2), _2, 32)\n                    let expr := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        finalize_allocation(_2, returndatasize())\n                        expr := abi_decode_bytes4_fromMemory(_2, add(_2, returndatasize()))\n                    }\n                    /// @src 5:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 5:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 5:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 5:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 5:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 5:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 5:14317:14698  \"catch (bytes memory reason) {...\"\n                        let var_reason_mpos := extract_returndata()\n                        /// @src 5:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(/** @src 5:14367:14380  \"reason.length\" */ var_reason_mpos)\n                        /// @src 5:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 5:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 5:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 5:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 32, /** @src 5:14571:14666  \"assembly {...\" */ var_reason_mpos), expr_1)\n                        }\n                        default /// @src 5:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _4 := /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_4, /** @src 5:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(229, 4594637))\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_4, sub(abi_encode_stringliteral_1e76(add(_4, /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _4))\n                        }\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212207f984387e7db78a8c221a3300199be1e3193cd9ed026b2afcb92fb82117d58686c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"0100032fea854a1ddc3e512397c58878da68e258b9d8b7fc790529d61e876380","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e0000001200010430000000000000000000000002000000000000000000000000000000400000010000000000000000008c86251e82023a031c97fd297cb2ce817bb9137f73d1ed9a915d37d8f8cc1092"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 10:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1822\" {\n    code {\n        {\n            /// @src 10:194:9363  \"library Address {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Address_1822_deployed\")\n            codecopy(128, dataoffset(\"Address_1822_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 10:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1822_deployed\" {\n        code {\n            {\n                /// @src 10:194:9363  \"library Address {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a364697066735822122005c50d88afc2a225f94b2df98df364dbf82a2146fcba7f013728ea20249ee84f6c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"01000007b73dc3f4327faeee78c4d51a33185d9a327b03ff459daf0b0956b59d","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Counters.sol:Counters\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e00000012000104300000000000000000000000020000000000000000000000000000004000000100000000000000000067ec6b05ee8428e871e02489c7348ce903589ee3f06c9329385896c89ceefa9a"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 12:\"@openzeppelin/contracts/utils/Counters.sol\"\nobject \"Counters_1918\" {\n    code {\n        {\n            /// @src 12:424:1395  \"library Counters {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Counters_1918_deployed\")\n            codecopy(128, dataoffset(\"Counters_1918_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 12:\"@openzeppelin/contracts/utils/Counters.sol\"\n    object \"Counters_1918_deployed\" {\n        code {\n            {\n                /// @src 12:424:1395  \"library Counters {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220d77162debcd89b2e8f8ae184d633c0c9eb40f6b80e3dd49de90e037cabd289096c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"01000007c225d80c7001346d2e2d1c7ea7a4596593e9e2f23a107eeb59b8b665","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000830068e1d17ade9e621a9489111b5ad36deafa671a525eaef6d349fc8bd67987"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 13:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2147\" {\n    code {\n        {\n            /// @src 13:220:2779  \"library Strings {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Strings_2147_deployed\")\n            codecopy(128, dataoffset(\"Strings_2147_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 13:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2147_deployed\" {\n        code {\n            {\n                /// @src 13:220:2779  \"library Strings {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212209ce7b4761f168161c02235c677a1ab7c8db011e1530ab86fe5921cb5b43231d46c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"010000075bd315e081db33adb870c25f5f3da0819289436d3f8fd7d2f5b344af","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000fe508464c084075291b6ccb38f5b8981eb2fa5e5aa51e8e586ec1c98687fdae1"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 16:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_3049\" {\n    code {\n        {\n            /// @src 16:202:12784  \"library Math {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"Math_3049_deployed\")\n            codecopy(128, dataoffset(\"Math_3049_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 16:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_3049_deployed\" {\n        code {\n            {\n                /// @src 16:202:12784  \"library Math {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a364697066735822122039fdc142ca59a220f75954c0f24a31e4077fb8b3bb939d541ab4e469f33bacd46c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"010000076fb98c71d5c7cd88faeee7f9c4b3ec9f459f2066f63d029c2f2b33a0","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"0000008001000039000000400010043f0000000101200190000000060000c13d000000000100001900000012000104300000000001000416000000000110004c0000000e0000c13d0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e00000012000104300000000000000000000000020000000000000000000000000000004000000100000000000000000002b038976cdabc2f24aba08fad4afefe113845f1b46842839280d2124aba3d4c"},"methodIdentifiers":{}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 17:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_3154\" {\n    code {\n        {\n            /// @src 17:215:1262  \"library SignedMath {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let _1 := datasize(\"SignedMath_3154_deployed\")\n            codecopy(128, dataoffset(\"SignedMath_3154_deployed\"), _1)\n            setimmutable(128, \"library_deploy_address\", address())\n            return(128, _1)\n        }\n    }\n    /// @use-src 17:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_3154_deployed\" {\n        code {\n            {\n                /// @src 17:215:1262  \"library SignedMath {...\"\n                mstore(64, 128)\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212205b1325796f17d5dd1d0fe8547dd8c8f05c1f9b2d4c6c617266e85900ee1841926c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"01000007c3854d9737967f04c7e3d835e70cb975eb82f8930081bbe19dc24ff3","factoryDependencies":{}}},"contracts/MangoNFT.sol":{"Mango":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MangoNFT.sol\":\"Mango\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MangoNFT.sol\":{\"keccak256\":\"0x5697ac95402c32b3b745139210b6cda46001e29873d1d6f39484201f1b22dc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31685d6b61ffa50671a57c0a07184eea17c9c98a7eaa13bfd88efad27154ddf1\",\"dweb:/ipfs/QmaYX25x2CiDCXAzG5ASW7QFEsJ632FtrLgNk7fJdEpx1U\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MangoNFT.sol:Mango\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.gt\t@.BB0_41\n\tsub.s!\t@CPI0_24[0], r1, r2\n\tjump.gt\t@.BB0_35\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.le\t@.BB0_30\n\tsub.s!\t@CPI0_32[0], r1, r2\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.eq\t@.BB0_62\n\tsub.s!\t@CPI0_34[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_1[0], r5, r1\n\tjump.ge\t@.BB0_4\n\tadd\t64, r5, r1\n\tst.1\t64, r1\n\tadd\t5, r0, r1\n\tst.1.inc\tr5, r1, r7\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\tr7, r1\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tjump.gt\t@.BB0_4\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr4, r1\n\tld.1\tr5, r6\n\tsub.s!\t@CPI0_5[0], r6, r1\n\tjump.le\t@.BB0_7\n.BB0_4:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_41:\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.gt\t@.BB0_48\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.le\t@.BB0_43\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_88\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_bool, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_setApprovalForAll, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.le\t@.BB0_36\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_71\n\tsub.s!\t@CPI0_27[0], r1, r2\n\tjump.eq\t@.BB0_74\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_balanceOf, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_48:\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.le\t@.BB0_49\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_98\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_address, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_74, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_9\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_30:\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_36[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_43:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_79\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner_3187, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.eq\t@.BB0_66\n\tsub.s!\t@CPI0_30[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_safeTransferFrom_604, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_tokenURI_1408, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_14\n\tadd\tr3, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tadd\tr6, r0, stack-[3]\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r0, stack-[5]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB0_14\n.BB0_13:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_13\n.BB0_14:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_23\n\tadd\tr6, r0, stack-[3]\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r0, stack-[5]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[3], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r6\n\tjump.eq\t@.BB0_20\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_19:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_22\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_22:\n\tadd\t1, r0, r1\n\tshl.s\t1, r7, r2\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB0_15\n.BB0_59:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tand\t@CPI0_39[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_62:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_85:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t@CPI0_39[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_88:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_8185, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_71:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_74:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n\tand\t@CPI0_39[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_98:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_string, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_onlyOwner_3209, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_address, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[5]\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_8191, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_54:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_bytes4, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_supportsInterface, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_79:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_66:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_38[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @modifier_onlyOwner_3196, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256t_bytes, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tsub.s!\t0, r6, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_25\n\tld.1\tr7, r1\n.BB0_25:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r6, r1\n.BB0_15:\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_to_string, @DEFAULT_UNWIND\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transferOwnership, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_byte_array_to_storage_from_string_to_string:\n.func_begin1:\n\tnop\tstack+=[5]\n\tld.1.inc\tr1, r5, r7\n\tsub.s!\t@CPI1_0[0], r5, r2\n\tjump.ge\t@.BB1_1\n\tadd\t1, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r6\n\tand\t127, r6, r3\n\tadd.eq\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tand\t1, r3, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB1_3\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t32, r6, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[4]\n\tjump.lt\t@.BB1_10\n\tadd\tr6, r0, stack-[1]\n\tadd\tr7, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r7\n\tjump.ge\t@.BB1_10\n.BB1_9:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB1_9\n.BB1_10:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB1_19\n\tst.1\t0, r4\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_6\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r6\n\tand!\tr6, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r7\n\tjump.eq\t@.BB1_16\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB1_15:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_15\n.BB1_16:\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB1_18\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB1_18:\n\tshl.s\t1, r6, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB1_11\n.BB1_19:\n\tsub.s!\t0, r5, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB1_11\n\tshl.s\t3, r5, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\tr7, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB1_11:\n\tsstore\tr4, r1\n\tret\n.BB1_1:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_transferOwnership:\n.func_begin2:\n\tadd\tr1, r0, r6\n\tshl.s\t8, r6, r1\n\tand\t@CPI2_0[0], r1, r1\n\tadd\t7, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI2_1[0], r3, r4\n\tor\tr4, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t@CPI2_2[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_2[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI2_2[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tshr.s\t8, r3, r2\n\tand\t@CPI2_3[0], r2, r5\n\tor\t@CPI2_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_5[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_decode_bytes4:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tand\t@CPI3_1[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB3_1\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_encode_string:\n.func_begin4:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB4_5\n\tadd\tr0, r0, r4\n.BB4_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB4_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB4_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB4_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end4:\n\nabi_decode_addresst_uint256:\n.func_begin5:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI5_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB5_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tjump.gt\t@.BB5_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin6:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI6_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI6_1[0], r1, r2\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tjump.gt\t@.BB6_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_address:\n.func_begin7:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI7_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB7_1\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI7_1[0], r1, r2\n\tjump.gt\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_decode_addresst_bool:\n.func_begin8:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI8_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB8_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tjump.gt\t@.BB8_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t0, r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB8_1\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nabi_decode_addresst_addresst_uint256t_bytes:\n.func_begin9:\n\tadd\tr1, r0, r5\n\tsub.s\t4, r5, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t127, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI9_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB9_1\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tjump.gt\t@.BB9_1\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tptr.add.s\t100, r4, r6\n\tld\tr6, r7\n\tsub.s!\t@CPI9_2[0], r7, r6\n\tjump.gt\t@.BB9_1\n\tadd\t35, r7, r6\n\tadd\t@CPI9_0[0], r0, r8\n\tsub!\tr6, r5, r9\n\tadd\t0, r0, r9\n\tadd.ge\tr8, r0, r9\n\tand\t@CPI9_0[0], r5, r10\n\tand\t@CPI9_0[0], r6, r6\n\tsub!\tr6, r10, r11\n\tadd.ge\t0, r0, r8\n\txor\tr6, r10, r6\n\tsub.s!\t@CPI9_0[0], r6, r6\n\tadd\tr9, r0, r6\n\tadd.eq\tr8, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB9_1\n\tadd\t4, r7, r6\n\tptr.add\tr4, r6, r4\n\tld\tr4, r6\n\tsub.s!\t@CPI9_3[0], r6, r4\n\tjump.ge\t@.BB9_7\n\tadd\t63, r6, r4\n\tsub.s\t32, r0, r8\n\tand\tr4, r8, r8\n\tld.1\t64, r4\n\tadd\tr4, r8, r8\n\tsub!\tr8, r4, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI9_2[0], r8, r10\n\tjump.gt\t@.BB9_7\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB9_7\n\tadd\t36, r7, r9\n\tst.1\t64, r8\n\tst.1.inc\tr4, r6, r7\n\tadd\tr6, r9, r8\n\tsub!\tr8, r5, r5\n\tjump.gt\t@.BB9_1\n\tand\t31, r6, r5\n\tptr.add\tstack[@ptr_calldata], r9, r8\n\tshr.s!\t5, r6, r9\n\tjump.eq\t@.BB9_16\n\tadd\tr0, r0, r10\n.BB9_13:\n\tshl.s\t5, r10, r11\n\tadd\tr7, r11, r12\n\tptr.add\tr8, r11, r11\n\tld\tr11, r11\n\tst.1\tr12, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB9_13\n.BB9_16:\n\tsub.s!\t0, r5, r10\n\tjump.eq\t@.BB9_15\n\tshl.s\t5, r9, r9\n\tptr.add\tr8, r9, r8\n\tadd\tr7, r9, r9\n\tshl.s\t3, r5, r5\n\tld.1\tr9, r10\n\tshl\tr10, r5, r10\n\tshr\tr10, r5, r10\n\tld\tr8, r8\n\tsub\t256, r5, r5\n\tshr\tr8, r5, r8\n\tshl\tr8, r5, r5\n\tor\tr5, r10, r5\n\tst.1\tr9, r5\n.BB9_15:\n\tadd\tr7, r6, r5\n\tst.1\tr5, r0\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_7:\n\tadd\t@CPI9_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nabi_decode_addresst_string:\n.func_begin10:\n\tadd\tr1, r0, r3\n\tsub.s\t4, r3, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t63, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\tr2, r0, r4\n\tand\t@CPI10_0[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB10_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tjump.gt\t@.BB10_1\n\tptr.add.s\t36, r2, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI10_2[0], r5, r4\n\tjump.gt\t@.BB10_1\n\tadd\t35, r5, r4\n\tadd\t@CPI10_0[0], r0, r6\n\tsub!\tr4, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI10_0[0], r3, r8\n\tand\t@CPI10_0[0], r4, r4\n\tsub!\tr4, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr4, r8, r4\n\tsub.s!\t@CPI10_0[0], r4, r4\n\tadd\tr7, r0, r4\n\tadd.eq\tr6, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB10_1\n\tadd\t4, r5, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI10_3[0], r4, r2\n\tjump.ge\t@.BB10_6\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r6\n\tand\tr2, r6, r6\n\tld.1\t64, r2\n\tadd\tr2, r6, r6\n\tsub!\tr6, r2, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI10_2[0], r6, r8\n\tjump.gt\t@.BB10_6\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB10_6\n\tadd\t36, r5, r7\n\tst.1\t64, r6\n\tst.1.inc\tr2, r4, r5\n\tadd\tr4, r7, r6\n\tsub!\tr6, r3, r3\n\tjump.gt\t@.BB10_1\n\tand\t31, r4, r3\n\tptr.add\tstack[@ptr_calldata], r7, r6\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB10_15\n\tadd\tr0, r0, r8\n.BB10_12:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB10_12\n.BB10_15:\n\tsub.s!\t0, r3, r8\n\tjump.eq\t@.BB10_14\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr5, r7, r7\n\tshl.s\t3, r3, r3\n\tld.1\tr7, r8\n\tshl\tr8, r3, r8\n\tshr\tr8, r3, r8\n\tld\tr6, r6\n\tsub\t256, r3, r3\n\tshr\tr6, r3, r6\n\tshl\tr6, r3, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB10_14:\n\tadd\tr5, r4, r3\n\tst.1\tr3, r0\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_6:\n\tadd\t@CPI10_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nabi_decode_addresst_address:\n.func_begin11:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\t0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI11_0[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.ge\t0, r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB11_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI11_1[0], r1, r3\n\tjump.gt\t@.BB11_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tjump.gt\t@.BB11_1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nmodifier_onlyOwner:\n.func_begin12:\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI12_0[0], r3, r5\n\tcontext.caller\tr3\n\tsub!\tr5, r3, r3\n\tjump.ne\t@.BB12_1\n\tand\t@CPI12_5[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI12_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI12_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI12_7[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_3\n\tret\n.BB12_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI12_3[0], r0, r2\n\tsub.s!\t@CPI12_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nmodifier_onlyOwner_74:\n.func_begin13:\n\tadd\tr1, r0, r6\n\tadd\t7, r0, r1\n\tsload\tr1, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI13_0[0], r3, r5\n\tcontext.caller\tr3\n\tsub!\tr5, r3, r3\n\tjump.ne\t@.BB13_1\n\tand!\t@CPI13_0[0], r6, r3\n\tjump.eq\t@.BB13_3\n\tand\t@CPI13_5[0], r2, r2\n\tshl.s\t8, r6, r3\n\tand\t@CPI13_6[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI13_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI13_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI13_8[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_5\n\tret\n.BB13_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_3[0], r0, r2\n\tsub.s!\t@CPI13_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nmapping_index_access_mapping_address_uint256_of_address_8191:\n.func_begin14:\n\tand\t@CPI14_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin15:\n\tand\t@CPI15_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tret\n.BB15_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_balanceOf:\n.func_begin16:\n\tand!\t@CPI16_0[0], r1, r1\n\tjump.eq\t@.BB16_1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI16_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI16_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tret\n.BB16_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI16_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI16_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI16_1[0], r0, r2\n\tsub.s!\t@CPI16_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_ownerOf:\n.func_begin17:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI17_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI17_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI17_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB17_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI17_2[0], r1, r1\n\tjump.eq\t@.BB17_3\n\tret\n.BB17_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI17_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_0[0], r0, r2\n\tsub.s!\t@CPI17_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end17:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin18:\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB18_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r5, r5\n\tjump.eq\t@.BB18_7\n\tst.1\t0, r0\n\tsub.s!\t0, r2, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB18_11\n\tadd\t@CPI18_0[0], r0, r5\n\tadd\tr0, r0, r4\n.BB18_10:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB18_10\n.BB18_11:\n\tadd\tr3, r4, r2\n\tjump\t@.BB18_3\n.BB18_7:\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n.BB18_3:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI18_1[0], r2, r4\n\tjump.gt\t@.BB18_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB18_5\n\tst.1\t64, r2\n\tret\n.BB18_1:\n\tadd\t@CPI18_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_5:\n\tadd\t@CPI18_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\ncopy_array_from_storage_to_memory_string_8185:\n.func_begin19:\n\tadd\t1, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB19_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub.s!\t0, r6, r6\n\tjump.eq\t@.BB19_7\n\tst.1\t0, r5\n\tsub.s!\t0, r2, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB19_11\n\tadd\t@CPI19_0[0], r0, r5\n\tadd\tr0, r0, r4\n.BB19_10:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB19_10\n.BB19_11:\n\tadd\tr3, r4, r2\n\tjump\t@.BB19_3\n.BB19_7:\n\tsub.s\t256, r0, r2\n\tand\tr4, r2, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n.BB19_3:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI19_1[0], r2, r4\n\tjump.gt\t@.BB19_5\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB19_5\n\tst.1\t64, r2\n\tret\n.BB19_1:\n\tadd\t@CPI19_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_5:\n\tadd\t@CPI19_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_approve:\n.func_begin20:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, stack-[4]\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI20_2[0], r1, r1\n\tjump.eq\t@.BB20_3\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI20_2[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB20_5\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.eq\t@.BB20_11\n\tadd\tr3, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI20_2[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB20_10\n.BB20_11:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI20_7[0], r2, r2\n\tadd\tstack-[2], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI20_2[0], r1, r5\n\tjump.eq\t@.BB20_14\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI20_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI20_9[0], r0, r4\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB20_1\n\tret\n.BB20_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI20_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_14:\n\tadd\t68, r2, r1\n\tadd\t@CPI20_10[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t24, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI20_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI20_0[0], r0, r1\n\tsub.s!\t@CPI20_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_10:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI20_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI20_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t61, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI20_0[0], r0, r2\n\tsub.s!\t@CPI20_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\nfun_getApproved:\n.func_begin21:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI21_2[0], r1, r1\n\tjump.eq\t@.BB21_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI21_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI21_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI21_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB21_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI21_2[0], r1, r1\n\tret\n.BB21_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB21_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI21_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI21_0[0], r0, r2\n\tsub.s!\t@CPI21_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI21_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end21:\n\nfun_setApprovalForAll:\n.func_begin22:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tand\t@CPI22_0[0], r1, r1\n\tcontext.caller\tr2\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB22_1\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI22_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI22_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI22_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB22_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI22_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI22_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI22_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI22_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI22_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB22_3\n\tret\n.BB22_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB22_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI22_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI22_1[0], r0, r2\n\tsub.s!\t@CPI22_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI22_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end22:\n\nfun_transferFrom:\n.func_begin23:\n\tnop\tstack+=[6]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tadd\tr3, r0, stack-[6]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tjump.eq\t@.BB23_3\n\tcontext.caller\tr2\n\tand\t@CPI23_2[0], r2, r2\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB23_13\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB23_13\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tjump.eq\t@.BB23_3\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI23_2[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB23_12\n.BB23_13:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r2\n\tjump.eq\t@.BB23_3\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI23_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB23_16\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tjump.eq\t@.BB23_18\n\tadd\tr2, r0, stack-[2]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB23_20\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI23_2[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tjump.eq\t@.BB23_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB23_16\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI23_11[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI23_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI23_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI23_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB23_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI23_11[0], r2, r2\n\tadd\tstack-[1], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI23_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI23_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI23_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI23_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI23_13[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB23_1\n\tret\n.BB23_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI23_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_16:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_20:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI23_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB23_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI23_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI23_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI23_0[0], r0, r2\n\tsub.s!\t@CPI23_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI23_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end23:\n\nfun_safeTransferFrom_604:\n.func_begin24:\n\tnop\tstack+=[7]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[5]\n\tld.1\t64, r2\n\tsub.s!\t@CPI24_0[0], r2, r1\n\tjump.ge\t@.BB24_1\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r0\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI24_3[0], r1, r1\n\tjump.eq\t@.BB24_5\n\tcontext.caller\tr2\n\tand\t@CPI24_3[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB24_15\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB24_15\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI24_3[0], r1, r1\n\tjump.eq\t@.BB24_5\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI24_3[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB24_14\n.BB24_15:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI24_3[0], r1, r3\n\tjump.eq\t@.BB24_5\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI24_3[0], r1, r1\n\tsub!\tr3, r1, r1\n\tadd\tstack-[7], r0, r2\n\tjump.ne\t@.BB24_18\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI24_3[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tjump.eq\t@.BB24_20\n\tadd\tr3, r0, stack-[3]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB24_22\n\tst.1\t0, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI24_3[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB24_5\n\tsub!\tr1, r2, r1\n\tadd\tstack-[7], r0, r1\n\tjump.ne\t@.BB24_18\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI24_12[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI24_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI24_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI24_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB24_3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI24_12[0], r2, r2\n\tadd\tstack-[2], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI24_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI24_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI24_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI24_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI24_14[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB24_3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[1], r0, r4\n\tnear_call\tr0, @fun_checkOnERC721Received, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB24_32\n\tret\n.BB24_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI24_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_1[0], r0, r2\n\tsub.s!\t@CPI24_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI24_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI24_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_1[0], r0, r2\n\tsub.s!\t@CPI24_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_1:\n\tadd\t@CPI24_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI24_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_20:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI24_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI24_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_1[0], r0, r2\n\tsub.s!\t@CPI24_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_22:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI24_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_1[0], r0, r2\n\tsub.s!\t@CPI24_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_32:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI24_6[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI24_1[0], r0, r2\n\tsub.s!\t@CPI24_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI24_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB24_14:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI24_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI24_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI24_1[0], r0, r2\n\tsub.s!\t@CPI24_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI24_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end24:\n\nfun_safeTransferFrom:\n.func_begin25:\n\tnop\tstack+=[7]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[5]\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI25_2[0], r1, r1\n\tjump.eq\t@.BB25_3\n\tcontext.caller\tr2\n\tand\t@CPI25_2[0], r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB25_13\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB25_13\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI25_2[0], r1, r1\n\tjump.eq\t@.BB25_3\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI25_2[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB25_12\n.BB25_13:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI25_2[0], r1, r2\n\tjump.eq\t@.BB25_3\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI25_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB25_16\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI25_2[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tjump.eq\t@.BB25_18\n\tadd\tr2, r0, stack-[3]\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB25_20\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI25_2[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB25_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB25_16\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI25_11[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI25_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI25_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI25_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB25_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI25_11[0], r2, r2\n\tadd\tstack-[2], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI25_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI25_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI25_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI25_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI25_13[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB25_1\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[1], r0, r4\n\tnear_call\tr0, @fun_checkOnERC721Received, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB25_30\n\tret\n.BB25_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI25_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_0[0], r0, r2\n\tsub.s!\t@CPI25_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_16:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI25_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI25_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_0[0], r0, r2\n\tsub.s!\t@CPI25_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_18:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI25_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI25_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_0[0], r0, r2\n\tsub.s!\t@CPI25_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_20:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI25_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_0[0], r0, r2\n\tsub.s!\t@CPI25_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_30:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI25_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI25_0[0], r0, r2\n\tsub.s!\t@CPI25_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI25_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB25_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI25_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI25_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI25_0[0], r0, r2\n\tsub.s!\t@CPI25_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI25_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end25:\n\nabi_encode_stringliteral_1e76:\n.func_begin26:\n\tadd\t96, r1, r2\n\tadd\t@CPI26_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI26_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end26:\n\nfun_checkOnERC721Received_8207:\n.func_begin27:\n\tnop\tstack+=[5]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr2, r0, stack-[1]\n\tadd\t@CPI27_0[0], r0, r2\n\tst.2\t0, r2\n\tadd\tr1, r0, stack-[3]\n\tst.2\t4, r1\n\tadd\t@CPI27_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB27_1\n\tadd\t1, r0, r1\n\tld\tr3, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB27_3\n\tadd\t@CPI27_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tand\t@CPI27_3[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t4, r1\n\tadd\t@CPI27_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI27_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI27_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB27_1\n\tld.1\t64, r9\n\tadd\t100, r9, r1\n\tadd\t128, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r9, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI27_4[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.caller\tr1\n\tand\t@CPI27_3[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tadd\t36, r9, r1\n\tst.1\tr1, r0\n\tadd\tstack-[2], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r9, r2\n\tst.1\tr2, r1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB27_11\n\tadd\t164, r9, r2\n\tadd\tr0, r0, r3\n.BB27_8:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB27_8\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB27_11\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB27_11:\n\tcontext.gas_left\tr6\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB27_13\n\tcontext.sp\tr1\n\tsub.s\t5, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\t0, r0, stack-[5]\n\tjump\t@.BB27_18\n.BB27_13:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI27_1[0], r0, r3\n\tsub.s!\t@CPI27_1[0], r9, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr9, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI27_1[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI27_1[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI27_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB27_35\n\tadd\tr0, r0, r6\n.BB27_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB27_15\n.BB27_35:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB27_17\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB27_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr1\n\tsub.s\t4, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\t0, r0, stack-[4]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB27_24\n.BB27_18:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r9, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI27_6[0], r2, r4\n\tjump.gt\t@.BB27_20\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB27_20\n\tst.1\t64, r2\n\tadd\t@CPI27_8[0], r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI27_8[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI27_8[0], r3, r3\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB27_1\n\tld.1\tr9, r2\n\tand\t@CPI27_9[0], r2, r3\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB27_1\n\tdiv.s\t32, r1, r1, r0\n\tadd\tr2, r0, stack[r1]\n\tsub.s!\t@CPI27_4[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB27_3:\n\tret\n.BB27_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_24:\n\tadd\t96, r0, r1\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB27_31\n\tadd\t63, r3, r1\n\tand\t@CPI27_5[0], r1, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI27_6[0], r2, r5\n\tjump.gt\t@.BB27_20\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB27_20\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB27_34\n\tadd\tr0, r0, r6\n.BB27_29:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB27_29\n.BB27_34:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB27_31\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr2, r3\n.BB27_31:\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t0, r1, r3\n\tjump.ne\t@.BB27_32\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t@CPI27_7[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI27_1[0], r0, r2\n\tsub.s!\t@CPI27_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI27_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_20:\n\tadd\t@CPI27_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI27_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB27_32:\n\tadd\t@CPI27_1[0], r0, r3\n\tsub.s!\t@CPI27_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI27_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end27:\n\nfun_checkOnERC721Received:\n.func_begin28:\n\tnop\tstack+=[6]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI28_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr2, r0, stack-[4]\n\tst.2\t4, r2\n\tadd\t@CPI28_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB28_1\n\tadd\t1, r0, r1\n\tld\tr3, r2\n\tsub.s!\t0, r2, r2\n\tjump.eq\t@.BB28_3\n\tadd\t@CPI28_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI28_3[0], r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.2\t4, r1\n\tadd\t@CPI28_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI28_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI28_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB28_1\n\tld.1\t64, r9\n\tadd\t100, r9, r1\n\tadd\t128, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r9, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tand\t@CPI28_3[0], r1, r1\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\t@CPI28_4[0], r0, r1\n\tst.1\tr9, r1\n\tcontext.caller\tr1\n\tand\t@CPI28_3[0], r1, r1\n\tadd\t4, r9, r2\n\tst.1\tr2, r1\n\tadd\tstack-[3], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r9, r2\n\tst.1\tr2, r1\n\tsub.s!\t0, r1, r2\n\tjump.eq\t@.BB28_11\n\tadd\t164, r9, r2\n\tadd\tr0, r0, r3\n.BB28_8:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB28_8\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB28_11\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB28_11:\n\tcontext.gas_left\tr6\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB28_13\n\tcontext.sp\tr1\n\tsub.s\t6, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\t0, r0, stack-[6]\n\tjump\t@.BB28_18\n.BB28_13:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI28_1[0], r0, r3\n\tsub.s!\t@CPI28_1[0], r9, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr9, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI28_1[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI28_1[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr9, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI28_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB28_35\n\tadd\tr0, r0, r6\n.BB28_15:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB28_15\n.BB28_35:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB28_17\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tr9, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB28_17:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr1\n\tsub.s\t5, r1, r1\n\tmul\t32, r1, r1, r0\n\tadd\t0, r0, stack-[5]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB28_24\n.BB28_18:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r9, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI28_6[0], r2, r4\n\tjump.gt\t@.BB28_20\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB28_20\n\tst.1\t64, r2\n\tadd\t@CPI28_8[0], r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI28_8[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI28_8[0], r3, r3\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB28_1\n\tld.1\tr9, r2\n\tand\t@CPI28_9[0], r2, r3\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB28_1\n\tdiv.s\t32, r1, r1, r0\n\tadd\tr2, r0, stack[r1]\n\tsub.s!\t@CPI28_4[0], r2, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB28_3:\n\tret\n.BB28_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_24:\n\tadd\t96, r0, r1\n\tsub.s!\t0, r3, r2\n\tjump.eq\t@.BB28_31\n\tadd\t63, r3, r1\n\tand\t@CPI28_5[0], r1, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI28_6[0], r2, r5\n\tjump.gt\t@.BB28_20\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB28_20\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tadd\tstack[@returndatasize], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB28_34\n\tadd\tr0, r0, r6\n.BB28_29:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr3, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB28_29\n.BB28_34:\n\tsub.s!\t0, r4, r6\n\tjump.eq\t@.BB28_31\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tadd\tr2, r5, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr2, r3\n.BB28_31:\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t0, r1, r3\n\tjump.ne\t@.BB28_32\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t@CPI28_7[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI28_1[0], r0, r2\n\tsub.s!\t@CPI28_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI28_1[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_20:\n\tadd\t@CPI28_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI28_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB28_32:\n\tadd\t@CPI28_1[0], r0, r3\n\tsub.s!\t@CPI28_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI28_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end28:\n\nmodifier_onlyOwner_3187:\n.func_begin29:\n\tadd\t7, r0, r1\n\tsload\tr1, r3\n\tshr.s\t8, r3, r2\n\tand\t@CPI29_0[0], r2, r2\n\tcontext.caller\tr4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB29_1\n\tand!\t255, r3, r4\n\tjump.ne\t@.BB29_3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tor\t1, r3, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI29_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI29_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI29_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI29_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI29_7[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB29_5\n\tret\n.BB29_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI29_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI29_3[0], r0, r2\n\tsub.s!\t@CPI29_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI29_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI29_3[0], r0, r2\n\tsub.s!\t@CPI29_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI29_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB29_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end29:\n\nmodifier_onlyOwner_3196:\n.func_begin30:\n\tadd\t7, r0, r1\n\tsload\tr1, r3\n\tshr.s\t8, r3, r2\n\tand\t@CPI30_0[0], r2, r2\n\tcontext.caller\tr4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB30_1\n\tand!\t255, r3, r4\n\tjump.eq\t@.BB30_3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI30_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI30_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI30_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI30_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI30_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB30_5\n\tret\n.BB30_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI30_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI30_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI30_3[0], r0, r2\n\tsub.s!\t@CPI30_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI30_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB30_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI30_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI30_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI30_3[0], r0, r2\n\tsub.s!\t@CPI30_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI30_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB30_5:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end30:\n\nmodifier_onlyOwner_3209:\n.func_begin31:\n\tnop\tstack+=[7]\n\tadd\t7, r0, r6\n\tsload\tr6, r3\n\tshr.s\t8, r3, r3\n\tand\t@CPI31_0[0], r3, r4\n\tcontext.caller\tr3\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB31_1\n\tadd\t8, r0, r5\n\tsload\tr5, r3\n\tadd\t1, r3, r4\n\tsstore\tr5, r4\n\tld.1\t64, r5\n\tsub.s!\t@CPI31_5[0], r5, r4\n\tjump.ge\t@.BB31_3\n\tadd\tr6, r0, stack-[2]\n\tadd\tr2, r0, stack-[3]\n\tadd\t32, r5, r2\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[1]\n\tst.1\tr5, r0\n\tadd\tr1, r0, stack-[4]\n\tand!\t@CPI31_0[0], r1, r1\n\tadd\tr1, r0, stack-[5]\n\tjump.eq\t@.BB31_5\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI31_0[0], r1, r1\n\tadd\tstack-[2], r0, r1\n\tjump.ne\t@.BB31_9\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB31_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI31_0[0], r1, r1\n\tjump.ne\t@.BB31_9\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI31_9[0], r2, r2\n\tadd\tstack-[5], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t@CPI31_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI31_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI31_11[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB31_7\n\tadd\tstack-[4], r0, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[1], r0, r3\n\tnear_call\tr0, @fun_checkOnERC721Received_8207, @DEFAULT_UNWIND\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB31_18\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI31_0[0], r1, r1\n\tjump.eq\t@.BB31_21\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tld\tr1, r4\n\tadd\tstack-[3], r0, r1\n\tld.1.inc\tr1, r6, r7\n\tsub.s!\t@CPI31_12[0], r6, r1\n\tadd\tstack-[7], r0, r5\n\tjump.gt\t@.BB31_3\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB31_25\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\tr6, r0, stack-[5]\n\tjump.lt\t@.BB31_31\n\tadd\tr3, r0, stack-[2]\n\tadd\tr7, r0, stack-[4]\n\tst.1\t0, r4\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tadd\tstack-[5], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\t0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.ge\t@.BB31_31\n.BB31_30:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB31_30\n.BB31_31:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB31_40\n\tst.1\t0, r4\n\tadd\t@CPI31_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI31_3[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI31_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB31_7\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r6\n\tjump.eq\t@.BB31_37\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB31_36:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB31_36\n.BB31_37:\n\tsub!\tr3, r7, r3\n\tadd\tstack-[7], r0, r5\n\tjump.ge\t@.BB31_39\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB31_39:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB31_32\n.BB31_40:\n\tsub.s!\t0, r6, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB31_42\n\tld.1\tr7, r1\n.BB31_42:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r6, r2\n\tor\tr1, r2, r1\n.BB31_32:\n\tsstore\tr4, r1\n\tld.1\t64, r1\n\tst.1\tr1, r5\n\tadd\t@CPI31_3[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI31_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI31_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI31_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI31_14[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB31_7\n\tret\n.BB31_7:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_9:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI31_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t28, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_3[0], r0, r2\n\tsub.s!\t@CPI31_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_3:\n\tadd\t@CPI31_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI31_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI31_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI31_3[0], r0, r2\n\tsub.s!\t@CPI31_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI31_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI31_3[0], r0, r2\n\tsub.s!\t@CPI31_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_11:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI31_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_3[0], r0, r2\n\tsub.s!\t@CPI31_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_18:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI31_2[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI31_3[0], r0, r2\n\tsub.s!\t@CPI31_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI31_3[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_21:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI31_17[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI31_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI31_3[0], r0, r2\n\tsub.s!\t@CPI31_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI31_19[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB31_25:\n\tadd\t@CPI31_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI31_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end31:\n\nfun_tokenURI_1408:\n.func_begin32:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI32_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI32_2[0], r1, r1\n\tjump.eq\t@.BB32_3\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI32_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_1\n\tld\tr1, r6\n\tsload\tr6, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB32_6\n\tld.1\t64, r1\n\tst.1.inc\tr1, r5, r4\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB32_13\n\tadd\tr5, r0, stack-[1]\n\tadd\tr4, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r6\n\tadd\t@CPI32_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI32_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI32_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB32_1\n\tadd\tstack-[1], r0, r6\n\tsub.s!\t0, r6, r2\n\tjump.eq\t@.BB32_16\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n.BB32_18:\n\tadd\tr5, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB32_18\n\tjump\t@.BB32_19\n.BB32_13:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\tr4, r2\n\tadd\t64, r1, r2\n\tjump\t@.BB32_9\n.BB32_16:\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n.BB32_19:\n\tadd\tr5, r1, r2\n\tadd\tstack-[3], r0, r1\n.BB32_9:\n\tsub\tr2, r1, r2\n\tadd\t31, r2, r3\n\tsub.s\t32, r0, r2\n\tand\tr3, r2, r2\n\tadd\tr2, r1, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI32_4[0], r4, r3\n\tjump.gt\t@.BB32_11\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB32_11\n\tst.1\t64, r4\n\tsub.s!\t@CPI32_5[0], r4, r2\n\tjump.gt\t@.BB32_11\n\tadd\t32, r4, r2\n\tst.1\t64, r2\n\tst.1\tr4, r0\n\tret\n.BB32_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_11:\n\tadd\t@CPI32_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI32_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI32_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI32_0[0], r0, r2\n\tsub.s!\t@CPI32_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI32_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB32_6:\n\tadd\t@CPI32_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI32_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end32:\n\nfun_supportsInterface:\n.func_begin33:\n\tadd\t1, r0, r2\n\tand\t@CPI33_0[0], r1, r1\n\tsub.s!\t@CPI33_1[0], r1, r3\n\tjump.eq\t@.BB33_2\n\tsub.s!\t@CPI33_2[0], r1, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t@CPI33_3[0], r1, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tsub.s!\t@CPI33_4[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tor\tr1, r2, r2\n.BB33_2:\n\tand\t1, r2, r1\n\tret\n.func_end33:\n\n__farcall:\n.func_begin34:\n.tmp0:\n\tfar_call\tr1, r2, @.BB34_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB34_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end34:\n\n__staticcall:\n.func_begin35:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB35_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB35_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end35:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_2:\nCPI12_3:\nCPI13_3:\nCPI14_1:\nCPI15_1:\nCPI16_1:\nCPI17_0:\nCPI20_0:\nCPI21_0:\nCPI22_1:\nCPI23_0:\nCPI24_1:\nCPI25_0:\nCPI27_1:\nCPI28_1:\nCPI29_3:\nCPI30_3:\nCPI31_3:\nCPI32_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 18446744073709551552\nCPI0_2:\n\t.cell 35000235486857333238457904589532778388735775507219305795091882021970497241088\nCPI0_3:\n\t.cell 18446744073709551551\nCPI0_4:\n\t.cell 34954053113486786484430432063886827775524047765063282627511372669488681975808\nCPI0_5:\nCPI9_2:\nCPI10_2:\nCPI18_1:\nCPI19_1:\nCPI27_6:\nCPI28_6:\nCPI31_12:\nCPI32_4:\n\t.cell 18446744073709551615\nCPI0_6:\nCPI1_2:\nCPI22_3:\nCPI29_6:\nCPI30_5:\nCPI31_13:\nCPI32_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\nCPI1_3:\nCPI9_4:\nCPI10_4:\nCPI18_2:\nCPI19_2:\nCPI24_18:\nCPI27_10:\nCPI28_10:\nCPI31_15:\nCPI32_6:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\nCPI1_4:\nCPI9_5:\nCPI10_5:\nCPI18_3:\nCPI19_3:\nCPI24_19:\nCPI27_11:\nCPI28_11:\nCPI31_16:\nCPI32_7:\n\t.cell 2852213850513516153367582212096\nCPI0_10:\n\t.cell 1901074597\nCPI0_11:\n\t.cell 3096268765\nCPI0_12:\n\t.cell 3523527773\nCPI0_13:\n\t.cell 3523527774\nCPI0_14:\n\t.cell 3917867461\nCPI0_15:\n\t.cell 4076725131\nCPI0_16:\n\t.cell 3096268766\nCPI0_17:\n\t.cell 3363526365\nCPI0_18:\n\t.cell 2376452954\nCPI0_19:\n\t.cell 2376452955\nCPI0_20:\n\t.cell 2514000705\nCPI0_21:\n\t.cell 2720838757\nCPI0_22:\n\t.cell 1901074598\nCPI0_23:\n\t.cell 2220280665\nCPI0_24:\n\t.cell 1061922873\nCPI0_25:\n\t.cell 1553423034\nCPI0_26:\n\t.cell 1553423035\nCPI0_27:\n\t.cell 1666326814\nCPI0_28:\n\t.cell 1889567281\nCPI0_29:\n\t.cell 1061922874\nCPI0_30:\n\t.cell 1115958798\nCPI0_31:\n\t.cell 135795451\nCPI0_32:\n\t.cell 135795452\nCPI0_33:\n\t.cell 157198259\nCPI0_34:\n\t.cell 599290589\nCPI0_35:\n\t.cell 33540519\nCPI0_36:\n\t.cell 117300739\nCPI0_37:\n\t.cell 2535301200456458802993406410752\nCPI0_38:\nCPI3_0:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI10_0:\nCPI11_0:\nCPI27_8:\nCPI28_8:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_39:\nCPI2_3:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\nCPI16_0:\nCPI17_2:\nCPI20_2:\nCPI21_2:\nCPI22_0:\nCPI23_2:\nCPI24_3:\nCPI25_2:\nCPI27_3:\nCPI28_3:\nCPI29_0:\nCPI30_0:\nCPI31_0:\nCPI32_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_40:\n\t.cell 2535301202817642044428229017600\nCPI1_0:\nCPI9_3:\nCPI10_3:\n\t.cell 18446744073709551616\nCPI2_0:\nCPI13_6:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI2_1:\nCPI12_5:\nCPI13_5:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI2_4:\nCPI12_6:\nCPI13_7:\nCPI20_8:\nCPI23_12:\nCPI24_13:\nCPI25_12:\nCPI31_10:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_5:\nCPI12_7:\nCPI13_8:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI3_1:\nCPI27_9:\nCPI28_9:\nCPI33_0:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI12_1:\nCPI13_1:\nCPI29_1:\nCPI30_1:\nCPI31_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI12_2:\nCPI13_2:\nCPI16_5:\nCPI17_4:\nCPI20_5:\nCPI21_4:\nCPI22_6:\nCPI23_5:\nCPI24_6:\nCPI25_5:\nCPI27_7:\nCPI28_7:\nCPI29_2:\nCPI30_2:\nCPI31_2:\nCPI32_9:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI12_4:\nCPI13_4:\nCPI17_5:\nCPI20_11:\nCPI21_5:\nCPI22_7:\nCPI23_8:\nCPI24_9:\nCPI25_8:\nCPI29_4:\nCPI30_4:\nCPI31_4:\nCPI32_10:\n\t.cell 7922816251426433759354395033600\nCPI13_9:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI13_10:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI13_11:\nCPI16_6:\nCPI20_6:\nCPI23_6:\nCPI24_7:\nCPI25_6:\nCPI31_19:\n\t.cell 10458117451882892562347801444352\nCPI14_2:\nCPI15_2:\nCPI16_2:\nCPI17_1:\nCPI20_1:\nCPI21_1:\nCPI22_2:\nCPI23_1:\nCPI24_2:\nCPI25_1:\nCPI31_6:\nCPI32_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI16_3:\n\t.cell 49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI16_4:\n\t.cell 31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI17_3:\nCPI20_10:\nCPI21_3:\nCPI23_16:\nCPI24_17:\nCPI25_16:\nCPI32_8:\n\t.cell 31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI18_0:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI19_0:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI20_3:\n\t.cell 48576686418507356219831365361070156960199332940003936683527688631380237877248\nCPI20_4:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI20_7:\nCPI23_11:\nCPI24_12:\nCPI25_11:\nCPI31_9:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI20_9:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI20_12:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI20_13:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI22_4:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI22_5:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI23_3:\nCPI24_4:\nCPI25_3:\n\t.cell 51620973015253767882670130074298444487415533390198982457255807955294746574848\nCPI23_4:\nCPI24_5:\nCPI25_4:\n\t.cell 31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI23_7:\nCPI24_8:\nCPI25_7:\nCPI29_5:\nCPI31_7:\n\t.cell 36357222666917036906347953728281423178299644588805297587650243726591593021440\nCPI23_9:\nCPI24_10:\nCPI25_9:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI23_10:\nCPI24_11:\nCPI25_10:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI23_13:\nCPI24_14:\nCPI25_13:\nCPI31_11:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI23_14:\nCPI24_15:\nCPI25_14:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI23_15:\nCPI24_16:\nCPI25_15:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI24_0:\nCPI31_5:\n\t.cell 18446744073709551584\nCPI26_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI26_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\nCPI27_0:\nCPI28_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI27_2:\nCPI28_2:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI27_4:\nCPI28_4:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI27_5:\nCPI28_5:\n\t.cell 8589934560\nCPI29_7:\n\t.cell 44735773386423822371878160022978782686546674658776136549874639796174445716056\nCPI30_6:\n\t.cell 42393604518183400894871284368897910331008433330724914529002052670013337269162\nCPI30_7:\n\t.cell 36357222666917036906347953000446048792258106436816920891471815860108073631744\nCPI31_8:\n\t.cell 31354931916645375394227994539589573020889145011472493424756597455838364303360\nCPI31_14:\n\t.cell -3219848571885157104380232460838738915370247480356827046648284229139720925977\nCPI31_17:\n\t.cell 45896347150701543392526446815263383394883384187216389466996649829047327522816\nCPI31_18:\n\t.cell 31354931916645419094353240884287878821049935834234830894855383924223471677294\nCPI31_20:\n\t.cell 31354931916645375394055781497097123966713745074512196778955490624888853853043\nCPI32_5:\n\t.cell 18446744073709551583\nCPI33_1:\n\t.cell 33029943018210112371290484984068155479854796940970655776587268077854232936448\nCPI33_2:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI33_3:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI33_4:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","pause()":"8456cb59","paused()":"5c975abb","renounceOwnership()":"715018a6","safeMint(address,string)":"d204c45e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 2:\"@openzeppelin/contracts/interfaces/IERC4906.sol\", 4:\"@openzeppelin/contracts/security/Pausable.sol\", 5:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 6:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 8:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\", 9:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 11:\"@openzeppelin/contracts/utils/Context.sol\", 14:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 15:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 18:\"contracts/MangoNFT.sol\"\nobject \"Mango_3305\" {\n    code {\n        {\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            let memPtr := allocate_memory_array_string()\n            let _1 := 32\n            mstore(add(memPtr, _1), \"Mango\")\n            let memPtr_1 := allocate_memory_array_string_1518()\n            mstore(add(memPtr_1, _1), \"MGK\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            /// @src -1:-1:-1\n            let _2 := 0\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            clean_up_bytearray_end_slots_string_storage_1519(extract_byte_array_length(sload(/** @src -1:-1:-1 */ _2)), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ newLen)\n            let srcOffset := /** @src -1:-1:-1 */ _2\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            srcOffset := _1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1520()\n                let i := /** @src -1:-1:-1 */ _2\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                for { } lt(i, loopEnd) { i := add(i, _1) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _2, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _2\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _2, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(memPtr_1)\n            /// @src 4:996:1011  \"_paused = false\"\n            update_storage_value_offsett_bool_to_bool()\n            /// @src 0:955:967  \"_msgSender()\"\n            fun_transferOwnership(/** @src 11:719:729  \"msg.sender\" */ caller())\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"Mango_3305_deployed\")\n            codecopy(_3, dataoffset(\"Mango_3305_deployed\"), _4)\n            return(_3, _4)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory_array_string() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 5)\n        }\n        function allocate_memory_array_string_1518() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 3)\n        }\n        function update_storage_value_offsett_bool_to_bool()\n        {\n            sstore(/** @src 4:996:1011  \"_paused = false\" */ 0x07, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(sload(/** @src 4:996:1011  \"_paused = false\" */ 0x07), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ not(255)))\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1520() -> data\n        {\n            mstore(/** @src 5:1456:1469  \"_name = name_\" */ 0x00, 0x00)\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            data := keccak256(/** @src 5:1456:1469  \"_name = name_\" */ 0x00, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 5:1479:1496  \"_symbol = symbol_\" */ 0x01)\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1519(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src 5:1456:1469  \"_name = name_\"\n                let _1 := 0x00\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(/** @src 5:1456:1469  \"_name = name_\" */ _1, _1)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let data := keccak256(/** @src 5:1456:1469  \"_name = name_\" */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src 5:1456:1469  \"_name = name_\" */ _1)\n                }\n            }\n        }\n        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src 5:1479:1496  \"_symbol = symbol_\"\n                let _1 := 0x01\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _2, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _3 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { }\n                lt(start, _3)\n                {\n                    start := add(start, /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _2)\n                }\n            }\n        }\n        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            /// @src 5:1479:1496  \"_symbol = symbol_\"\n            let _1 := 0x01\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1)\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ add(shl(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ newLen), /** @src 5:1479:1496  \"_symbol = symbol_\" */ _1))\n            }\n            default /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 5:1479:1496  \"_symbol = symbol_\" */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        /// @ast-id 111 @src 0:2426:2613  \"function _transferOwnership(address newOwner) internal virtual {...\"\n        function fun_transferOwnership(var_newOwner)\n        {\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            let _1 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x07)\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            sstore(/** @src 0:2518:2524  \"_owner\" */ 0x07, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ or(and(_1, not(sub(shl(168, 1), 256))), and(shl(8, var_newOwner), sub(shl(168, 1), 256))))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(shr(8, _1), sub(shl(160, 1), 1)), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 4:\"@openzeppelin/contracts/security/Pausable.sol\", 5:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 8:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\", 10:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/Counters.sol\", 13:\"@openzeppelin/contracts/utils/Strings.sol\", 14:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 16:\"@openzeppelin/contracts/utils/math/Math.sol\", 18:\"contracts/MangoNFT.sol\"\n    object \"Mango_3305_deployed\" {\n        code {\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := 64\n                mstore(_1, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_2, _2) }\n                        return(128, add(abi_encode_bool_8168(/** @src 18:1563:1599  \"super.supportsInterface(interfaceId)\" */ fun_supportsInterface(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ abi_decode_bytes4(calldatasize()))), not(127)))\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted := copy_array_from_storage_to_memory_string()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_string(memPos, converted), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(_2, _2) }\n                        let ret := fun_getApproved(abi_decode_uint256(calldatasize()))\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_address(memPos_1, ret), memPos_1))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        fun_approve(param, param_1)\n                        return(mload(_1), _2)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3, param_4 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        fun_transferFrom(param_2, param_3, param_4)\n                        return(mload(_1), _2)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        /// @src 18:608:665  \"function unpause() public onlyOwner {...\"\n                        modifier_onlyOwner_3196()\n                        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_5, param_6, param_7 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        fun_safeTransferFrom_604(param_5, param_6, param_7)\n                        return(mload(_1), _2)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_1 := and(sload(/** @src 4:1685:1692  \"_paused\" */ 0x07), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0xff)\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_bool(memPos_2, ret_1), memPos_2))\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_2 := fun_ownerOf(abi_decode_uint256(calldatasize()))\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_address(memPos_3, ret_2), memPos_3))\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_2, _2) }\n                        let ret_3 := fun_balanceOf(abi_decode_address(calldatasize()))\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_uint256(memPos_4, ret_3), memPos_4))\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        /// @src 0:1824:1925  \"function renounceOwnership() public virtual onlyOwner {...\"\n                        modifier_onlyOwner()\n                        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        /// @src 18:551:604  \"function pause() public onlyOwner {...\"\n                        modifier_onlyOwner_3187()\n                        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let ret_4 := and(shr(8, sload(/** @src 0:1273:1279  \"_owner\" */ 0x07)), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_address(memPos_5, ret_4), memPos_5))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        abi_decode(calldatasize())\n                        let converted_1 := copy_array_from_storage_to_memory_string_8185()\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_string(memPos_6, converted_1), memPos_6))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_8, param_9 := abi_decode_addresst_bool(calldatasize())\n                        fun_setApprovalForAll(param_8, param_9)\n                        return(mload(_1), _2)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(_2, _2) }\n                        let param_10, param_11, param_12, param_13 := abi_decode_addresst_addresst_uint256t_bytes(calldatasize())\n                        fun_safeTransferFrom(param_10, param_11, param_12, param_13)\n                        return(mload(_1), _2)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 18:1402:1432  \"return super.tokenURI(tokenId)\"\n                        let var_mpos := /** @src 18:1409:1432  \"super.tokenURI(tokenId)\" */ fun_tokenURI_1408(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ abi_decode_uint256(calldatasize()))\n                        let memPos_7 := mload(_1)\n                        return(memPos_7, sub(abi_encode_string(memPos_7, var_mpos), memPos_7))\n                    }\n                    case 0xd204c45e {\n                        if callvalue() { revert(_2, _2) }\n                        let param_14, param_15 := abi_decode_addresst_string(calldatasize())\n                        /// @src 18:669:882  \"function safeMint(address to, string memory uri) public onlyOwner {...\"\n                        modifier_onlyOwner_3209(param_14, param_15)\n                        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                        return(mload(_1), _2)\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_16, param_17 := abi_decode_addresst_address(calldatasize())\n                        let ret_5 := /** @src 5:4508:4543  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 5:4508:4533  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_8191(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ param_16), param_17))\n                        let memPos_8 := mload(_1)\n                        return(memPos_8, sub(abi_encode_bool(memPos_8, ret_5), memPos_8))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        /// @src 0:2074:2272  \"function transferOwnership(address newOwner) public virtual onlyOwner {...\"\n                        modifier_onlyOwner_74(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ abi_decode_address(calldatasize()))\n                        return(mload(_1), _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function abi_decode_bytes4(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function abi_encode_bool_8168(value0) -> tail\n            {\n                tail := 160\n                mstore(128, iszero(iszero(value0)))\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function abi_decode(dataEnd)\n            {\n                if slt(add(dataEnd, not(3)), 0) { revert(0, 0) }\n            }\n            function copy_memory_to_memory(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                if gt(i, length) { mstore(add(dst, length), 0) }\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function abi_decode_uint256(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                value0 := calldataload(4)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_decode_address(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value0 := value\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_decode_addresst_bool(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, iszero(iszero(value_1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value1 := value_1\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_12773(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_bytes(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function abi_decode_addresst_addresst_uint256t_bytes(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if iszero(slt(add(offset, 35), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value3 := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), dataEnd)\n            }\n            function abi_decode_addresst_string(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value0 := value\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if iszero(slt(add(offset, 35), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value1 := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), dataEnd)\n            }\n            function abi_decode_addresst_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                value1 := value_1\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner()\n            {\n                fun_checkOwner()\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x07)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                sstore(/** @src 0:2518:2524  \"_owner\" */ 0x07, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(_1, not(sub(shl(168, 1), 256))))\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64), 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(shr(8, _1), sub(shl(160, 1), 1)), 0)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let value := and(shr(8, sload(/** @src 0:1273:1279  \"_owner\" */ 0x07)), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ value, /** @src 11:719:729  \"msg.sender\" */ caller()))\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_74(var_newOwner)\n            {\n                fun_checkOwner()\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ var_newOwner, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _2 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x07)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                sstore(/** @src 0:2518:2524  \"_owner\" */ 0x07, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ or(and(_2, not(sub(shl(168, 1), 256))), and(shl(8, var_newOwner), sub(shl(168, 1), 256))))\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(shr(8, _2), _1), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ var_newOwner)\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_8191(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 5:4508:4526  \"_operatorApprovals\" */ 0x05)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_8201(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 5:12265:12274  \"_balances\" */ 0x03)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 366 @src 5:1929:2133  \"function balanceOf(address owner) public view virtual override returns (uint256) {...\"\n            function fun_balanceOf(var_owner) -> var\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := and(/** @src 5:2028:2047  \"owner != address(0)\" */ var_owner, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                if /** @src 5:2028:2047  \"owner != address(0)\" */ iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC721: address zero is not a va\")\n                    mstore(add(memPtr, 100), \"lid owner\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src 5:2045:2046  \"0\" */ 0x00, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1)\n                mstore(0x20, /** @src 5:2110:2119  \"_balances\" */ 0x03)\n                /// @src 5:2103:2126  \"return _balances[owner]\"\n                var := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sload(keccak256(/** @src 5:2045:2046  \"0\" */ 0x00, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40))\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 394 @src 5:2190:2409  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:6794:6801  \"_owners\" */ 0x02)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 5:2324:2380  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 5:2332:2351  \"owner != address(0)\" */ iszero(iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ cleaned)))\n                /// @src 5:2390:2402  \"return owner\"\n                var := cleaned\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function array_dataslot_string_storage(ptr) -> data\n            {\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := 0\n                let slotValue := sload(ret)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(memPtr, 64)\n                }\n                case 1 {\n                    mstore(0, 0)\n                    let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string_8185() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 5:2721:2728  \"_symbol\"\n                let _1 := 0x01\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let slotValue := sload(/** @src 5:2721:2728  \"_symbol\" */ _1)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _2 := 0x20\n                switch and(slotValue, /** @src 5:2721:2728  \"_symbol\" */ _1)\n                case /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0 {\n                    mstore(add(memPtr, _2), and(slotValue, not(255)))\n                    ret := add(memPtr, 64)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 5:2721:2728  \"_symbol\" */ _1)\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(add(memPtr, i), _2), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 5:2721:2728  \"_symbol\" */ _1)\n                    }\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    ret := add(add(memPtr, i), _2)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            /// @ast-id 505 @src 5:3468:3874  \"function approve(address to, uint256 tokenId) public virtual override {...\"\n            function fun_approve(var_to, var_tokenId)\n            {\n                /// @src 5:3564:3587  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 5:3605:3616  \"to != owner\"\n                let _2 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:3605:3616  \"to != owner\" */ expr, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1)\n                if /** @src 5:3605:3616  \"to != owner\" */ eq(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:3605:3616  \"to != owner\" */ var_to, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1), /** @src 5:3605:3616  \"to != owner\" */ _2)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC721: approval to current owne\")\n                    mstore(add(memPtr, 100), \"r\")\n                    revert(memPtr, 132)\n                }\n                /// @src 5:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                let expr_1 := /** @src 5:3686:3707  \"_msgSender() == owner\" */ eq(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:3686:3707  \"_msgSender() == owner\" */ _2)\n                /// @src 5:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(sload(/** @src 5:4508:4543  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 5:4508:4533  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_8191(/** @src 5:3711:3748  \"isApprovedForAll(owner, _msgSender())\" */ expr), /** @src 11:719:729  \"msg.sender\" */ caller())), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0xff)\n                }\n                if iszero(expr_1)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 61)\n                    mstore(add(memPtr_1, 68), \"ERC721: approve caller is not to\")\n                    mstore(add(memPtr_1, 100), \"ken owner or approved for all\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 5:3859:3866  \"tokenId\"\n                fun__approve(var_to, var_tokenId)\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function mapping_index_access_mapping_uint256_address_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 5:11797:11812  \"_tokenApprovals\" */ 0x04)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256_8203(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 5:12337:12344  \"_owners\" */ 0x02)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 523 @src 5:3935:4102  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 5:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 5:13321:13337  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:4071:4086  \"_tokenApprovals\" */ 0x04)\n                /// @src 5:4064:4095  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            /// @ast-id 540 @src 5:4169:4322  \"function setApprovalForAll(address operator, bool approved) public virtual override {...\"\n            function fun_setApprovalForAll(var_operator, var_approved)\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if /** @src 5:12990:13007  \"owner != operator\" */ eq(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:12990:13007  \"owner != operator\" */ var_operator, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"ERC721: approve to caller\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:719:729  \"msg.sender\" */ caller())\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(0x20, /** @src 5:13047:13065  \"_operatorApprovals\" */ 0x05)\n                /// @src 5:13047:13082  \"_operatorApprovals[owner][operator]\"\n                let _1 := mapping_index_access_mapping_address_uint256_of_address(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40), /** @src 5:13047:13082  \"_operatorApprovals[owner][operator]\" */ var_operator)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _2 := iszero(iszero(var_approved))\n                let value := and(sload(_1), not(255))\n                sstore(_1, or(value, and(_2, 255)))\n                /// @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                let _3 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(0x40)\n                mstore(_3, _2)\n                /// @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_3, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x20, /** @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ var_operator)\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function require_helper_stringliteral_12a8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 585 @src 5:4612:4908  \"function transferFrom(address from, address to, uint256 tokenId) public virtual override {...\"\n            function fun_transferFrom(var_from, var_to, var_tokenId)\n            {\n                /// @src 5:4763:4862  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                require_helper_stringliteral_12a8(/** @src 5:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 5:4893:4900  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function allocate_memory_array_string() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n            }\n            /// @ast-id 604 @src 5:4974:5123  \"function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {...\"\n            function fun_safeTransferFrom_604(var_from, var_to, var_tokenId)\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_12773(memPtr)\n                mstore(memPtr, 0)\n                /// @src 5:5077:5116  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                fun_safeTransferFrom(var_from, var_to, var_tokenId, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ memPtr)\n            }\n            /// @ast-id 634 @src 5:5189:5465  \"function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_mpos)\n            {\n                /// @src 5:5311:5410  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                require_helper_stringliteral_12a8(/** @src 5:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 5:6458:6465  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 5:6476:6586  \"require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                require_helper_stringliteral_1e76(/** @src 5:6484:6531  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos))\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            function require_helper_stringliteral_1e76(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            /// @ast-id 728 @src 5:7404:7665  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 5:7570:7586  \"spender == owner\"\n                let _2 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:7529:7552  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1)\n                /// @src 5:7570:7586  \"spender == owner\"\n                let _3 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:7570:7586  \"spender == owner\" */ var_spender, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1)\n                /// @src 5:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 5:7570:7586  \"spender == owner\" */ eq(_3, _2)\n                /// @src 5:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _2)\n                    mstore(0x20, /** @src 5:4508:4526  \"_operatorApprovals\" */ 0x05)\n                    /// @src 5:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(sload(/** @src 5:4508:4543  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40), /** @src 5:7590:7622  \"isApprovedForAll(owner, spender)\" */ var_spender)), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0xff)\n                }\n                /// @src 5:7570:7657  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 5:7626:7657  \"getApproved(tokenId) == spender\" */ eq(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:7626:7646  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1), /** @src 5:7626:7657  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 5:7562:7658  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function require_helper_stringliteral_277f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n            }\n            function update_storage_value_address_to_address(slot)\n            {\n                sstore(slot, and(sload(slot), shl(160, 0xffffffffffffffffffffffff)))\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 1001 @src 5:11257:12460  \"function _transfer(address from, address to, uint256 tokenId) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 5:11354:11377  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\"\n                let _2 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1)\n                /// @src 5:11346:11427  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1), /** @src 5:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if /** @src 5:11445:11461  \"to != address(0)\" */ iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:11445:11461  \"to != address(0)\" */ var_to, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 4:1204:1276  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 5:11647:11728  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 5:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ eq(cleanup_address(/** @src 5:11655:11678  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId)), /** @src 5:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                update_storage_value_address_to_address(/** @src 5:11797:11821  \"_tokenApprovals[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256(var_tokenId))\n                /// @src 5:12265:12280  \"_balances[from]\"\n                let _3 := mapping_index_access_mapping_address_uint256_of_address_8201(var_from)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                sstore(_3, add(sload(/** @src 5:12265:12285  \"_balances[from] -= 1\" */ _3), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ not(0)))\n                /// @src 5:12299:12312  \"_balances[to]\"\n                let _4 := mapping_index_access_mapping_address_uint256_of_address_8201(var_to)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                sstore(_4, add(sload(/** @src 5:12299:12317  \"_balances[to] += 1\" */ _4), /** @src 5:11553:11554  \"1\" */ 0x01))\n                /// @src 5:12337:12358  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 5:12337:12353  \"_owners[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256_8203(var_tokenId), /** @src 5:12337:12358  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 5:12374:12401  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64), /** @src 5:11459:11460  \"0\" */ 0x00, /** @src 5:12374:12401  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, var_from, var_to, var_tokenId)\n            }\n            /// @ast-id 1025 @src 5:12572:12743  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun__approve(var_to, var_tokenId)\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:12646:12661  \"_tokenApprovals\" */ 0x04)\n                /// @src 5:12646:12675  \"_tokenApprovals[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40), /** @src 5:12646:12675  \"_tokenApprovals[tokenId] = to\" */ var_to)\n                /// @src 5:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(0x40), /** @src -1:-1:-1 */ 0, /** @src 5:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 5:12699:12722  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 5:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ var_to, var_tokenId)\n            }\n            /// @ast-id 694 @src 5:7120:7246  \"function _exists(uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_exists(var_tokenId) -> var\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ var_tokenId)\n                mstore(0x20, /** @src 5:6794:6801  \"_owners\" */ 0x02)\n                /// @src 5:7201:7239  \"return _ownerOf(tokenId) != address(0)\"\n                var := /** @src 5:7208:7239  \"_ownerOf(tokenId) != address(0)\" */ iszero(iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40)), sub(shl(160, 1), 1))))\n            }\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes_12774(headStart, value0, value2, value3) -> tail\n            {\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), 0)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 1133 @src 5:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received_8207(var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 5:14074:14078  \"bool\"\n                var := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0\n                /// @src 5:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 10:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 10:1702:1721  \"account.code.length\" */ extcodesize(/** @src 5:14094:14109  \"to.isContract()\" */ var_to)))\n                case /** @src 5:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 5:14728:14739  \"return true\"\n                    var := /** @src 5:14735:14739  \"true\" */ 0x01\n                    /// @src 5:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 5:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    let _1 := and(/** @src 5:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if iszero(extcodesize(_1))\n                    {\n                        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _3)\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0, /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, sub(abi_encode_address_address_uint256_bytes_12774(add(_2, 4), /** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ var_tokenId, var_data_mpos), _2), _2, 32)\n                    let expr := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        finalize_allocation(_2, returndatasize())\n                        expr := abi_decode_bytes4_fromMemory(_2, add(_2, returndatasize()))\n                    }\n                    /// @src 5:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 5:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 5:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 5:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 5:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 5:14317:14698  \"catch (bytes memory reason) {...\"\n                        let var_reason_mpos := extract_returndata()\n                        /// @src 5:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(/** @src 5:14367:14380  \"reason.length\" */ var_reason_mpos)\n                        /// @src 5:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 5:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 5:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 5:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 32, /** @src 5:14571:14666  \"assembly {...\" */ var_reason_mpos), expr_1)\n                        }\n                        default /// @src 5:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _4 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64)\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_4, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ shl(229, 4594637))\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_4, sub(abi_encode_stringliteral_1e76(add(_4, /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _4))\n                        }\n                    }\n                }\n            }\n            /// @ast-id 1133 @src 5:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_1080_mpos) -> var\n            {\n                /// @src 5:14074:14078  \"bool\"\n                var := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0\n                /// @src 5:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 10:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 10:1702:1721  \"account.code.length\" */ extcodesize(/** @src 5:14094:14109  \"to.isContract()\" */ var_to)))\n                case /** @src 5:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 5:14728:14739  \"return true\"\n                    var := /** @src 5:14735:14739  \"true\" */ 0x01\n                    /// @src 5:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 5:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    let _1 := and(/** @src 5:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sub(shl(160, 1), 1))\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if iszero(extcodesize(_1))\n                    {\n                        /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _3)\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0, /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, sub(abi_encode_address_address_uint256_bytes(add(_2, 4), /** @src 11:719:729  \"msg.sender\" */ caller(), /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ var_from, var_tokenId, var_data_1080_mpos), _2), _2, 32)\n                    let expr := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0\n                    /// @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        finalize_allocation(_2, returndatasize())\n                        expr := abi_decode_bytes4_fromMemory(_2, add(_2, returndatasize()))\n                    }\n                    /// @src 5:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 5:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 5:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 5:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 5:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 5:14317:14698  \"catch (bytes memory reason) {...\"\n                        let var_reason_mpos := extract_returndata()\n                        /// @src 5:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(/** @src 5:14367:14380  \"reason.length\" */ var_reason_mpos)\n                        /// @src 5:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 5:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 5:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 5:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 32, /** @src 5:14571:14666  \"assembly {...\" */ var_reason_mpos), expr_1)\n                        }\n                        default /// @src 5:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _4 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64)\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_4, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ shl(229, 4594637))\n                            /// @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_4, sub(abi_encode_stringliteral_1e76(add(_4, /** @src 5:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 5:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _4))\n                        }\n                    }\n                }\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_3187()\n            {\n                fun_checkOwner()\n                /// @src 4:1204:1276  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                sstore(/** @src 4:2245:2259  \"_paused = true\" */ 0x07, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ or(and(sload(/** @src 4:2245:2259  \"_paused = true\" */ 0x07), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ not(255)), /** @src 4:2255:2259  \"true\" */ 0x01))\n                /// @src 4:2274:2294  \"Paused(_msgSender())\"\n                let _1 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64)\n                mstore(_1, /** @src 11:719:729  \"msg.sender\" */ caller())\n                /// @src 4:2274:2294  \"Paused(_msgSender())\"\n                log1(_1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 32, /** @src 4:2274:2294  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n            }\n            /// @ast-id 204 @src 4:1767:1873  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if iszero(/** @src 4:1836:1845  \"!paused()\" */ iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(sload(/** @src 4:1685:1692  \"_paused\" */ 0x07), /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0xff)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"Pausable: paused\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_3196()\n            {\n                fun_checkOwner()\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := sload(/** @src 4:1685:1692  \"_paused\" */ 0x07)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if iszero(and(_1, 0xff))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"Pausable: not paused\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 4:1685:1692  \"_paused\" */ 0x07, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(_1, not(255)))\n                /// @src 4:2521:2543  \"Unpaused(_msgSender())\"\n                let _2 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64)\n                mstore(_2, /** @src 11:719:729  \"msg.sender\" */ caller())\n                /// @src 4:2521:2543  \"Unpaused(_msgSender())\"\n                log1(_2, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 32, /** @src 4:2521:2543  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n            }\n            /// @ast-id 31 @src 0:1063:1125  \"modifier onlyOwner() {...\"\n            function modifier_onlyOwner_3209(var_to, var_uri_mpos)\n            {\n                fun_checkOwner()\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := sload(/** @src 18:759:774  \"_tokenIdCounter\" */ 0x08)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                sstore(/** @src 18:759:774  \"_tokenIdCounter\" */ 0x08, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ add(_1, /** @src 12:1050:1051  \"1\" */ 0x01))\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_12773(memPtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if /** @src 5:9004:9020  \"to != address(0)\" */ iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ and(/** @src 5:9004:9020  \"to != address(0)\" */ var_to, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ sub(shl(160, 1), 1)))\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 0x20)\n                    mstore(add(memPtr_1, 36), 0x20)\n                    mstore(add(memPtr_1, 68), \"ERC721: mint to the zero address\")\n                    revert(memPtr_1, 100)\n                }\n                /// @src 5:9067:9125  \"require(!_exists(tokenId), \\\"ERC721: token already minted\\\")\"\n                require_helper_stringliteral_2a63(/** @src 5:9075:9092  \"!_exists(tokenId)\" */ cleanup_bool(iszero(/** @src 5:9076:9092  \"_exists(tokenId)\" */ fun_exists(_1))))\n                /// @src 4:1204:1276  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 5:9271:9329  \"require(!_exists(tokenId), \\\"ERC721: token already minted\\\")\"\n                require_helper_stringliteral_2a63(/** @src 5:9279:9296  \"!_exists(tokenId)\" */ cleanup_bool(iszero(/** @src 5:9280:9296  \"_exists(tokenId)\" */ fun_exists(_1))))\n                /// @src 5:9671:9684  \"_balances[to]\"\n                let _2 := mapping_index_access_mapping_address_uint256_of_address_8201(var_to)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                sstore(_2, add(sload(/** @src 5:9671:9689  \"_balances[to] += 1\" */ _2), /** @src 12:1050:1051  \"1\" */ 0x01))\n                /// @src 5:9710:9731  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 5:9710:9726  \"_owners[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256_8203(_1), /** @src 5:9710:9731  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 5:9747:9780  \"Transfer(address(0), to, tokenId)\"\n                log4(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 5:9747:9780  \"Transfer(address(0), to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 5:9747:9780  \"Transfer(address(0), to, tokenId)\" */ var_to, _1)\n                /// @src 5:8446:8596  \"require(...\"\n                require_helper_stringliteral_1e76(/** @src 5:8467:8520  \"_checkOnERC721Received(address(0), to, tokenId, data)\" */ fun_checkOnERC721Received_8207(var_to, _1, memPtr))\n                /// @src 18:873:876  \"uri\"\n                fun_setTokenURI(_1, var_uri_mpos)\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function require_helper_stringliteral_2a63(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"ERC721: token already minted\")\n                    revert(memPtr, 100)\n                }\n            }\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    let _2 := add(data, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _2) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            /// @ast-id 1434 @src 8:1599:1852  \"function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {...\"\n            function fun_setTokenURI(var_tokenId, var_tokenURI_mpos)\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                if iszero(/** @src 8:1698:1714  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC721URIStorage: URI set of non\")\n                    mstore(add(memPtr, 100), \"existent token\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ var_tokenId)\n                let _1 := 0x20\n                mstore(_1, /** @src 8:1775:1785  \"_tokenURIs\" */ 0x06)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40)\n                let newLen := mload(var_tokenURI_mpos)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                clean_up_bytearray_end_slots_string_storage(dataSlot, extract_byte_array_length(sload(dataSlot)), newLen)\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                srcOffset := _1\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    let dstPtr := array_dataslot_string_storage(dataSlot)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    for { } lt(i, loopEnd) { i := add(i, _1) }\n                    {\n                        sstore(dstPtr, mload(add(var_tokenURI_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, _1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(var_tokenURI_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(dataSlot, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    if newLen\n                    {\n                        value := mload(add(var_tokenURI_mpos, srcOffset))\n                    }\n                    sstore(dataSlot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n                /// @src 8:1822:1845  \"MetadataUpdate(tokenId)\"\n                let _2 := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(0x40)\n                /// @src 8:1822:1845  \"MetadataUpdate(tokenId)\"\n                log1(_2, sub(abi_encode_uint256(_2, var_tokenId), _2), 0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7)\n            }\n            /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                copy_memory_to_memory(add(value, 0x20), pos, length)\n                end := add(pos, length)\n            }\n            /// @ast-id 1408 @src 8:806:1414  \"function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {...\"\n            function fun_tokenURI_1408(var_tokenId) -> var_mpos\n            {\n                /// @src 5:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 5:13321:13337  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ var_tokenId)\n                let _2 := 0x20\n                mstore(_2, /** @src 8:964:974  \"_tokenURIs\" */ 0x06)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ 0x40)\n                let memPtr := mload(0x40)\n                let ret := /** @src -1:-1:-1 */ _1\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let slotValue := sload(dataSlot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _3 := 1\n                switch and(slotValue, _3)\n                case 0 {\n                    mstore(add(memPtr, _2), and(slotValue, not(255)))\n                    ret := add(memPtr, 0x40)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ dataSlot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ _1, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _2)\n                    let i := /** @src -1:-1:-1 */ _1\n                    /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(add(memPtr, i), _2), sload(dataPos))\n                        dataPos := add(dataPos, _3)\n                    }\n                    ret := add(add(memPtr, i), _2)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let converted := allocate_memory_array_string()\n                /// @src 8:1093:1163  \"if (bytes(base).length == 0) {...\"\n                if /** @src 8:1097:1120  \"bytes(base).length == 0\" */ iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(/** @src 8:1097:1108  \"bytes(base)\" */ converted))\n                /// @src 8:1093:1163  \"if (bytes(base).length == 0) {...\"\n                {\n                    /// @src 8:1136:1152  \"return _tokenURI\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 8:1261:1367  \"if (bytes(_tokenURI).length > 0) {...\"\n                if /** @src 8:1265:1292  \"bytes(_tokenURI).length > 0\" */ iszero(iszero(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(/** @src 8:1265:1281  \"bytes(_tokenURI)\" */ memPtr)))\n                /// @src 8:1261:1367  \"if (bytes(_tokenURI).length > 0) {...\"\n                {\n                    /// @src 8:1322:1355  \"abi.encodePacked(base, _tokenURI)\"\n                    let expr_mpos := /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ mload(0x40)\n                    /// @src 8:1322:1355  \"abi.encodePacked(base, _tokenURI)\"\n                    let _4 := sub(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ abi_encode_string_memory_ptr(/** @src 8:1322:1355  \"abi.encodePacked(base, _tokenURI)\" */ memPtr, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ abi_encode_string_memory_ptr(/** @src 8:1322:1355  \"abi.encodePacked(base, _tokenURI)\" */ converted, add(expr_mpos, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _2))), /** @src 8:1322:1355  \"abi.encodePacked(base, _tokenURI)\" */ expr_mpos)\n                    mstore(expr_mpos, add(_4, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ not(31)))\n                    /// @src 8:1322:1355  \"abi.encodePacked(base, _tokenURI)\"\n                    finalize_allocation(expr_mpos, _4)\n                    /// @src 8:1308:1356  \"return string(abi.encodePacked(base, _tokenURI))\"\n                    var_mpos := expr_mpos\n                    leave\n                }\n                /// @src 8:1377:1407  \"return super.tokenURI(tokenId)\"\n                var_mpos := /** @src 8:1384:1407  \"super.tokenURI(tokenId)\" */ fun_tokenURI(var_tokenId)\n            }\n            /// @ast-id 453 @src 5:2801:3077  \"function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {...\"\n            function fun_tokenURI(var_tokenId) -> var__mpos\n            {\n                /// @src 5:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 5:13321:13337  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let memPtr := mload(64)\n                finalize_allocation_12773(memPtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_12773(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 5:2977:3070  \"return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\"\"\n                var__mpos := memPtr_1\n            }\n            /// @ast-id 1349 @src 8:535:740  \"function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {...\"\n            function fun_supportsInterface(var_interfaceId) -> var\n            {\n                /// @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\"\n                let _1 := and(/** @src 8:660:693  \"interfaceId == bytes4(0x49064906)\" */ var_interfaceId, /** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ shl(224, 0xffffffff))\n                /// @src 8:660:733  \"interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId)\"\n                let expr := /** @src 8:660:693  \"interfaceId == bytes4(0x49064906)\" */ eq(/** @src 18:357:1604  \"contract Mango is ERC721, ERC721URIStorage, Pausable, Ownable {...\" */ _1, shl(225, 0x24832483))\n                /// @src 8:660:733  \"interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId)\"\n                if iszero(expr)\n                {\n                    /// @src 5:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                    let expr_1 := /** @src 5:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_1, /** @src 5:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                    /// @src 5:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                    if iszero(expr_1)\n                    {\n                        expr_1 := /** @src 5:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_1, /** @src 5:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                    }\n                    /// @src 5:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                    let expr_2 := expr_1\n                    if iszero(expr_1)\n                    {\n                        expr_2 := /** @src 14:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 14:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                    }\n                    /// @src 8:660:733  \"interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId)\"\n                    expr := expr_2\n                }\n                /// @src 8:653:733  \"return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId)\"\n                var := expr\n            }\n        }\n        data \".metadata\" hex\"a3646970667358221220a77ce38012a22e230f583a7301e90bd7c11bc79240fd12f6bf9b7ea0a408064f6c6578706572696d656e74616cf564736f6c63430008080041\"\n    }\n}\n","hash":"01000487ab7c68fbcd6d8b57ec9781f18d8923ea88f789ebd2c969360031ca11","factoryDependencies":{}}}}}}